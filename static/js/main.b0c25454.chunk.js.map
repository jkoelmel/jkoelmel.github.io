{"version":3,"sources":["Assets/katee-lue-SxR5wZYaOtg-unsplash.jpg","Assets/houseIcon.svg","Assets/doctorIcon.svg","Assets/phoneIcon.svg","Assets/Images/Paul.jpg","Pages/PTProfile/PTProfile.js","Components/PTInfo/PTInfo.js","Assets/Images/logo_with_text.svg","Redux/actions/actions-auth.js","serviceWorker.js","Components/LoginForm/LoginForm.js","Components/RegisterPT/RegisterPT.js","Pages/LandingPage/index.js","Redux/actions/actions-patients.js","Components/PatientList/PatientList.js","Components/Messaging/Messaging.js","Components/PTActivitySummary/PTActivitySummary.js","Components/SearchReport/SearchReport.js","Components/PatientInfo/PatientInfo.js","Components/PatientVideos/PatientVideo.js","Components/PatientWorkout/CurrentWorkout.js","Components/PatientDashboardInfo/PatientDashboardInfo.js","Components/AssignWorkout/AssignWorkout.js","Components/SavedWorkout/SavedWorkout.js","Pages/Dashboard/Dashboard.js","Pages/LoginPage/LoginPage.js","Components/PatientActivitySummary/ActivitySummary.js","Pages/PatientProfile/Profile.js","Components/ExerciseLibrary/Library.js","Components/CreateWorkout/CreateWorkout.js","Pages/ExerciseLibrary/Exercise.js","Pages/Login.js","Routes.js","Components/UI/Theme.js","Components/Header/Header.js","App.js","Redux/reducer/reducer-patients.js","Redux/constants/constants-patient.js","Redux/reducer/reducer-pt.js","Redux/reducer/reducer-workouts.js","Redux/reducer/rootReducer.js","Redux/store/store.js","index.js","Redux/constants/constants-pt.js","Redux/constants/constants-workouts.js","Redux/actions/actions-pt.js"],"names":["module","exports","useStyles","makeStyles","theme","root","maxHeight","flexGrow","paddingTop","background","palette","default","overflow","modal","display","alignItems","justifyContent","paper","backgroundColor","boxShadow","shadows","padding","spacing","outline","paperInfo","textAlign","color","secondary","main","height","width","marginLeft","connect","state","pt","props","classes","React","useState","open","setOpen","console","log","pt_id","className","container","direction","item","md","elevation","primary","email","f_name","l_name","company","description","variant","type","onClick","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","large","sticky","dispatch","EditPT","data","Fragment","initialValues","password","onSubmit","a","setSubmitting","values","isSubmitting","handleChange","handleBlur","touched","errors","form","id","label","name","placeholder","value","onChange","onBlur","disabled","style","marginTop","getAuth","url","params","axios","get","putAuth","put","postAuth","post","Boolean","window","location","hostname","match","margin","flexDirection","box","marginBottom","cssLabel","cssOutlinedInput","borderColor","cssFocused","notchedOutline","borderWidth","patients","errorCode","loginPT","submit","isLoading","error","showPassword","handleShowPassword","Typography","Paper","TextField","InputLabelProps","focused","InputProps","inputMode","helperText","endAdornment","InputAdornment","position","IconButton","fontSize","aria-label","Visibility","VisibilityOff","FormControl","Button","textfield","createNewPT","passwordError","Grid","defaultValue","landingroot","minHeight","backgroundImage","Image","backgroundRepeat","backgroundSize","backgroundPositionY","paddingLeft","buttons","marginRight","LoginModal","Landing","handleLogin","LoginOpen","setLoginOpen","RegisterOpen","setRegisterOpen","src","DoctorIcon","HouseIcon","PhoneIcon","Modal","Fade","Dialog","DialogContent","fetchPatientExerciseVideos","selectedPatient","URLSearchParams","append","then","response","loadPatientExerciseVideos","catch","err","patientExerciseVideos","constantsWorkout","payload","subheader","patientList","fetchPTsPatients","setSelectedPatient","patient","updatePT","useEffect","List","component","ListSubheader","map","p","ListItem","key","patient_id","button","selected","event","patientId","ListItemText","Divider","deleteMessages","fetchMessages","message","sender","addUserMessage","addResponseMessage","title","subtitle","showTimeStamp","senderPlaceHolder","handleNewUserMessage","newMessage","activity","setActivity","setSubheader","handleClick","type_activity","duration","paperUpload","gridUpload","alignContent","UploadTextfield","comments","putEntryComment","entry_id","comment","res","alert","href","patientReport","setPatientReport","setComment","entryID","setEntryID","pr","overflowY","entry","created_on","ListItemIcon","undefined","e","target","multiline","rows","info","setInfo","Avatar","alt","injury","videos","modalComment","thumbnail","putVideoComment","videoID","patient_video_id","setVideos","selectedVideo","URL","setURL","setVideoID","openComment","setOpenComment","pv","patient_video","v","uploaded","video_url","split","stopPropagation","controls","workout","setWorkout","selectedWorkout","setSelectedWorkout","exercises","setExercises","fetchWorkoutExercises","w","handleWorkoutClick","exercise_id","exercise_url","small","gridList","flexWrap","transform","light","titleBar","report","video","PatientExerciseVideos","setUserImage","results","picture","justify","PatientVideo","selectedWorkouts","assignWorkout","checked","setChecked","k","ListItemSecondaryAction","Checkbox","edge","tabIndex","disableRipple","currentIndex","indexOf","newChecked","push","splice","inputProps","popoverDelete","typography","setSelectedWorkouts","deleteWorkout","workout_id","workouts","setWorkouts","openPopOver","setOpenPopOver","anchorEl","setAnchorEl","selectedID","setSelectedID","handleDeleteClose","currentTarget","newcheckedWorkout","Popover","anchorOrigin","vertical","horizontal","transformOrigin","handleDelete","paperMessage","paperPatients","paperProfile","paperSummary","Dashboard","LoginPage","ActivitySummary","fetchSummaryInfo","paperVideos","paperProgress","paperWorkout","Profile","searchKey","filteredExercises","selectedVideos","createExercise","tags","fetchExerciseVideos","selectedExercises","filterExercises","openUpload","setOpenUpload","setExercise_url","exerciseTitle","setExerciseTitle","setTags","ev","PlayArrow","index","newIndex","handleVideoClick","inputprops","autoFocus","required","fontWeight","createWorkout","descriptions","setDescription","videoDescriptions","setVideoDescriptions","workoutTitle","setWorkoutTitle","rowsMax","desc","instructions","submitDescription","paperLibrary","paperWorkouts","paperAssign","Exercise","checkedWorkout","setCheckedWorkout","xs","setError","to","Routes","exact","path","PTProfile","createMuiTheme","common","blue","contrastText","contrastThreshold","tonalOffset","h2","fontFamily","h5","h6","menuButton","logo","accountCircle","logoutPT","auth","anchorElLeft","setAnchorElLeft","anchorElRight","setAnchorElRight","openLeft","openRight","handleClose","AppBar","Toolbar","disableGutters","aria-controls","aria-haspopup","getContentAnchorEl","keepMounted","MenuItem","Link","disableTouchRipple","App","ThemeProvider","CssBaseline","PatientsReducer","handleActions","action","newPatients","slice","find","prospective_pt","user","user_id","initialPTState","PTReducer","constants","persistConfig","storage","whitelist","blacklist","persistReducer","WorkoutReducer","rootReducer","combineReducers","stateReconciler","autoMergeLevel2","middleware","thunk","persistentReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","defaults","baseURL","headers","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister","LOGIN_PT","LOGOUT_PT","CREATE_PT","GET_PT_PATIENTS","GET_ALL_PTS","UPDATE_PT","CHECK_LOGIN_ERROR","SET_SELECTED_PATIENT","GET_EXERCISE_VIDEOS","GET_SELECTED_VIDEOS","GET_SELECTED_WORKOUTS","GET_PATIENT_EXERCISE_VIDEOS","SEARCH_EXERCISES","createPT","getPTByEmail","loginPTError","i","length","j","loadPTsPatients","loadExerciseVideos","filter","toLowerCase"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,4D,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,wLCWrCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,UAAW,OACXC,SAAU,EACVC,WAAY,IACZC,WAAYL,EAAMM,QAAQD,WAAWE,QACrCC,SAAU,UAEZC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAC1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,GACvBC,QAAS,QAEXC,UAAW,CACTH,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPC,WAAY,QA0EHC,iBACb,SAACC,GAAD,MAAY,CACRC,GAAID,EAAMC,MAFDF,EAvEG,SAACG,GACf,IAAMC,EAAUlC,IADS,EAGmBmC,IAAMC,SAAS,GAHlC,gCAIHD,IAAMC,UAAS,IAJZ,mBAIpBC,EAJoB,KAIdC,EAJc,KAQ3BC,QAAQC,IAAIP,EAAMD,IAKhBO,QAAQC,IAAIP,EAAMD,GAAGS,OAKrB,OACI,yBAAKC,UAAWR,EAAQ/B,MACxB,kBAAC,IAAD,CAAMwC,WAAS,EAACvB,QAAS,EAAGwB,UAAU,OACpC,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GACb,kBAAC,IAAD,CAAOJ,UAAWR,EAAQZ,UAAWyB,UAAW,GAC9C,kBAAC,IAAD,iCACA,kBAAC,IAAD,KACL,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAcC,QAAO,QAAWvB,UAAWQ,EAAMD,GAAGiB,SAEtD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcD,QAAO,aAAgBvB,UAAWQ,EAAMD,GAAGkB,UAE3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcF,QAAO,YAAevB,UAAWQ,EAAMD,GAAGmB,UAE1D,kBAAC,IAAD,SAAW,kBAAC,IAAD,CAAcH,QAAO,UAAavB,UAAWQ,EAAMD,GAAGoB,WAEjE,kBAAC,IAAD,SAAW,kBAAC,IAAD,CAAcJ,QAAO,cAAiBvB,UAAWQ,EAAMD,GAAGqB,gBAMjE,kBAAC,IAAD,CAAQ7B,MAAQ,YAAY8B,QAAQ,WAAWC,KAAK,SAASC,QArCtD,WACjBlB,GAAQ,KAoCE,mBAMJ,kBAAC,IAAD,CACFmB,kBAAgB,yBAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QA3Cc,WAClBrB,GAAQ,IA2CJsB,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,MAGN,kBAAC,IAAD,CAAMC,GAAI5B,GACb,yBAAKK,UAAWR,EAAQnB,OACvB,kBAAC,IAAD,e,+KC3FLf,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBoD,MAAO,CACLtC,MAAO,IACPD,OAAQ,KAEVZ,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,aAwJRc,iBACX,SAACC,GAAD,MAAY,CACRC,GAAID,EAAMC,OAGZ,SAACoC,GAAD,MAAe,CAEbC,OAAQ,SAACC,GAAD,OAAUF,EAAUC,YAAOC,QAP5BxC,EApJG,SAACG,GACf,IAAMC,EAAUlC,IAIhB,OAFFuC,QAAQC,IAAIP,EAAMoB,aAGZ,6BAEI,kBAAC,IAAMkB,SAAP,KACE,kBAAC,IAAD,CACAC,cAAe,CAACvB,MAAOhB,EAAMD,GAAGiB,MAAMR,MAAOR,EAAMD,GAAGS,MAAMgC,SAAUxC,EAAMD,GAAGyC,SAASvB,OAAQjB,EAAMD,GAAGkB,OAAQC,OAAQlB,EAAMD,GAAGmB,OAAOE,YAAapB,EAAMD,GAAGqB,YAAYD,QAASnB,EAAMD,GAAGoB,SAC7LsB,SAAQ,uCAAE,WAAOJ,EAAP,kBAAAK,EAAA,6DAAcC,EAAd,EAAcA,cACtBrC,QAAQC,IAAI8B,GACZM,GAAc,GAFN,SAIF3C,EAAMoC,OAAOC,GAJX,OAKRM,GAAc,GALN,2CAAF,0DAQL,gBACLC,EADK,EACLA,OACAC,EAFK,EAELA,aACAC,EAHK,EAGLA,aACAC,EAJK,EAILA,WAJK,EAKLC,QALK,EAMLC,OANK,OASD,kBAAC,IAAD,CAAMxC,UAAWR,EAAQiD,MACtB,kBAAC,IAAD,CAAMxC,WAAS,EAACC,UAAU,SAASxB,QAAS,EAAGP,WAAW,UAenE,kBAAC,IAAD,CAAMgC,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,QACNC,KAAK,QACLC,YAAatD,EAAMD,GAAGiB,MACtBK,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAO5B,MACdwC,SAAUV,EACRW,OAAQV,KAGd,kBAAC,IAAD,CAAMnC,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,WACNC,KAAK,WACLC,YAAatD,EAAMD,GAAGyC,SACtBnB,QAAQ,WACR9B,MAAM,YACNiE,SAAUV,EACVW,OAAQV,EACRzB,KAAK,WACLiC,MAAOX,EAAOJ,YAGlB,kBAAC,IAAD,CAAM5B,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,aACNC,KAAK,SACLC,YAAatD,EAAMD,GAAGkB,OACtBI,QAAQ,WACR9B,MAAM,YACNiE,SAAUV,EACVW,OAAQV,EACRQ,MAAOX,EAAO3B,UAGlB,kBAAC,IAAD,CAAML,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,YACNC,KAAK,SACLC,YAAatD,EAAMD,GAAGmB,OACtBG,QAAQ,WACR9B,MAAM,YACNiE,SAAUV,EACVW,OAAQV,EACRQ,MAAOX,EAAO1B,UAGlB,kBAAC,IAAD,CAAMN,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,UACNC,KAAK,UACLC,YAAatD,EAAMD,GAAGoB,QACtBE,QAAQ,WACR9B,MAAM,YACNiE,SAAUV,EACVW,OAAQV,EACRQ,MAAOX,EAAOzB,WAGlB,kBAAC,IAAD,CAAMP,MAAI,GACR,kBAAC,IAAD,CACEuC,GAAG,iBACHC,MAAM,cACNC,KAAK,cACLC,YAAatD,EAAMD,GAAGqB,YACtBC,QAAQ,WACR9B,MAAM,YACNiE,SAAUV,EACVW,OAAQV,EACRQ,MAAOX,EAAOxB,gBAIpB,kBAAC,IAAD,CAAMR,MAAI,IAGR,kBAAC,IAAD,KACM,kBAAC,IAAD,CACE8C,SAAUb,EAEVtD,MAAM,YACN+B,KAAK,SACLqC,MAAO,CAACC,UAAW,SALrB,6B,oBChKhB/F,EAAOC,QAAU,IAA0B,4C,wICA3C,2HAEa+F,EAAU,SAACC,EAAKC,GAAN,OAAiBC,IAAMC,IAAIH,EAAK,CACnDC,YAGSG,EAAU,SAACJ,EAAKzB,GAAN,OAAe2B,IAAMG,IAAIL,EAAKzB,IAExC+B,EAAW,SAACN,EAAKzB,GAAN,OAAe2B,IAAMK,KAAKP,EAAKzB,K,mKCInCiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+RCAA3G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiF,KAAM,CACJyB,OAAQ,YACRjF,OAAQ,QACRC,MAAO,QACPhB,QAAS,OACTiG,cAAe,SACfhG,WAAY,SACZC,eAAgB,UAElBgG,IAAK,CACHlF,MAAO,QACPmF,aAAc,UAEhBC,SAAU,CACRxF,MAAO,WAGTyF,iBAAkB,CAChB,+BAAgC,CAC9BC,YAAY,uBAIhBC,WAAY,GAEZC,eAAgB,CACdC,YAAa,MACbH,YAAa,0BA+HFpF,eACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,SAEnBC,UAAWxF,EAAMC,GAAGuF,cAEtB,SAACnD,GAAD,MAAe,CAEboD,QAAS,SAAClD,GAAD,OAAUF,EAASoD,YAAQlD,QAXzBxC,EA1HG,SAACG,EAAD,GAAuC,EAA9BwF,OAA+B,IAAvBC,EAAsB,EAAtBA,UAC3BxF,GADiD,EAAXyF,MAC5B3H,KADuC,EAIZmC,YAAe,GAJH,mBAIhDyF,EAJgD,KAIlCC,EAJkC,KAKvD,OAAIH,EACK,gBAACI,EAAA,EAAD,gBAIP,gBAACC,EAAA,EAAD,CAAOrF,UAAWR,EAAQ/B,MACxB,gBAAC,WAAD,KACE,gBAAC,IAAD,CACEqE,cAAe,CAACvB,MAAO,GAAIwB,SAAU,IACrCC,SAAQ,uCAAE,WAAOJ,EAAP,kBAAAK,EAAA,6DAAcC,EAAd,EAAcA,cACtBrC,QAAQC,IAAI8B,GACZM,GAAc,GAFN,SAIF3C,EAAMuF,QAAQlD,GAJZ,OAKRM,GAAc,GALN,2CAAF,0DAQP,gBACCC,EADD,EACCA,OACAC,EAFD,EAECA,aACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,WAJD,EAKCC,QALD,EAMCC,OAND,OAQC,gBAAC,IAAD,CAAMxC,UAAWR,EAAQiD,MACvB,gBAAC6C,EAAA,EAAD,CACExG,MAAM,YACNkB,UAAWR,EAAQ4E,IACnBvB,YAAY,QACZD,KAAK,QACLD,MAAM,QACNsC,QAAS1F,EAAMsF,UACf/B,MAAOX,EAAO5B,MACdwC,SAAUV,EACVW,OAAQV,EAIRiD,gBAAiB,CACf/F,QAAS,CACP/B,KAAM+B,EAAQ8E,SACdkB,QAAShG,EAAQiF,aAGrBgB,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,aAGf,gBAACJ,EAAA,EAAD,CACExG,MAAM,YACN+D,YAAY,WACZ7C,UAAWR,EAAQ4E,IACnBzB,MAAM,WACNC,KAAK,WACLqC,QAAS1F,EAAMsF,UACfc,WAAYpG,EAAMsF,UAClBhE,KAAMqE,EAAe,OAAS,WAC9BpC,MAAOX,EAAOJ,SACdgB,SAAUV,EACVW,OAAQV,EACRmD,WAAY,CACVG,aACE,gBAACC,EAAA,EAAD,CAAgBC,SAAS,OACvB,gBAACC,EAAA,EAAD,CACE7C,MAAO,CAAC8C,SAAU,SAClBC,aAAW,6BACXnH,MAAM,YACNgC,QAAS,WACPqE,GAAoBD,KAGrBA,EAAe,gBAACgB,EAAA,EAAD,MAAiB,gBAACC,EAAA,EAAD,QAIvC3G,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,WAEbH,gBAAiB,CACf/F,QAAS,CACP/B,KAAM+B,EAAQ8E,SACdkB,QAAShG,EAAQiF,eAMvB,gBAAC2B,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACEpD,SAAUb,EAEVtD,MAAM,YACN+B,KAAK,SACLqC,MAAO,CAACC,UAAW,WALrB,mBChJV7F,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFa,gBAAiB,QACjBJ,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZc,OAAQ,IACRC,MAAO,IACPT,QAAS,IAEb6H,UAAW,OA2IAlH,eACX,SAACC,GAAD,MAAY,CACRC,GAAID,EAAMC,OAGd,SAACoC,GAAD,MAAe,CAEX6E,YAAa,SAAC3E,GAAD,OAAUF,EAAU6E,YAAY3E,QAPtCxC,EAtII,SAACG,GAChB,IAAMC,EAAUlC,IADU,EAEUmC,IAAMC,UAAS,GAFzB,gCAGgBD,IAAMC,UAAS,IAH/B,mBAGnB8G,EAHmB,UAK1B,OACI,6BACI,kBAAC,IAAM3E,SAAP,KACI,kBAAC,IAAD,CAAQC,cAAe,CAACvB,MAAO,GAAGR,MAAO,GAAGgC,SAAU,GAAGvB,OAAQ,GAAIC,OAAQ,GAAGE,YAAa,GAAGD,QAAS,IACjGsB,SAAQ,uCAAE,WAAOJ,EAAP,kBAAAK,EAAA,6DAAcC,EAAd,EAAcA,cACpBrC,QAAQC,IAAI8B,GACZM,GAAc,GAFR,SAIA3C,EAAMgH,YAAY3E,GAJlB,OAKNM,GAAc,GALR,2CAAF,0DAQX,gBACKC,EADL,EACKA,OACAC,EAFL,EAEKA,aACAC,EAHL,EAGKA,aACAC,EAJL,EAIKA,WAJL,OAMG,kBAAC,IAAD,CAAMtC,UAAWR,EAAQiD,MACrB,kBAAC4C,EAAA,EAAD,CAAOrF,UAAWR,EAAQ/B,MACtB,kBAACgJ,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAASxB,QAAS,EAAGP,WAAW,UACtD,kBAACsI,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACI5C,GAAG,iBACHC,MAAM,QACNC,KAAK,QACLC,YAAatD,EAAMD,GAAGiB,MACtBmG,aAAa,GACb9F,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAO5B,MACdwC,SAAUV,EACVW,OAAQV,KAGhB,kBAACmE,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACIL,MAAOuB,EACP9D,GAAG,iBACHC,MAAM,WACNC,KAAK,WACL+C,WAAYpG,EAAMsF,UAClBhC,YAAa,GACbjC,QAAQ,WACR9B,MAAM,YACN+B,KAAK,WACLiC,MAAOX,EAAOJ,SACdgB,SAAUV,EACVW,OAAQV,KAGhB,kBAACmE,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACIL,MAAOuB,EACP9D,GAAG,iBACHC,MAAM,aACNC,KAAK,SACL8D,aAAa,GACb9F,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAO3B,OACduC,SAAUV,EACVW,OAAQV,KAGhB,kBAACmE,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACIL,MAAOuB,EACP9D,GAAG,iBACHC,MAAM,YACNC,KAAK,SACL8D,aAAa,GACb9F,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAO1B,OACdsC,SAAUV,EACVW,OAAQV,KAGhB,kBAACmE,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACIL,MAAOuB,EACP9D,GAAG,iBACHC,MAAM,UACNC,KAAK,UACL8D,aAAa,GACb9F,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAOzB,QACdqC,SAAUV,EACVW,OAAQV,KAGhB,kBAACmE,EAAA,EAAD,CAAMtG,MAAI,GACN,kBAACmF,EAAA,EAAD,CACIL,MAAOuB,EACP9D,GAAG,iBACHC,MAAM,cACNC,KAAK,cACL8D,aAAa,GACb9F,QAAQ,WACR9B,MAAM,YACNgE,MAAOX,EAAOxB,YACdoC,SAAUV,EACVW,OAAQV,KAGhB,kBAAC8D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIpD,SAAUb,EAEVtD,MAAM,YACN+B,KAAK,SACLqC,MAAO,CAACC,UAAW,SALvB,gCCtHlC7F,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCmJ,YAAa,CACXC,UAAW,OACXC,gBAAgB,OAAD,OAASC,IAAT,KACfC,iBAAkB,YAClBC,eAAgB,QAChBC,oBAAqB,QACrB/I,QAAS,OACTE,eAAgB,SAChBR,WAAY,MACZsJ,YAAa,IACblJ,SAAU,UAEZmJ,QAAS,CACPrI,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BmE,UAAW,GACXiE,YAAa,IAEfC,WAAY,CACVnJ,QAAS,OACTC,WAAY,SACZC,eAAgB,cA8GLkJ,EA1GC,SAAC,GAAyB,EAAxBC,YAAwB,EAAXtC,MAAY,IACnCzF,EAAUlC,IADwB,EAENmC,IAAMC,UAAS,GAFT,mBAEjC8H,EAFiC,KAEtBC,EAFsB,OAGAhI,IAAMC,UAAS,GAHf,mBAGjCgI,EAHiC,KAGnBC,EAHmB,KAqBxC,OACE,yBAAK3H,UAAWR,EAAQmH,aACtB,kBAACF,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAAS/B,WAAW,SAASO,QAAS,GAC9D,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,OACxB,kBAACuG,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,KAAKzC,WAAW,UAApC,yCAON,kBAACsI,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,MAAMxB,QAAS,GACvC,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAAS/B,WAAW,UAC5C,yBAAKyJ,IAAKC,MACV,kBAACzC,EAAA,EAAD,CAAYxE,QAAQ,MAApB,gCAGJ,kBAAC6F,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAAS/B,WAAW,UAC5C,yBAAKyJ,IAAKE,MACV,kBAAC1C,EAAA,EAAD,CAAYxE,QAAQ,MAApB,uCAKJ,kBAAC6F,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAAS/B,WAAW,UAC5C,yBAAKyJ,IAAKG,MACV,kBAAC3C,EAAA,EAAD,CAAYxE,QAAQ,MAApB,uCAOR,kBAAC6F,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAAS/B,WAAW,UAC5C,kBAACsI,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkG,EAAA,EAAD,CACEzF,QAAQ,YACRZ,UAAWR,EAAQ2H,QACnBrG,QApDe,WACzB6G,GAAgB,KAgDR,iBAQF,kBAACK,EAAA,EAAD,CACErI,KAAM+H,EACNzG,QAvDkB,WAC1B0G,GAAgB,IAuDR5G,kBAAgB,qBAChBC,mBAAiB,2BACjBhB,UAAWR,EAAQ6H,YAEnB,kBAACY,EAAA,EAAD,CAAM1G,GAAImG,GACZ,yBAAK1H,UAAWR,EAAQnB,OACxB,kBAAC,EAAD,SAKA,kBAACoI,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkG,EAAA,EAAD,CAAQrG,UAAWR,EAAQ2H,QAASrG,QAhFtB,WACtB2G,GAAa,KA+EL,iCAMN,kBAACS,EAAA,EAAD,CACEvI,KAAM6H,EACNvG,QApFmB,WACvBwG,GAAa,IAoFT1G,kBAAgB,oBAChBf,UAAWR,EAAQ6H,YAGnB,kBAACc,EAAA,EAAD,KACE,kBAAC,EAAD,U,+DCvCGC,GAA6B,SAACC,GACzC,IAAM/E,EAAS,IAAIgF,gBAGnB,OAFAhF,EAAOiF,OAAO,UAAWF,GACzBxI,QAAQC,IAAI,sCACL,SAAC4B,GACN0B,aAAQ,wBAAyBE,GAC9BkF,MAAK,SAACC,GAAD,OAAc/G,EAASgH,GAA0BD,EAAS7G,UAC/D+G,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAI8I,QAIrBF,GAA4B,SAACG,GAAD,MAA4B,CACjEhI,KAAMiI,KACNC,QAASF,ICnGPvL,I,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBqD,OAAQ,CACNnD,gBAAiB,QACjB0H,SAAU,IAEZgD,UAAW,CACThD,SAAU,IAEZiD,YAAa,CACX3K,gBAAiB,cA6GNc,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,SACnByD,gBAAiBhJ,EAAMC,GAAG+I,oBAE5B,SAAC3G,GAAD,MAAe,CAEbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,KACvDwG,YAAa,SAACjH,GAAD,OAAQoC,EAAS6E,YAAYjH,KAC1C6J,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,KAC7DC,SAAU,SAAC/J,GAAD,OAAQoC,EAAS2H,YAAS/J,KACpC8I,2BAA4B,SAACC,GAAD,OAC1B3G,EAAS0G,GAA2BC,QAf3BjJ,EAzGK,SAACG,GACnB,IAAMC,EAAUlC,KADa,EAELoC,oBAAS,GAFJ,mBAEhBE,GAFgB,WAI7B0J,qBAAU,WAER/J,EAAM8J,SAAS9J,EAAMD,MACpB,IAiBH,OACE,6BACE,kBAACiK,EAAA,EAAD,CACEC,UAAU,MACVvD,aAAW,eACX+C,UACE,kBAACS,EAAA,EAAD,CACE7I,QAAQ,KACR9B,MAAM,UACNkB,UAAWR,EAAQiC,QAHrB,iBASDlC,EAAMqF,SAAS8E,KAAI,SAACC,GAAD,OAClB,kBAACC,GAAA,EAAD,CACEC,IAAKF,EAAEG,WACPC,QAAM,EACNC,SAAUzK,EAAM8I,kBAAoBsB,EAAEG,WACtChJ,QAAS,SAACmJ,GAAD,OAnCYC,EAmCyBP,EAAEG,WAlCxDvK,EAAM6I,2BAA2B8B,GACjC3K,EAAMqF,SAAS8E,KAAI,SAACC,GACdA,EAAEG,aAAeI,GACnB3K,EAAM4J,mBAAmBQ,WAG7B/J,GAAQ,GAPiB,IAAIsK,IAqCrB,kBAACC,GAAA,EAAD,CAAc7J,QAAO,UAAKqJ,EAAEnJ,OAAP,YAAiBmJ,EAAElJ,eAI9C,kBAAC2J,EAAA,EAAD,MACA,kBAACb,EAAA,EAAD,CACEC,UAAU,MACVvD,aAAW,eACXjG,UAAWR,EAAQyJ,YACnBD,UACE,kBAACS,EAAA,EAAD,CACED,UAAU,MACV1K,MAAM,UACNkB,UAAWR,EAAQiC,OACnBiB,GAAG,0BAJL,2BAUF,kBAACkH,GAAA,EAAD,CAAUG,QAAM,GACd,kBAACI,GAAA,EAAD,CAAcpL,UAAU,0C,SC5BnBK,I,cAAAA,aACb,SAACC,GAAD,MAAY,CACVC,GAAID,EAAMC,OAEZ,SAACoC,GAAD,MAAe,CACbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,QAL5CX,EA/DG,SAACG,GACjB+J,qBAAU,WACRe,0BAAe,KACfC,MACC,CAAC/K,EAAMD,GAAG+I,gBAAgByB,aAE7B,IAAMQ,EAAgB,WACpB/G,IACGC,IAAI,oBAAqB,CACxBF,OAAQ,CACNhE,GAAIC,EAAMD,GAAGS,MACbqJ,QAAS7J,EAAMD,GAAG+I,gBAAgByB,cAGrCtB,MAAK,SAACC,GACLA,EAAS7G,KAAK8H,KAAI,SAACa,GACbA,EAAQC,SAAWjL,EAAMD,GAAGiB,MAC9BkK,0BAAeF,EAAQA,SAEvBG,8BAAmBH,EAAQA,eAIhC5B,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAI8I,OAmBhC,OACE,6BACE,kBAAC,UAAD,CACE+B,MACEpL,EAAMD,GAAG+I,gBAAgByB,WACrB,gBACA,iBAENc,SACErL,EAAMD,GAAG+I,gBAAgByB,WAAzB,UACOvK,EAAMD,GAAG+I,gBAAgB7H,OADhC,YAC0CjB,EAAMD,GAAG+I,gBAAgB5H,QAC/D,mBAENoK,eAAe,EACfC,kBAAmB,mBACnBC,qBA/BuB,SAACC,GAC5B,IAAM1H,EAAS,IAAIgF,gBACnBhF,EAAOiF,OAAO,UAAWyC,GACzB1H,EAAOiF,OAAO,KAAMhJ,EAAMD,GAAGS,OAC7BuD,EAAOiF,OAAO,UAAWhJ,EAAMD,GAAG+I,gBAAgByB,YAElDvG,IACGK,KAAK,0BAA2BN,GAChCkF,MAAK,SAACC,GACiB,MAAlBA,EAAS7G,MACX/B,QAAQC,IAAI,sBAGf6I,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAI8I,cChC5BtL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CM,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,aAkGNc,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,aAErB,SAAClD,GAAD,MAAe,CAEbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,KACvDoJ,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,QAVlDhK,EA9FgB,SAACG,GAC9B,IAAMC,EAAUlC,KADwB,EAERmC,IAAMC,SAAS,IAFP,mBAEjCuL,EAFiC,KAEvBC,EAFuB,OAGNzL,IAAMC,SAAS,IAHT,mBAGjCsJ,EAHiC,KAGtBmC,EAHsB,KAiDlCC,EAAc,WAClB7L,EAAM4J,mBAAmB,KAkB3B,OAfA1J,IAAM6J,WAAU,WAC6B,MAAvC/J,EAAMD,GAAG+I,gBAAgByB,YAhD7BvG,IACGC,IAAI,iBAAkB,CACrBF,OAAQ,CACNhE,GAAIC,EAAMD,GAAGS,SAGhByI,MAAK,SAACC,GACLyC,EACEzC,EAAS7G,KAAK8H,KAAI,SAACzH,GAEjB,OADApC,QAAQC,IAAI2I,EAAS7G,MACdK,SAIZ0G,MAAM9I,QAAQC,KAoCfqL,EAAa,sBAEK5L,EAAMD,GAAG+I,gBAAgByB,WAlC7CvG,IACGC,IAAI,0BAA2B,CAC9BF,OAAQ,CACNhE,GAAIC,EAAMD,GAAGS,MACbqJ,QAAS7J,EAAMD,GAAG+I,gBAAgByB,cAGrCtB,MAAK,SAACC,GACLyC,EACEzC,EAAS7G,KAAK8H,KAAI,SAACzH,GAAD,OAAOA,SA0B7BkJ,EAAa,OAAD,OAER5L,EAAMD,GAAG+I,gBAAgB7H,OAFjB,YAIRjB,EAAMD,GAAG+I,gBAAgB5H,YAG9B,CAAClB,EAAMD,GAAG+I,kBAGX,kBAACkB,EAAA,EAAD,CACEvJ,UAAWR,EAAQnB,MACnB4H,aAAW,gBACX/C,MAAO,CAACxF,UAAW,MAEnB,kBAACkM,GAAA,EAAD,CAAU9K,MAAM,UAAUkB,UAAWR,EAAQvB,OAC3C,2BAAI+K,IAOLiC,EAASvB,KAAI,SAACzH,GAAD,OACZ,6BACE,kBAAC2H,GAAA,EAAD,eACM3H,EAAEoJ,cADR,cAC+BpJ,EAAEqJ,SADjC,iBA9CqC,MAAvC/L,EAAMD,GAAG+I,gBAAgByB,WACpB,KAIP,kBAACzD,EAAA,EAAD,CAAQzF,QAAQ,YAAY9B,MAAM,UAAUgC,QAASsK,GAArD,yB,yCCvDA9N,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCiE,OAAQ,CACNnD,gBAAiB,SAEnBL,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAC1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX4M,YAAa,CACXtM,OAAQ,IACRC,MAAO,IACPhB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBoN,WAAY,CACVC,aAAc,SACdtN,WAAY,SACZe,MAAO,KAETwM,gBAAiB,GAGjBpH,SAAU,CACRxF,MAAO,WAGTyF,iBAAkB,CAChB,+BAAgC,CAC9BC,YAAY,qBACZtF,MAAO,MAIXuF,WAAY,GAEZC,eAAgB,CACdC,YAAa,MACbH,YAAa,sBAEfmH,SAAU,CACR7M,MAAO,eAgIIM,gBACb,SAACC,GAAD,MAAY,CAGVuF,SAAUvF,EAAMC,GAAGsF,SACnByD,gBAAiBhJ,EAAMC,GAAG+I,oBAE5B,SAAC3G,GAAD,MAAe,CAEbkK,gBAAiB,SAACC,EAASC,GAAV,OAAsBpK,EJxJV,SAACmK,EAAUC,GACxC,IAAMxI,EAAS,IAAIgF,gBAInB,OAHAhF,EAAOiF,OAAO,WAAYsD,GAC1BvI,EAAOiF,OAAO,UAAWuD,GAElB,WACLrI,aAAQ,6BAA8BH,GACnCkF,MAAK,SAACuD,GACW,KAAZA,EAAInK,OACN/B,QAAQC,IAAIiM,EAAInK,MAChBkC,OAAOkI,MAAM,yBACblI,OAAOC,SAASkI,KAAO,QAG1BtD,OAAM,SAACC,GACN/I,QAAQC,IAAI8I,OIyI8BgD,CAAgBC,EAASC,KACzE3C,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,QAVlDhK,EA5Ha,SAACG,GAC3B,IAAMC,EAAUlC,KADqB,EAEKmC,IAAMC,SAAS,IAFpB,mBAE9BwM,EAF8B,KAEfC,EAFe,OAGb1M,IAAMC,UAAS,GAHF,mBAG9BC,EAH8B,KAGxBC,EAHwB,OAIPH,IAAMC,SAAS,IAJR,mBAI9BoM,EAJ8B,KAIrBM,EAJqB,OAKR3M,IAAMC,SAAS,IALP,mBAK9B2M,EAL8B,KAKtBC,EALsB,KA8CrC,OALA7M,IAAM6J,WAAU,WAE0B,IAApC/J,EAAM8I,gBAAgByB,YAnC1BvG,IACGC,IAAI,yBAA0B,CAC7BF,OAAQ,CACNwG,WAAYvK,EAAM8I,gBAAgByB,cAGrCtB,MAAK,SAACC,GACL5I,QAAQC,IAAI2I,GACZ5I,QAAQC,IAAI2I,EAAS7G,KAAKwH,SAE1B+C,EACE1D,EAAS7G,KAAK8H,KAAI,SAAC6C,GAAD,OAAQA,SAG7B5D,MAAM9I,QAAQC,OAsBhB,CAACP,EAAM8I,gBAAgByB,aAGxB,yBAAK9J,UAAWR,EAAQiC,QACtB,kBAAC8H,EAAA,EAAD,CACEC,UAAU,MACVvD,aAAW,eACX/C,MAAO,CAAExF,UAAW,IAAK8O,UAAW,WAEnCN,EAAcxC,KAAI,SAAC6C,GAAD,OACjB,6BACA,kBAAC3C,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAc7J,QAASiM,EAAGE,MAAO1N,UAAS,qBAAgBwN,EAAGG,cAC7D,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CACE7N,MAAM,YACNgC,QAAS,SAACmJ,GAAD,OAnCO4B,EAmC6BU,EAAGV,SAlC5DS,EAAWT,QACXjM,GAAQ,GAFiB,IAAGiM,OAuCpB,kBAAC1B,GAAA,EAAD,CAAcnK,UAAWR,EAAQmM,SAAUrL,aAAwBsM,IAAfL,EAAGT,QAAwB,GAA3B,mBAA4CS,EAAGT,WACrG,kBAAC1B,EAAA,EAAD,WAMJ,kBAACpC,EAAA,EAAD,CACEjH,kBAAgB,+BAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QA9CqB,WAEzBrB,GAASD,IA6CLuB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI5B,GACR,kBAAC0F,EAAA,EAAD,CAAOrF,UAAWR,EAAQ+L,aACxB,kBAAC9E,EAAA,EAAD,CAAMxG,WAAS,EAACD,UAAWR,EAAQgM,WAAYtL,UAAU,SAASxB,QAAS,GACzE,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,UAAiCrB,EAAM8I,gBAAgB7H,OAAvD,kCAEF,kBAACiG,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACEzC,YAAW,qBAAgBtD,EAAM8I,gBAAgB7H,OAAtC,KACXmC,MAAM,sBACN/B,QAAQ,WACR9B,MAAM,YACNgE,MAAOgJ,EACP/I,SAAU,SAAC8J,GAAQT,EAAWS,EAAEC,OAAOhK,QACvCiK,WAAS,EACTC,KAAM,EACNvH,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,cAIjB,kBAACe,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkG,EAAA,EAAD,CAAQzF,QAAQ,WAAW9B,MAAM,YAAYgC,QA3EjC,WAGxBvB,EAAMqM,gBAAgBS,EAAQP,KAwElB,mB,+BCtKVxO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBoD,MAAO,CACLtC,MAAO,IACPD,OAAQ,KAEVZ,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,aAgENc,gBACb,SAACC,GAAD,MAAY,CACVC,GAAID,EAAMC,GACVsF,SAAUvF,EAAMC,GAAGsF,SACnByD,gBAAiBhJ,EAAMC,GAAG+I,oBAE5B,SAAC3G,GAAD,MAAe,KANFtC,EA5DY,SAACG,GAC1B,IAAMC,EAAUlC,KADoB,EAEZmC,IAAMC,SAAS,IAFH,mBAE7BuN,EAF6B,KAEvBC,EAFuB,KA2BpC,OANAzN,IAAM6J,WAAU,WAGe,IAAzB/J,EAAM8I,iBAlBV9E,IACGC,IAAI,iBAAkB,CACrBF,OAAQ,CACNwG,WAAYvK,EAAM8I,gBAAgByB,cAGrCtB,MAAK,SAACC,GACL5I,QAAQC,IAAI2I,GACZ5I,QAAQC,IAAI2I,EAAS7G,KAAKwH,SAE1B8D,EAAQzE,EAAS7G,SAElB+G,MAAM9I,QAAQC,OAOhB,CAACP,EAAM8I,kBAGR,6BACE,kBAACkB,EAAA,EAAD,CAAMC,UAAU,MAAMvD,aAAW,eAAe/C,MAAO,CAACxF,UAAW,MACjE,6BACE,kBAACkM,GAAA,EAAD,KACE,kBAACuD,GAAA,EAAD,CACEC,IAAI,sBACJxF,IAAKd,KACL9G,UAAWR,EAAQgC,SAGvB,kBAACoI,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CACE7J,QAAO,UACPvB,UAAS,UAAKkO,EAAKzM,OAAV,YAAwByM,EAAKxM,WAG1C,kBAACmJ,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAc7J,QAAO,QAAWvB,UAAWkO,EAAK1M,SAElD,kBAACqJ,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAc7J,QAAO,UAAavB,UAAWkO,EAAKvM,WAEpD,kBAACkJ,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAc7J,QAAO,eAAkBvB,UAAWkO,EAAKI,UAEzD,kBAACjD,EAAA,EAAD,Y,qBChEJ9M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBkP,OAAQ,CACN7O,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,IAE/B6O,aAAc,CACZrP,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX4M,YAAa,CACXtM,OAAQ,IACRC,MAAO,IACPhB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBoN,WAAY,CACVC,aAAc,SACdtN,WAAY,SACZe,MAAO,KAETwM,gBAAiB,GAGjBpH,SAAU,CACRxF,MAAO,WAGTyF,iBAAkB,CAChB,+BAAgC,CAC9BC,YAAY,qBACZtF,MAAO,MAIXuF,WAAY,GAEZC,eAAgB,CACdC,YAAa,MACbH,YAAa,sBAGf/C,OAAQ,CACNnD,gBAAiB,SAEnBkP,UAAW,CACT9P,UAAW,SAGbiO,SAAU,CACR7M,MAAO,eA4LIM,gBACb,SAACC,GAAD,MAAY,CAEVgJ,gBAAiBhJ,EAAMC,GAAG+I,oBAE5B,SAAC3G,GAAD,MAAe,CAEbyH,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,KAC7DqE,gBAAiB,SAACC,EAAS5B,GAAV,OAAsBpK,ENpNV,SAAEiM,EAAkB7B,GACjD,IAAMxI,EAAS,IAAIgF,gBAInB,OAHAhF,EAAOiF,OAAO,mBAAqBoF,GACnCrK,EAAOiF,OAAO,UAAWuD,GAElB,WACLrI,aAAQ,6BAA8BH,GACnCkF,MAAK,SAACuD,GACW,KAAZA,EAAInK,OACN/B,QAAQC,IAAIiM,EAAInK,MAChBkC,OAAOkI,MAAM,uCACblI,OAAOC,SAASkI,KAAO,QAG1BtD,OAAM,SAACC,GACN/I,QAAQC,IAAI8I,OMqM8B6E,CAAgBC,EAAS5B,QAR9D1M,EAxLc,SAACG,GAC5B,IAAMC,EAAUlC,KADsB,EAEdmC,IAAMC,UAAS,GAFD,mBAE/BC,EAF+B,KAEzBC,EAFyB,OAGVH,IAAMC,SAAS,IAHL,mBAG/B4N,EAH+B,KAGvBM,EAHuB,OAIInO,IAAMC,SAAS,IAJnB,mBAI/BmO,EAJ+B,aAKhBpO,IAAMC,SAAS,KALC,mBAK/BoO,EAL+B,KAK1BC,EAL0B,OAMNtO,IAAMC,SAAS,IANT,gCAORD,IAAMC,SAAS,KAPP,mBAO/BoM,EAP+B,KAOtBM,EAPsB,OAQT3M,IAAMC,SAAS,IARN,mBAQ/BgO,EAR+B,KAQvBM,EARuB,OASAvO,IAAMC,UAAS,GATf,mBAS/BuO,EAT+B,KASlBC,EATkB,KAmCtCrO,QAAQC,IAAKwN,EAAO5D,KAAI,SAACyE,GACvB,OAAOA,MAuBTtO,QAAQC,IAAI4N,GAiBZ,OALAjO,IAAM6J,WAAU,WAEe,IAAzB/J,EAAM8I,iBAxDV9E,IACGC,IAAI,uBAAwB,CAC3BF,OAAQ,CACN8F,QAAS7J,EAAM8I,gBAAgByB,cAGlCtB,MAAK,SAACC,GACLmF,EACEnF,EAAS7G,KAAK8H,KAAI,SAACyE,GAEjB,OADAtO,QAAQC,IAAI2I,EAAS7G,KAAKwM,eACnBD,SAIZxF,MAAM9I,QAAQC,OA2ChB,CAACP,EAAM8I,kBAGR,yBAAKrI,UAAWR,EAAQ/B,MACtB,kBAAC8L,EAAA,EAAD,CACEC,UAAU,MACVvD,aAAW,eACX/C,MAAO,CAACxF,UAAW,IAAK8O,UAAW,WAElCc,EAAO5D,KAAI,SAAC2E,GAAD,OACV,6BACE,kBAACzE,GAAA,EAAD,KAAYyE,EAAEC,UACd,kBAAC1E,GAAA,EAAD,CAEEC,IAAKwE,EAAEV,iBACP5D,QAAM,EACNC,SAAU6D,GAAiBQ,EAAEV,iBAC7B7M,QAAS,SAACmJ,GAAD,OAhFQsE,EAgF2BF,EAAEE,UA/ExDR,EAAOQ,QACP3O,GAAQ,GAFe,IAAI2O,IAmFjB,yBACAvO,UAAWR,EAAQgO,UACjB5F,IAAG,qCAEDyG,EAAEE,UAAUC,MAAM,KAAK,GAFtB,YAOL,kBAAC7B,GAAA,EAAD,CAAc3M,UAAWR,EAAQ8N,QACjC,kBAAC,KAAD,CACExO,MAAM,YACNgC,QAAS,SAACmJ,GAAD,OAtDK4C,EAsDyB5C,EAtDvB0D,EAsD6BU,EAAEV,iBArD3DK,EAAWL,GACXd,EAAE4B,uBAEFP,GAAe,GAJU,IAACrB,EAAEc,OA0DpB,kBAACxD,GAAA,EAAD,CAAcnK,UAAWR,EAAQmM,SAAUrL,aAAuBsM,IAAdyB,EAAEvC,QAAwB,GAA1B,mBAA2CuC,EAAEvC,WACjG,kBAAC1B,EAAA,EAAD,WAIN,kBAACpC,EAAA,EAAD,CACEjH,kBAAgB,gCAChBC,mBAAiB,2BACjBhB,UAAWR,EAAQ+N,aACnB5N,KAAMsO,EACNhN,QA3DqB,WAEzBiN,GAAgBD,IA0DZ/M,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI0M,GACR,kBAAC5I,EAAA,EAAD,CAAOrF,UAAWR,EAAQ+L,aACxB,kBAAC9E,EAAA,EAAD,CAAMxG,WAAS,EAACD,UAAWR,EAAQgM,WAAYtL,UAAU,SAASxB,QAAS,GACzE,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,UAAiCrB,EAAM8I,gBAAgB7H,OAAvD,gCAEF,kBAACiG,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACEzC,YAAW,qBAAgBtD,EAAM8I,gBAAgB7H,OAAtC,KACXmC,MAAM,sBACN/B,QAAQ,WACR9B,MAAM,YACNgE,MAAOgJ,EACP/I,SAAU,SAAC8J,GAAQT,EAAWS,EAAEC,OAAOhK,QACvCiK,WAAS,EACTC,KAAM,EACNvH,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,cAIjB,kBAACe,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkG,EAAA,EAAD,CAAQzF,QAAQ,WAAW9B,MAAM,YAAYgC,QAxFjC,WACxBvB,EAAMkO,gBAAgBC,EAAQ5B,KAuFlB,eAQV,kBAAC9D,EAAA,EAAD,CACEjH,kBAAgB,yBAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QA/Hc,WAClBrB,GAAQ,IA+HJsB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI5B,GACR,yBAAKK,UAAWR,EAAQnB,OACtB,kBAAC,KAAD,CAAaqQ,UAAU,EAAMrL,IAAKyK,WCjQxCxQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiB,QAEjBK,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,QACjBH,WAAY,SACZC,eAAgB,cA2JLgB,gBACb,SAACC,GAAD,MAAY,CAEVgJ,gBAAiBhJ,EAAMC,GAAG+I,oBAE5B,SAAC3G,GAAD,MAAe,CAEbyH,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,QAPlDhK,EAvJQ,SAACG,GACtB,IAAMC,EAAUlC,KADgB,EAERmC,IAAMC,UAAS,GAFP,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGFH,IAAMC,SAAS,IAHb,mBAGzBiP,EAHyB,KAGhBC,EAHgB,OAIcnP,IAAMC,SAAS,IAJ7B,mBAIzBmP,EAJyB,KAIRC,EAJQ,OAKErP,IAAMC,SAAS,IALjB,mBAKzBqP,EALyB,KAKdC,EALc,KA0B1BC,EAAwB,WAC5B1L,IACGC,IAAI,mBAAoB,CACvBF,OAAQ,CACNqL,QAASE,KAGZrG,MAAK,SAACC,GACLuG,EACEvG,EAAS7G,KAAK8H,KAAI,SAACmD,GAEjB,OADAhN,QAAQC,IAAI2I,EAAS7G,MACdiL,SAIZlE,MAAM9I,QAAQC,MAoBnB,OALAL,IAAM6J,WAAU,WAEe,IAAzB/J,EAAM8I,iBAlDV9E,IACGC,IAAI,yBAA0B,CAC7BF,OAAQ,CACN8F,QAAS7J,EAAM8I,gBAAgByB,cAGlCtB,MAAK,SAACC,GACLmG,EACEnG,EAAS7G,KAAK8H,KAAI,SAACwF,GAGjB,OAFArP,QAAQC,IAAI2I,EAAS7G,MACrBkN,EAAmBrG,EAAS7G,KAAK,GAAG+M,SAC7BO,SAIZvG,MAAM9I,QAAQC,OAoChB,CAACP,EAAM8I,kBAGR,yBAAKrI,UAAWR,EAAQ/B,MACtB,kBAAC8L,EAAA,EAAD,CACEvJ,UAAWR,EAAQnB,MACnB4H,aAAW,eACX/C,MAAO,CAACxF,UAAW,MAEnB,kBAACkM,GAAA,EAAD,CAAU5J,UAAWR,EAAQvB,OAC3B,2BACE,mDAGH0Q,EAAQjF,KAAI,SAACwF,GAAD,OACX,6BACE,kBAACtF,GAAA,EAAD,CACEC,IAAKqF,EAAEP,QACP5E,QAAM,EACNC,SAAU6E,GAAmBK,EAAEP,QAC/B7N,QAAS,SAACmJ,GAAD,OAnCM,SAAC4C,EAAGgC,GAE7BhP,QAAQC,IAAR,4BAAmC+O,IACnCC,EAAmBD,GACnBI,IACArP,GAAQ,GA8BsBuP,CAAmBlF,EAAOiF,EAAEP,WAE/CO,EAAEvE,YAMX,kBAAC3C,EAAA,EAAD,CACEjH,kBAAgB,yBAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QAxCc,WAClBrB,GAAQ,IAwCJsB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI5B,GACR,kBAAC4J,EAAA,EAAD,CACErG,MAAO,CACLxF,UAAW,IACX8O,UAAW,SACXlO,gBAAiB,SAEnB0K,UACE,kBAACS,EAAA,EAAD,CACED,UAAU,MACV1K,MAAM,UACNU,QAAS,gBAHX,oBASDuP,EAAUrF,KAAI,SAACmD,GAAD,OACb,6BACE,kBAACjD,GAAA,EAAD,CAAUC,IAAKgD,EAAEuC,aACf,kBAACjF,GAAA,EAAD,CACE7J,QAAO,iBACPvB,UAAW8N,EAAElC,SAGjB,kBAACf,GAAA,EAAD,CAAUC,IAAKgD,EAAEuC,aACf,kBAACjF,GAAA,EAAD,CACE7J,QAAO,cACPvB,UAAW8N,EAAElM,eAGjB,kBAACiJ,GAAA,EAAD,KACE,uBAAGqC,KAAMY,EAAEwC,aAAcvC,OAAO,UAC9B,yBACElF,IAAG,qCAEDiF,EAAEwC,aAAab,MAAM,KAAK,GAFzB,cAQT,kBAACpE,EAAA,EAAD,iBCnJV9M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJS,QAAS,OACT,QAAS,CACPgG,OAAQ1G,EAAMkB,QAAQ,KAG1B4Q,MAAO,CACLpQ,MAAO1B,EAAMkB,QAAQ,GACrBO,OAAQzB,EAAMkB,QAAQ,IAExB8C,MAAO,CACLtC,MAAO1B,EAAMkB,QAAQ,GACrBO,OAAQzB,EAAMkB,QAAQ,IAExB6Q,SAAU,CACRC,SAAU,SAEVC,UAAW,iBAEb9E,MAAO,CACL7L,MAAOtB,EAAMM,QAAQwC,QAAQoP,OAE/BC,SAAU,CACR9R,WACE,wFAEJoP,KAAM,CACJ/N,MAAO,IACPD,OAAQ,KAEV0P,QAAS,CACPxL,UAAW,GACXjE,MAAO,IACPD,OAAQ,KAEV2Q,OAAQ,CACN1Q,MAAO,IACPD,OAAQ,KAEV4Q,MAAO,CACL3Q,MAAO,IACPD,OAAQ,SA4DGG,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,SACnByD,gBAAiBhJ,EAAMC,GAAG+I,gBAC1ByH,sBAAuBzQ,EAAM0P,UAAUlG,0BAEzC,SAACnH,GAAD,MAAe,CAEbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,KACvDwG,YAAa,SAACjH,GAAD,OAAQoC,EAAS6E,YAAYjH,KAC1C6J,mBAAoB,SAACC,GAAD,OAAa1H,EAASyH,YAAmBC,KAC7DC,SAAU,SAAC/J,GAAD,OAAQoC,EAAS2H,YAAS/J,KACpC8I,2BAA4B,SAACC,GAAD,OAC1B3G,EAAS0G,GAA2BC,QAhB3BjJ,EAxDqB,SAACG,GACnC,IAAMC,EAAUlC,KAD6B,EAEXmC,IAAMC,SAAS,IAFJ,mBAE3BqQ,GAF2B,aAGjBtQ,IAAMC,SAAS,IAHE,6BAiB7C,OALAD,IAAM6J,WAAU,WALd/F,IAAMC,IAAI,0CAA0CgF,MAAK,SAACC,GACxDsH,EAAatH,EAAS7G,KAAKoO,QAAQ,GAAGC,QAAQzO,YAO/C,IAGD,6BACGjC,EAAM8I,gBAAgByB,WACrB,kBAACrD,EAAA,EAAD,CACExG,WAAS,EACTvB,QAAS,EACTwB,UAAU,MACVgQ,QAAQ,gBACR/R,WAAW,cAEX,kBAACsI,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,QACA,kBAACyE,EAAA,EAAD,CAAOrF,UAAWR,EAAQyN,MACxB,kBAAC,GAAD,OAEF,kBAAC5H,EAAA,EAAD,CAAOrF,UAAWR,EAAQmP,SACxB,kBAAC,GAAD,QAGJ,kBAAClI,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,gBACA,kBAACyE,EAAA,EAAD,CAAOrF,UAAWR,EAAQoQ,QACxB,kBAAC,GAAD,QAGJ,kBAACnJ,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,kBACA,kBAACyE,EAAA,EAAD,CAAOrF,UAAWR,EAAQqQ,OACxB,kBAACM,GAAD,SAKN,gC,6BC7GF7S,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAC1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,aA4ENc,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,SACnBwL,iBAAkB/Q,EAAM0P,UAAUqB,qBAEpC,SAAC1O,GAAD,MAAe,CAEbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,KACvDsQ,cAAe,SAAC/Q,EAAIgR,EAASF,GAAd,OACb1O,EAAS2O,YAAc/Q,EAAIgR,EAASF,QAZ3BhR,EAxEc,SAACG,GAC5B,IAAMC,EAAUlC,KADsB,EAEdmC,IAAMC,UAAS,GAFD,gCAGRD,IAAMC,SAAS,KAHP,mBAG/B4Q,EAH+B,KAGtBC,EAHsB,KAKtC9Q,IAAM6J,WAAU,WACd/J,EAAM2J,iBAAiB3J,EAAMD,GAAGS,SAC/B,IAsBH,OACE,6BACE,kBAACwJ,EAAA,EAAD,CACEC,UAAU,MACVvD,aAAW,eACX/C,MAAO,CAACxF,UAAW,IAAK8O,UAAW,UACnCxD,UACE,kBAACS,EAAA,EAAD,CACED,UAAU,MACV1K,MAAM,UACNkB,UAAWR,EAAQiC,QAHrB,iBASDlC,EAAMqF,SAAS8E,KAAI,SAACC,EAAG6G,GAAJ,OAClB,yBAAK3G,IAAK2G,GACR,kBAAC5G,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CAAc7J,QAAO,UAAKqJ,EAAEnJ,OAAP,YAAiBmJ,EAAElJ,UACxC,kBAACgQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,MACLC,UAAW,EACXC,eAAa,EACb9N,UA7CWD,EA6CiB6G,EAAEG,WA7CT,WACnC,IAAMgH,EAAeR,EAAQS,QAAQjO,GAC/BkO,EAAU,aAAOV,IAED,IAAlBQ,EACFE,EAAWC,KAAKnO,GAEhBkO,EAAWE,OAAOJ,EAAc,GAGlCP,EAAWS,KAoCGV,SAA4C,IAAnCA,EAAQS,QAAQpH,EAAEG,YAC3BqH,WAAY,CACV,kBAAkB,uBAAlB,OAA0CxH,EAAEG,kBAhDpC,IAAChH,MAyDvB,kBAACuD,EAAA,EAAD,CAAQzF,QAAQ,YAAY9B,MAAM,UAAUgC,QAzCvB,WACvBvB,EAAM8Q,cAAc9Q,EAAMD,GAAIgR,EAAS/Q,EAAM6Q,oBAwC3C,c,+BCtEA9S,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBgT,cAAe,CACb3S,QAASjB,EAAMkB,QAAQ,GACvBR,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,SAEnB+S,WAAY,CACV5S,QAASjB,EAAMkB,QAAQ,GACvBI,MAAO,WAuOIM,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GAEVsF,SAAUvF,EAAMC,GAAGsF,SACnBwL,iBAAkB/Q,EAAM0P,UAAUqB,qBAEpC,SAAC1O,GAAD,MAAe,CAEbwH,iBAAkB,SAACnJ,GAAD,OAAW2B,EAASwH,YAAiBnJ,KACvDuR,oBAAqB,SAAClB,GAAD,OACnB1O,EAAS4P,YAAoBlB,KAC/BmB,cAAe,SAACC,GAAD,OAAgB9P,EAAS6P,YAAcC,QAb3CpS,EAlOa,SAACG,GAC3B,IAAMC,EAAUlC,KADqB,EAEbmC,IAAMC,UAAS,GAFF,mBAE9BC,EAF8B,KAExBC,EAFwB,OAGLH,IAAMC,SAAS,IAHV,mBAG9B+R,EAH8B,KAGpBC,EAHoB,OAIHjS,IAAMC,SAAS,IAJZ,mBAI9BqP,EAJ8B,KAInBC,EAJmB,OAKCvP,IAAMC,UAAS,GALhB,mBAK9BiS,EAL8B,KAKjBC,EALiB,OAMLnS,IAAMC,SAAS,MANV,mBAM9BmS,EAN8B,KAMpBC,EANoB,OAOFrS,IAAMC,SAAS,IAPb,mBAO9BqS,EAP8B,KAOnBC,EAPmB,KAiD/BC,EAAoB,WACxBL,GAAgBD,GAChBG,EAAY,OAIR3C,EAAqB,SAACtC,EAAGgC,IA5BD,SAACA,GAC7BtL,IACGC,IAAI,mBAAoB,CACvBF,OAAQ,CACNqL,QAASE,KAGZrG,MAAK,SAACC,GACLuG,EACEvG,EAAS7G,KAAK8H,KAAI,SAACmD,GAGjB,OAFAhN,QAAQC,IAAI2I,EAAS7G,MACrBhC,GAAQ,GACDiN,SAIZlE,MAAM9I,QAAQC,KAajBmP,CAAsBJ,IAmCxB,OAJApP,IAAM6J,WAAU,WA7Ed/F,IACGC,IAAI,kBAAmB,CACtBF,OAAQ,CACNhE,GAAIC,EAAMD,GAAGS,SAGhByI,MAAK,SAACC,GACLiJ,EACEjJ,EAAS7G,KAAK8H,KAAI,SAACwF,GAEjB,OADArP,QAAQC,IAAI2I,EAAS7G,MACdsN,SAIZvG,MAAM9I,QAAQC,OAiEhB,IAGD,yBAAKE,UAAWR,EAAQ/B,MACtB,kBAAC8L,EAAA,EAAD,CACEtD,aAAW,eACX+C,UACE,kBAACS,EAAA,EAAD,CACED,UAAU,MACV1K,MAAM,UACNkB,UAAWR,EAAQiC,QAHrB,mBASDgQ,EAAS/H,KAAI,SAACwF,EAAGsB,GAAJ,OACZ,yBAAK3G,IAAK2G,GACR,kBAAC5G,GAAA,EAAD,CACEG,QAAM,EACNC,SAAUzK,EAAM6Q,kBAAoBlB,EAAEsC,WACtC1Q,QAAS,SAACmJ,GAAD,OAAWkF,EAAmBlF,EAAOiF,EAAEsC,cAEhD,kBAAC7E,GAAA,EAAD,KACA,kBAAC,KAAD,CACE7N,MAAM,YACNgC,QAAS,SAACmJ,GAAD,OAvDI4C,EAuDyB5C,EAvDvBuH,EAuD6BtC,EAAEsC,WAtD1D3E,EAAE4B,kBAEFqD,EAAYjF,EAAEqF,eACdN,GAAgBD,QAEhBK,EAAcR,GANU,IAAC3E,EAAE2E,MA0DhBtC,EAAEvE,MACH,kBAAC8F,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,KAAK,MACLC,UAAW,EACXC,eAAa,EACb9N,UAlDaD,EAkDiBoM,EAAEsC,WAlDT,WACrC,IAAMV,EAAevR,EAAM6Q,iBAAiBW,QAAQjO,GAC9CqP,EAAiB,aAAO5S,EAAM6Q,mBAEd,IAAlBU,EACFqB,EAAkBlB,KAAKnO,GAEvBqP,EAAkBjB,OAAOJ,EAAc,GAGzCvR,EAAM+R,oBAAoBa,KAyCZ7B,SAA2D,IAAlD/Q,EAAM6Q,iBAAiBW,QAAQ7B,EAAEsC,YAC1CL,WAAY,CACV,kBAAkB,uBAAlB,OAA0CjC,EAAEsC,kBArDlC,IAAC1O,MA6DzB,kBAACsP,GAAA,EAAD,CACEpS,UAAWR,EAAQ4R,cACnB1O,GAAG,iBACH/C,KAAMgS,EACNE,SAAUA,EACV5Q,QAASgR,EACTI,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAGd,kBAACnN,EAAA,EAAD,CAAYpF,UAAWR,EAAQ6R,YAA/B,yCAGE,kBAAChL,EAAA,EAAD,CACAvH,MAAM,YACNgC,QAAS,SAAC+L,IArFG,SAACA,EAAEnK,GACtBmK,EAAE4B,kBACFlP,EAAMgS,cAAc7O,GAmFE+P,CAAa5F,EAAEkF,KAF/B,OAMA,kBAAC1L,EAAA,EAAD,CACAvH,MAAM,YACNgC,QAASmR,GAFT,OAOJ,kBAACjK,EAAA,EAAD,CACEjH,kBAAgB,yBAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QA7Hc,WAClBrB,GAAQ,IA6HJsB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI5B,GACR,kBAAC4J,EAAA,EAAD,CACErG,MAAO,CACLxF,UAAW,IACX8O,UAAW,SACXlO,gBAAiB,SAEnB0K,UACE,kBAACS,EAAA,EAAD,CAAeD,UAAU,MAAM1K,MAAM,WAArC,oBAKDiQ,EAAUrF,KAAI,SAACmD,EAAG2D,GAAJ,OACb,yBAAK3G,IAAK2G,GACR,kBAAC5G,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,CACE7J,QAAO,iBACPvB,UAAW8N,EAAElC,SAGjB,kBAACf,GAAA,EAAD,CAAUC,IAAKgD,EAAEuC,aACf,kBAACjF,GAAA,EAAD,CACE7J,QAAO,cACPvB,UAAW8N,EAAElM,eAGjB,kBAACiJ,GAAA,EAAD,KACE,uBAAGqC,KAAMY,EAAEwC,aAAcvC,OAAO,UAC9B,yBACElF,IAAG,qCAEDiF,EAAEwC,aAAab,MAAM,KAAK,GAFzB,cAQT,kBAACpE,EAAA,EAAD,iBClQV9M,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJE,SAAU,EACVwF,UAAW,GACXrE,MAAOtB,EAAMM,QAAQiB,UAAU2Q,OAEjCgD,aAAc,CACZjU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXkB,aAAc,KAEhBsO,cAAe,CACblU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXhE,WAAY,IAEdyT,aAAc,CACZnU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXP,gBAAiB,UACjBW,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXkB,aAAc,IACd+C,YAAa,IAEfyL,aAAc,CACZpU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BmE,UAAW,GACXjE,MAAO,IACPD,OAAQ,SAqEG6T,GAjEG,WAChB,IAAMtT,EAAUlC,KAEhB,OACE,yBACE0C,UAAWR,EAAQ/B,KACnByS,QAAS,gBACT/R,WAAY,cAEZ,kBAAC,GAAD,MACA,kBAACsI,EAAA,EAAD,CACExG,WAAS,EACTvB,QAAS,EACTwB,UAAU,MACVgD,MAAO,CACLgB,OAAQ,EACRhF,MAAO,SAGT,kBAACuH,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkF,EAAA,EAAD,CACErF,UAAWR,EAAQmT,cACnBzP,MAAO,CAAClF,SAAU,QAClBqC,UAAW,GAEX,kBAAC,GAAD,QAGJ,kBAACoG,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkF,EAAA,EAAD,CAAOrF,UAAWR,EAAQoT,aAAcvS,UAAW,GAGjD,kBAAC+E,EAAA,EAAD,CAAYxE,QAAQ,MAClB,+CAEF,kBAAC,GAAD,QAGJ,kBAAC6F,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACsG,EAAA,EAAD,CAAMxG,WAAS,EAACvB,QAAS,EAAGwB,UAAU,SAAS/B,WAAY,UACzD,kBAACkH,EAAA,EAAD,CAAOrF,UAAWR,EAAQqT,aAAcxS,UAAW,GACjD,kBAACoG,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,KACE,2BACE,uDAGJ,kBAAC,GAAD,OAEF,kBAACgF,EAAA,EAAD,MACA,kBAAC3D,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAAC,GAAD,OAEF,kBAACiK,EAAA,EAAD,MACA,kBAAC3D,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAAC,GAAD,aC3GD4S,GALG,kBACd,6BACE,4CCOAzV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAE1CM,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,aAyDN0U,GArDgB,SAAC,GAAuB,IAAtB3K,EAAqB,EAArBA,gBACzB7I,EAAUlC,KADoC,EAEpBmC,IAAMC,SAAS,IAFK,mBAE7CuL,EAF6C,KAEnCC,EAFmC,KAI9C+H,EAAmB,WACvB1P,IACGC,IAAI,0BAA2B,CAC9BF,OAAQ,CACN8F,QAAS,EACT9J,GAAI,OAGPkJ,MAAK,SAACC,GACLyC,EACEzC,EAAS7G,KAAK8H,KAAI,SAACzH,GAEjB,OADApC,QAAQC,IAAI2I,EAAS7G,MACdK,SAIZ0G,MAAM9I,QAAQC,MAanB,OAVAL,IAAM6J,WAAU,WAEd2J,MACC,IAEHxT,IAAM6J,WAAU,WAES,IAAnBjB,GAAuB4K,MAC1B,CAAC5K,IAGF,kBAACkB,EAAA,EAAD,CACEvJ,UAAWR,EAAQnB,MACnB4H,aAAW,gBACX/C,MAAO,CAACxF,UAAW,MAEnB,kBAACkM,GAAA,EAAD,CAAU5J,UAAWR,EAAQvB,OAC3B,2BACE,mDAGHgN,EAASvB,KAAI,SAACzH,GAAD,OACZ,6BACE,kBAAC2H,GAAA,EAAD,eAAc3H,EAAEoJ,cAAhB,cAAuCpJ,EAAEqJ,iBC7D7ChO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,UAAW,OACXC,SAAU,EACVC,WAAY,IACZC,WAAYL,EAAMM,QAAQD,WAAWE,QACrCC,SAAU,UAEZY,UAAW,CACTH,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPC,WAAY,IAEd+T,YAAa,CACXzU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPmF,aAAc,KAEhB8O,cAAe,CACb1U,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,KAET2T,aAAc,CACZpU,QAAS,EACTU,WAAY,GACZD,MAAO,IACPD,OAAQ,KAEVmU,aAAc,CACZ3U,QAAS,EACT4F,aAAc,GACdnF,MAAO,IACPD,OAAQ,SAyDGoU,GArDC,WACd,IAAM7T,EAAUlC,KADI,EAG0BmC,IAAMC,SAAS,GAHzC,mBAGb2I,EAHa,KAGIc,EAHJ,OAI0B1J,IAAMC,SAAS,IAJzC,6BAMpB,OACE,yBAAKM,UAAWR,EAAQ/B,MACtB,kBAACgJ,EAAA,EAAD,CAAMxG,WAAS,EAACvB,QAAS,EAAGwB,UAAU,OACpC,kBAACuG,EAAA,EAAD,CAAMtG,MAAI,EAACC,GAAI,GACb,kBAACiF,EAAA,EAAD,CAAOrF,UAAWR,EAAQZ,UAAWyB,UAAW,GAC9C,kBAAC+E,EAAA,EAAD,qBACA,kBAAC,GAAD,CACEiD,gBAAiBA,EACjBc,mBAAoBA,MAI1B,kBAAC1C,EAAA,EAAD,CAAMtG,MAAI,EAACC,GAAI,GACb,kBAACiF,EAAA,EAAD,CAAOrF,UAAWR,EAAQ0T,YAAa7S,UAAW,GAChD,kBAAC+E,EAAA,EAAD,uBACA,kBAAC+K,GAAD,QAOJ,kBAAC1J,EAAA,EAAD,CAAMtG,MAAI,EAACC,GAAI,GACb,kBAACiF,EAAA,EAAD,CAAOrF,UAAWR,EAAQ4T,aAAc/S,UAAW,GACjD,kBAAC,GAAD,CACEgI,gBAAiBA,EACjBc,mBAAoBA,KAGxB,kBAAC9D,EAAA,EAAD,CAAOrF,UAAWR,EAAQ2T,cAAe9S,UAAW,GAClD,kBAAC+E,EAAA,EAAD,qBACA,kBAAC,GAAD,CACEiD,gBAAiBA,EACjBc,mBAAoBA,MAI1B,kBAAC1C,EAAA,EAAD,CAAMtG,MAAI,EAACC,GAAI,GACb,kBAACiF,EAAA,EAAD,CAAOrF,UAAWR,EAAQqT,aAAcxS,UAAW,GACjD,kBAAC,GAAD,W,UC5EN/C,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCS,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiBd,EAAMM,QAAQD,WAAWQ,MAC1CE,UAAWf,EAAMgB,QAAQ,GACzBC,QAASjB,EAAMkB,QAAQ,EAAG,EAAG,GAC7BC,QAAS,QAEX8C,OAAQ,CACNnD,gBAAiB,SAEnBkP,UAAW,CACT9P,UAAW,SAEbiN,MAAO,CAELxL,WAAY,KAEdoM,YAAa,CACXtM,OAAQ,IACRC,MAAO,IACPhB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBoN,WAAY,CACVC,aAAc,SACdtN,WAAY,SACZe,MAAO,KAETwM,gBAAiB,GAGjBpH,SAAU,CACRxF,MAAO,WAGTyF,iBAAkB,CAChB,+BAAgC,CAC9BC,YAAY,uBAIhBC,WAAY,GAEZC,eAAgB,CACdC,YAAa,MACbH,YAAa,0BA6QFpF,gBACb,SAACC,GAAD,MAAY,CAEV0P,UAAyC,KAA9B1P,EAAM0P,UAAUuE,UAAoBjU,EAAM0P,UAAUA,UAAY1P,EAAM0P,UAAUwE,kBAC3FD,UAAWjU,EAAM0P,UAAUuE,UAC3BE,eAAgBnU,EAAM0P,UAAUyE,mBAElC,SAAC9R,GAAD,MAAe,CAEb+R,eAAgB,SAAC9I,EAAO0E,EAAcqE,GAAtB,OAA+BhS,EAAS+R,YAAe9I,EAAO0E,EAAcqE,KAC5FC,oBAAqB,kBAAMjS,EAASiS,gBACpCC,kBAAmB,SAACJ,GAAD,OACjB9R,EAASkS,YAAkBJ,KAC7BK,gBAAiB,SAAC9E,EAAUuE,GAAX,OAAyB5R,EAASmS,YAAgB9E,EAAWuE,QAbnElU,EAzQQ,SAACG,GACtB,IAAMC,EAAUlC,KADgB,EAERmC,IAAMC,UAAS,GAFP,mBAEzBC,EAFyB,KAEnBC,EAFmB,OAGIH,IAAMC,UAAS,GAHnB,mBAGzBoU,EAHyB,KAGbC,EAHa,OAIQtU,IAAMC,SAAS,IAJvB,mBAIzB2P,EAJyB,KAIX2E,EAJW,OAKUvU,IAAMC,SAAS,IALzB,mBAKzBuU,EALyB,KAKVC,EALU,OAMUzU,IAAMC,SAAS,IANzB,mBAMzBmO,EANyB,aAORpO,IAAMC,SAAS,KAPP,mBAOzBgU,EAPyB,KAOnBS,EAPmB,OAQV1U,IAAMC,SAAS,IARL,mBAQzBoO,EARyB,KAQpBC,EARoB,KAYhCzE,qBAAU,WAER/J,EAAMoU,wBACL,IA6CH,OAGE,yBAAK3T,UAAWR,EAAQ/B,MACtB,kBAAC8L,EAAA,EAAD,CAAMC,UAAU,MAAMvD,aAAW,cAC/B,kBAACwD,EAAA,EAAD,CAAe3K,MAAM,UAAUkB,UAAWR,EAAQiC,QAEhD,kBAAC2D,EAAA,EAAD,yBACA,kBAACE,EAAA,EAAD,CACQxC,MAAOvD,EAAM+T,UACbpP,OAAO,QACPxB,GAAG,OACHC,MAAM,mBACNE,YAAY,kBACZhC,KAAK,QACLD,QAAQ,WACR9B,MAAM,YACNiE,SAAU,SAAC8J,GAAQtN,EAAMsU,gBAAgBtU,EAAMwP,UAAUlC,EAAEC,OAAOhK,QAClEyC,gBAAiB,CACf/F,QAAS,CACP/B,KAAM+B,EAAQ8E,SACdkB,QAAShG,EAAQiF,aAGrBgB,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,aAGrB,kBAACW,EAAA,EAAD,CAAQrF,mBAAiB,4BAA4BJ,QAAQ,YAAY9B,MAAM,UAAUgC,QAzDvE,WACxBiT,GAAc,KAwDR,iBAKDxU,EAAMwP,UAAUrF,KAAI,SAAC0K,EAAI5D,GAAL,OACjB,kBAAC,IAAM3O,SAAP,CAAgBgI,IAAK2G,GACnB,kBAACpG,EAAA,EAAD,MACA,kBAACR,GAAA,EAAD,CAAU5J,UAAWR,EAAQmL,OAAQyJ,EAAGzJ,OACxC,kBAACf,GAAA,EAAD,KACE,kBAAC+C,GAAA,EAAD,KACE,kBAAC0H,GAAA,EAAD,CACI1D,KAAK,QACLL,SAA2D,IAAlD/Q,EAAMiU,eAAezC,QAAQqD,EAAGhF,aACzCwB,UAAW,EACX9P,QAAS,SAACmJ,GAAD,OA3FJ,SAACA,EAAOmF,GAC/B,IAAMkF,EAAQzG,EAAckD,QAAQ3B,GAC9BmF,EAAQ,aAAO1G,IAEN,IAAXyG,EACFC,EAAStD,KAAK7B,GAEdmF,EAASrD,OAAOoD,EAAO,GAGzBvG,EAAOxO,EAAMwP,UAAUwF,EAAW,GAAGlF,cAErCzP,GAAQ,GA+E8B4U,CAAiBvK,EAAOmK,EAAGhF,cAC/CqF,WAAY,CACV,kBAAkB,uBAAlB,OAA0CL,EAAGhF,iBAIrD,yBAAKpP,UAAWR,EAAQgO,UAAW5F,IAAKwM,EAAG5G,YAC3C,kBAACiD,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACIC,KAAK,MACLC,UAAW,EACXC,eAAa,EACb9N,UA1EOD,EA0EqBsR,EAAGhF,YA1Ed,WACnC,IAAM0B,EAAevR,EAAMiU,eAAezC,QAAQjO,GAC5CkO,EAAU,aAAOzR,EAAMiU,iBAEP,IAAlB1C,EACFE,EAAWC,KAAKnO,GAEhBkO,EAAWE,OAAOJ,EAAc,GAIlCvR,EAAMqU,kBAAkB5C,KAgENV,SAA2D,IAAlD/Q,EAAMiU,eAAezC,QAAQqD,EAAGhF,aACzC+B,WAAY,CACV,kBAAkB,uBAAlB,OAA0CiD,EAAGhF,mBA7EzC,IAACtM,MAsFvB,kBAACkF,EAAA,EAAD,CACEjH,kBAAgB,+BAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMmU,EACN7S,QA/FoB,WACxB8S,GAAc,IA+FV7S,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAIuS,GACR,kBAACzO,EAAA,EAAD,CAAOrF,UAAWR,EAAQ+L,aACxB,kBAAC9E,EAAA,EAAD,CAAMxG,WAAS,EAACD,UAAWR,EAAQgM,WAAYtL,UAAU,SAASxB,QAAS,GACzE,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACiF,EAAA,EAAD,CAAYxE,QAAQ,MAApB,0BAEF,kBAAC6F,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACExC,MAAOmR,EACPjU,UAAWR,EAAQkM,gBACnBgJ,WAAS,EACTxQ,OAAO,QACPxB,GAAG,OACHC,MAAM,iBACNgS,UAAU,EACV9T,KAAK,eACLD,QAAQ,WACR9B,MAAM,YACNiE,SAAU,SAAC8J,GAAQqH,EAAiBrH,EAAEC,OAAOhK,QAC7CyC,gBAAiB,CACf/F,QAAS,CACP/B,KAAM+B,EAAQ8E,SACdkB,QAAShG,EAAQiF,aAGrBgB,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,cAIjB,kBAACe,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACExC,MAAOuM,EACPnL,OAAO,QACPxB,GAAG,OACHC,MAAM,kBACNgS,UAAU,EACV9T,KAAK,aACLD,QAAQ,WACR9B,MAAM,YACNiE,SAAU,SAAC8J,GAAQmH,EAAgBnH,EAAEC,OAAOhK,QAC5CyC,gBAAiB,CACf/F,QAAS,CACP/B,KAAM+B,EAAQ8E,SACdkB,QAAShG,EAAQiF,aAGrBgB,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,cAIjB,kBAACe,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACEzC,YAAY,mDACZF,MAAM,aACN/B,QAAQ,WACR9B,MAAM,YACNgE,MAAO4Q,EACP3Q,SAAU,SAAC8J,GACTsH,EAAQtH,EAAEC,OAAOhK,QAKnBiK,WAAS,EACTC,KAAM,EACNvH,WAAY,CACVjG,QAAS,CACP/B,KAAM+B,EAAQ+E,iBACdiB,QAAShG,EAAQiF,WACjBC,eAAgBlF,EAAQkF,gBAE1BgB,UAAW,cAIjB,kBAACe,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACkG,EAAA,EAAD,CAAQzF,QAAQ,WAAW9B,MAAM,YAAYgC,QAzMhC,WAEzBvB,EAAMkU,eAAeQ,EAAe5E,EAAcqE,KAuMtC,iBAWV,kBAAC1L,EAAA,EAAD,CACEjH,kBAAgB,yBAChBC,mBAAiB,+BACjBhB,UAAWR,EAAQvB,MACnB0B,KAAMA,EACNsB,QAjNc,WAClBrB,GAAQ,IAiNJsB,sBAAoB,EACpBC,kBAAmBC,KACnBC,cAAe,CACbC,QAAS,MAGX,kBAAC2G,EAAA,EAAD,CAAM1G,GAAI5B,GACR,yBAAKK,UAAWR,EAAQnB,OACtB,kBAAC,KAAD,CAAaqQ,UAAU,EAAMrL,IAAKyK,WChUxCxQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,uBAAwB,CAEtByB,MAAO,SAGXuC,OAAQ,CACN3C,MAAO,YACP8V,WAAY,YAkGDxV,gBACb,SAACC,GAAD,MAAY,CACVC,GAAID,EAAMC,GAEVyP,UAAW1P,EAAM0P,UAAUA,UAC3ByE,eAAgBnU,EAAM0P,UAAUyE,mBAElC,SAAC9R,GAAD,MAAe,CAEbiS,oBAAqB,kBAAMjS,EAASiS,gBACpCC,kBAAmB,SAACJ,GAAD,OACjB9R,EAASkS,YAAkBJ,KAC7BqB,cAAe,SAACvV,EAAIqL,EAAOoE,EAAW+F,GAAvB,OACbpT,EAASmT,YAAcvV,EAAIqL,EAAOoE,EAAW+F,QAbpC1V,EA9Fc,SAACG,GAC5B,IAAMC,EAAUlC,KADsB,EAEAmC,IAAMC,SAAS,IAFf,mBAE/BiB,EAF+B,KAElBoU,EAFkB,OAGYtV,IAAMC,SAAS,IAH3B,mBAG/BsV,EAH+B,KAGZC,EAHY,OAIExV,IAAMC,SAAS,IAJjB,mBAI/BwV,EAJ+B,KAIjBC,EAJiB,KA2BtC,OACE,yBAAKnV,UAAWR,EAAQ/B,MACtB,kBAACgJ,EAAA,EAAD,CAAMxG,WAAS,EAACC,UAAU,SAASxB,QAAS,GAC1C,kBAAC+H,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACmF,EAAA,EAAD,CACExG,MAAM,YACN4D,GAAG,8BACHC,MAAM,gBACNoK,WAAS,EACTjK,MAAOoS,EACPP,UAAU,EACV5R,SAAU,SAAC8J,GACTsI,EAAgBtI,EAAEC,OAAOhK,QAE3BlC,QAAQ,WACRwU,QAAS,KAIb,kBAAC3O,EAAA,EAAD,CAAMtG,MAAI,GACR,kBAACoJ,EAAA,EAAD,CACEP,UACE,kBAACS,EAAA,EAAD,CAAezJ,UAAWR,EAAQiC,QAAlC,cAKDlC,EAAMiU,eAAe9J,KAAI,SAAC0K,EAAI5D,GAAL,OACxB,kBAAC,IAAM3O,SAAP,CAAgBgI,IAAK2G,GACnB,kBAACpG,EAAA,EAAD,MACA,kBAACR,GAAA,EAAD,KACE,kBAACO,GAAA,EAAD,KACG5K,EAAMwP,UAAUxP,EAAMiU,eAAehD,GAAK,GAAG7F,OAEhD,kBAACrF,EAAA,EAAD,CACEuE,IAAG,sBAAiBtK,EAAMwP,UAAUyB,GAAGpB,aACvCvM,YAAY,wBACZF,MAAM,cACN/B,QAAQ,WACR9B,MAAM,YAEN6V,UAAU,EACV5R,SAAU,SAAC8J,GACTkI,EAAelI,EAAEC,OAAOhK,QAE1BE,OAAQ,SAAC6J,IAlED,SAACwI,EAAMf,GAC/BS,EAAeM,GAEf,IAAMC,EAAY,aAAON,GACzBM,EAAahB,GAAS3T,EACtBsU,EAAqB,aAAIK,IA8DPC,CAAkB1I,EAAEC,OAAOhK,MAAO0N,IAEpCzD,WAAS,EACTC,KAAM,IAER,kBAACL,GAAA,EAAD,MACA,kBAACvC,EAAA,EAAD,OAEF,kBAACA,EAAA,EAAD,WAIN,kBAAC/D,EAAA,EAAD,CAAQvF,QAnEM,WACpBvB,EAAMsV,cACJtV,EAAMD,GACN4V,EACA3V,EAAMiU,eACNwB,IA8DoCpU,QAAQ,YAAxC,gBC1GJtD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJmJ,UAAW,OACXjJ,SAAU,EACVC,WAAY,IACZC,WAAYL,EAAMM,QAAQD,WAAWE,QACrCC,SAAU,UAEZwX,aAAc,CACZ/W,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXkB,aAAc,IACdlF,WAAY,IAEdsW,cAAe,CACbhX,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXhE,WAAY,GACZqN,UAAW,UAEbkJ,YAAa,CACXjX,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXhE,WAAY,GACZqN,UAAW,UAEbmG,cAAe,CACblU,QAASjB,EAAMkB,QAAQ,GACvBG,UAAW,SACXC,MAAOtB,EAAMM,QAAQiB,UAAUC,KAC/BC,OAAQ,IACRC,MAAO,IACPiE,UAAW,GACXhE,WAAY,QA4CDwW,GAxCE,WACf,IAAMnW,EAAUlC,KADK,EAGuBmC,IAAMC,SAAS,IAHtC,mBAGdkW,EAHc,KAGEC,EAHF,OAISpW,IAAMC,SAAS,IAJxB,mBAId4Q,EAJc,KAILC,EAJK,KAMrB,OACE,yBAAKvQ,UAAWR,EAAQ/B,MACtB,kBAACgJ,EAAA,EAAD,CAAMxG,WAAS,EAACvB,QAAS,EAAGwB,UAAU,MAAMgQ,QAAS,iBACnD,kBAACzJ,EAAA,EAAD,CAAMtG,MAAI,EAACC,GAAI,GACb,kBAACiF,EAAA,EAAD,CACErF,UAAWR,EAAQgW,aACnBnV,UAAW,EACX6C,MAAO,CAACxF,UAAW,IAAK8O,UAAW,SAAU5O,WAAY,QAGzD,kBAAC,GAAD,CAAS0S,QAASA,EAASC,WAAYA,MAG3C,kBAAC9J,EAAA,EAAD,CAAMtG,MAAI,EAAC2V,GAAI,GACb,kBAACzQ,EAAA,EAAD,CAAOrF,UAAWR,EAAQiW,cAAepV,UAAW,GAClD,kBAAC+E,EAAA,EAAD,uBACA,kBAAC,GAAD,CAAekL,QAASA,EAASC,WAAYA,MAGjD,kBAAC9J,EAAA,EAAD,CAAMtG,MAAI,EAAC2V,GAAI,GACb,kBAACzQ,EAAA,EAAD,CAAOrF,UAAWR,EAAQkW,YAAarV,UAAW,GAChD,kBAAC,GAAD,CACEuV,eAAgBA,EAChBC,kBAAmB,CAACA,wBAGxB,kBAACxQ,EAAA,EAAD,CAAOrF,UAAWR,EAAQmT,cAAetS,UAAW,GAClD,kBAAC,GAAD,CAAeuV,eAAgBA,S,UCnE5BxW,gBACb,SAACC,GAAD,MAAY,CAEVC,GAAID,EAAMC,GACVuF,UAAWxF,EAAMwF,cAEnB,SAACnD,GAAD,MAAe,CAEboD,QAAS,SAAClD,GAAD,OAAUF,EAASoD,YAAQlD,QARzBxC,EAjBD,SAACG,GAAU,MAEGE,IAAMC,SAAS,IAFlB,mBAEhBuF,EAFgB,KAET8Q,EAFS,KASvB,OADAlW,QAAQC,IAAImF,GAEV,6BACG1F,EAAMD,GAAGS,MAAQ,kBAAC,IAAD,CAAUiW,GAAG,eAAkB,KACjD,kBAAC,EAAD,CAASzO,YARO,SAAC3F,GACnBrC,EAAMuF,QAAQlD,GACdmU,EAASxW,EAAMsF,YAMsBI,MAAOA,QCTnCgR,GAAS,kBACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,KACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,cACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,cACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,YACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,YACvB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAO,EAAMC,KAAK,cACvB,kBAACC,GAAA,EAAD,S,UCxBSC,gBAAe,CAC5BvY,QAAS,CACPwY,OAAQ,CACNC,KAAK,GAAD,OALO,YAObjW,QAAS,CAEPtB,KAAM,WAIRD,UAAW,CACT2Q,MAAO,UACP1Q,KAAK,GAAD,OAfO,WAiBXwX,aAAc,WAGhB3Y,WAAY,CACVE,QAAS,WAIX0Y,kBAAmB,EAInBC,YAAa,IAEfrF,WAAY,CACVsF,GAAI,CACFC,WAAY,SACZ5Q,SAAU,SACV4O,WAAY,MACZ9V,MAAM,GAAD,OApCM,YAsCb+X,GAAI,CACFD,WAAY,SACZ5Q,SAAU,SACV4O,WAAY,MACZ9V,MAAM,GAAD,OA1CM,YA4CbgY,GAAI,CACFF,WAAY,SACZ5Q,SAAU,SACV4O,WAAY,MACZ9V,MAAM,GAAD,OAhDM,e,yHCaXxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJyG,OAAQ,EACRvG,SAAU,GAEZoZ,WAAY,CACV5X,WAAY,GACZiI,YAAa5J,EAAMkB,QAAQ,IAE7BiM,MAAO,CACLhN,SAAU,GAEZqZ,KAAM,CACJ9X,MAAO,KAET+X,cAAe,CACb9X,WAAY,OACZiI,YAAa,QAsIFhI,gBACb,SAACC,GAAD,MAAY,CACVC,GAAID,EAAMC,OAEZ,SAACoC,GAAD,MAAe,CAEboD,QAAS,SAAClD,GAAD,OAAUF,EAASoD,YAAQlD,KACpCsV,SAAU,SAAC5X,GAAD,OAAQoC,EAASwV,YAAS5X,QAPzBF,EAlIO,SAACG,GACrB,IAAMC,EAAUlC,KADe,EAEPmC,IAAMC,UAAS,GAFR,mBAExByX,EAFwB,aAGS1X,IAAMC,SAAS,OAHxB,mBAGxB0X,EAHwB,KAGVC,EAHU,OAIW5X,IAAMC,SAAS,MAJ1B,mBAIxB4X,EAJwB,KAITC,EAJS,KAKzBC,EAAW3T,QAAQuT,GACnBK,EAAY5T,QAAQyT,GAmBpBI,EAAc,WAClBL,EAAgB,MAChBE,EAAiB,OASnB,OACE,yBAAKvX,UAAWR,EAAQ/B,MACtB,kBAACka,GAAA,EAAD,CAAQ7R,SAAS,SACf,kBAAC8R,GAAA,EAAD,CAASC,gBAAc,GACrB,yBAAK7X,UAAWR,EAAQuX,YACtB,kBAAChR,EAAA,EAAD,CACE9C,SAA6B,KAAnB1D,EAAMD,GAAGiB,MACnBoQ,KAAK,QACL1K,aAAW,YACX6R,gBAAc,cACdC,gBAAc,OACdjX,QA9BO,SAACmJ,GAClBoN,EAAgBpN,EAAMiI,gBA8BZpT,MAAM,aAEN,kBAAC,KAAD,CAAUA,MAAM,eAElB,kBAAC,KAAD,CACE4D,GAAG,cACHmP,SAAUuF,EACVY,mBAAoB,KACpB3F,aAAc,CACZC,SAAU,SACVC,WAAY,UAEd0F,aAAW,EACXzF,gBAAiB,CACfF,SAAU,MACVC,WAAY,UAEd5S,KAAM6X,EACNvW,QAASyW,GAET,kBAACQ,GAAA,EAAD,CAAUpX,QAAS4W,EAAalO,UAAW2O,KAAMnC,GAAG,cAApD,aAGA,kBAACkC,GAAA,EAAD,CAAUpX,QAAS4W,EAAalO,UAAW2O,KAAMnC,GAAG,YAApD,oBAGA,kBAACkC,GAAA,EAAD,CAAUpX,QAAS4W,EAAalO,UAAW2O,KAAMnC,GAAG,cAApD,iBAMJ,kBAAC3P,EAAA,EAAD,CACA+R,oBAAoB,EACnBnM,KAAK,IACLhJ,SAA6B,KAAnB1D,EAAMD,GAAGiB,OAElB,yBAAK6M,IAAI,eAAexF,IAAKoP,KAAMhX,UAAWR,EAAQwX,QAEvDG,GACC,yBAAKnX,UAAWR,EAAQyX,eACtB,kBAAClR,EAAA,EAAD,CACE9C,SAA6B,KAAnB1D,EAAMD,GAAGiB,MACnBoQ,KAAK,QACL1K,aAAW,0BACX6R,gBAAc,cACdC,gBAAc,OACdjX,QA1EM,SAACmJ,GACnBsN,EAAiBtN,EAAMiI,gBA0EXpT,MAAM,aAEN,kBAAC,KAAD,OAGF,kBAAC,KAAD,CACE4D,GAAG,cACHmP,SAAUyF,EACVU,mBAAoB,KACpB3F,aAAc,CACZC,SAAU,SACVC,WAAY,QAEd0F,aAAW,EACXzF,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAEd5S,KAAM8X,EACNxW,QAASyW,GAET,kBAACQ,GAAA,EAAD,CAAUpX,QAAS4W,EAAalO,UAAW2O,KAAMnC,GAAG,aAApD,cAGA,kBAACkC,GAAA,EAAD,CAAUpX,QAhHT,WACbvB,EAAM2X,SAAS3X,EAAMD,IACrBwE,OAAOC,SAASkI,KAAO,MA8GX,kB,UC1IDoM,GAVH,kBACR,kBAAC,KAAD,KACE,kBAACC,EAAA,EAAD,CAAe9a,MAAOA,IACpB,kBAAC+a,GAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,S,mGC0COC,GAhCSC,cAAa,oBCxBP,kBD2BE,SAACpZ,EAAOqZ,GAAY,IACvCtP,EAAWsP,EAAO3P,QAAlBK,QACDuP,EAActZ,EAAMuF,SAASgU,QAGnC,OAFAD,EAAY1H,KAAK7H,GAEV,CACLxE,SAAU+T,MATmB,eCtBH,sBDoCE,SAACtZ,EAAOqZ,GACtC,IAAMC,EAActZ,EAAMuF,SAASgU,QAC7BxP,EAAUuP,EAAYE,KAAKH,EAAO3P,QAAQK,SAIhD,OAHAA,EAAQrJ,MAAQ2Y,EAAO3P,QAAQzJ,GAC/B8J,EAAQ0P,eAAiBJ,EAAO3P,QAAQ+P,eAEjC,CACLlU,SAAU+T,MArBmB,eCvBT,gBDgDE,SAACtZ,EAAOqZ,GAAR,MAAoB,CAC1C9T,SAAU8T,EAAO3P,QAAQnE,aA1BI,GArBT,CAC1BA,SAAU,CACR,CACEkF,WAAY,EACZiP,KAAM,GACNzZ,GAAI,EACJwZ,eAAgB,EAChBE,QAAS,GACTzY,MAAO,gBACPC,OAAQ,OACRC,OAAQ,MACRC,QAAS,YACT2M,OAAQ,GACRxB,SAAU,GACVC,QAAS,GACT6B,iBAAkB,O,kBEblBsL,GAAiB,CACrBlZ,MAAO,GACPgZ,KAAM,KACNC,QAAS,KACTzY,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTqB,SAAU,GACVpB,YAAa,GACbiE,SAAU,CAAC,IACXyD,gBAAiB,CACfyB,WAAY,KACZvJ,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRE,YAAa,IAEfkE,UAAW,IAGPqU,GAAYT,cAAa,kBAAC,EAE3BU,MAA4B,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBACvBrZ,GADsB,IAEzBuF,SAAU8T,EAAO3P,aAJM,aAAC,EAO3BoQ,MAAsB,SAAC9Z,EAAOqZ,GAC7B,IAAMpZ,EAAKoZ,EAAO3P,QAClB,MAAO,CACLxI,MAAOjB,EAAGiB,MACVwB,SAAUzC,EAAGyC,SACbvB,OAAQlB,EAAGkB,OACXC,OAAQnB,EAAGmB,OACXC,QAASpB,EAAGoB,QACZC,YAAarB,EAAGqB,YAChBiE,SAAU,OAhBa,aAAC,EAoB3BuU,MAAsB,SAAC9Z,EAAOqZ,GAC7B,IAAM/O,EAAI+O,EAAO3P,QACjB,OAAO,6BACF1J,GADL,IAEEU,MAAO4J,EAAE5J,MACTgZ,KAAMpP,EAAEoP,KACRC,QAASrP,EAAEqP,QACXzY,MAAOoJ,EAAEpJ,MACTC,OAAQmJ,EAAEnJ,OACVuB,SAAU4H,EAAE5H,SACZtB,OAAQkJ,EAAElJ,OACVC,QAASiJ,EAAEjJ,QACXC,YAAagJ,EAAEhJ,iBAhCQ,aAAC,EAmC3BwY,MAAqB,SAAC9Z,EAAOqZ,GAE5B,MAAO,CACLnY,MAFSmY,EAAO3P,QAENxI,UAtCa,aAAC,EAyC3B4Y,MAA8B,SAAC9Z,EAAOqZ,GACrC,IAAM7T,EAAY6T,EAAO3P,QAEzB,OADAlJ,QAAQC,IAAI+E,GACL,6BACFxF,GADL,IAEEwF,iBA9CuB,aAAC,EAiD3BsU,MAAiC,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBAC5BrZ,GAD2B,IAE9BgJ,gBAAiBqQ,EAAO3P,aAnDD,aAAC,EAqD3BoQ,MAAsB,SAAC9Z,EAAOqZ,GAC7B,IAAMpZ,EAAKoZ,EAAO3P,QAElB,OADAlJ,QAAQC,IAAImZ,GAAgBP,EAAO3P,SAC5B,CACLzJ,SAzDuB,GA6D7B2Z,IAGIG,GAAgB,CACpBvP,IAAK,KACLwP,aACAC,UAAW,CAAC,SACZC,UAAW,CAAC,kBAAmB,WAAY,cAG9BC,gBAAeJ,GAAeF,ICjC9BO,GA9CQhB,cAAa,kBAAC,EAahCU,MAA6B,SAAC9Z,EAAMqZ,GAAP,oBAAC,gBAC1BrZ,GADyB,IAE5BiU,UAAWoF,EAAO3P,QAAQuK,UAC1BC,kBAAmBmF,EAAO3P,QAAQgG,eAhBJ,aAAC,EAmBhCoK,MAAgC,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBAC3BrZ,GAD0B,IAE7B0P,UAAW2J,EAAO3P,QAClBwK,kBAAmBmF,EAAO3P,aAtBE,aAAC,EAwBhCoQ,MAAgC,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBAC3BrZ,GAD0B,IAE7BmU,eAAgBkF,EAAO3P,aA1BK,aAAC,EA4BhCoQ,MAAkC,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBAC7BrZ,GAD4B,IAE/B+Q,iBAAkBsI,EAAO3P,aA9BG,aAAC,EAgChCoQ,MAAwC,SAAC9Z,EAAOqZ,GAAR,oBAAC,gBACnCrZ,GADkC,IAErCwJ,sBAAuB6P,EAAO3P,aAlCF,GAfR,CAC1BpI,YAAa,GACbyO,YAAa,KACbC,aAAc,GACdqE,KAAM,GACN/I,MAAO,GACP6C,UAAW,GACXuB,UAAW,CAAC,IACZyE,eAAgB,GAChBpD,iBAAkB,GAClBvH,sBAAuB,GACvByK,UAAW,GACXC,kBAAmB,CAAC,MCJPmG,GANKC,2BAAgB,CAClC/U,SAAU4T,GACVlZ,GAAI4Z,GACJnK,UAAW0K,KCAPL,GAAgB,CACpBvP,IAAK,OACLwP,aACAC,UAAW,CAAC,MACZC,UAAW,CAAC,YAAa,YACzBK,gBAAiBC,MAKbC,GAAa,CAACC,MAEdC,GAAoBR,aAAeJ,GAAeM,IAG3CO,GAAQC,uBACnBF,GATmB,GAWnBG,+BAAoBC,mBAAe,WAAf,EAAmBN,MAG5BO,GAAYC,aAAaL,IClBtC1W,IAAMgX,SAASC,QAAU,6BACzBjX,IAAMgX,SAASE,QAAU,CACvB,8BAA+B,IAC/B,+BAAgC,yCAChC,+BAAgC,+BAGlCC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,cAAD,CAAaW,QAAS,KAAMP,UAAWA,IACrC,kBAAC,GAAD,QAGJQ,SAASC,eAAe,SjC2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzS,MAAK,SAAC0S,GACLA,EAAaC,gBAEdxS,OAAM,SAAC1D,GACNpF,QAAQoF,MAAMA,EAAMsF,a,gCkCzI5B,gRAAO,IAAM6Q,EAAW,WACXC,EAAY,YACZC,EAAY,YACZC,EAAkB,kBAClBC,EAAc,cACdC,EAAY,YACZC,EAAoB,oBACpBC,EAAuB,wB,gCCPpC,0KAAO,IAAMC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAwB,wBAExBC,EAA8B,8BAE9BC,EAAmB,oB,+BCNhC,0hBAIazV,EAAc,SAACjH,GAC1B,IAAMgE,EAAS,IAAIgF,gBAOnB,OANAhF,EAAOiF,OAAO,QAASjJ,EAAGiB,OAC1B+C,EAAOiF,OAAO,SAAUjJ,EAAGkB,QAC3B8C,EAAOiF,OAAO,SAAUjJ,EAAGmB,QAC3B6C,EAAOiF,OAAO,WAAYjJ,EAAGyC,UAC7BuB,EAAOiF,OAAO,UAAWjJ,EAAGoB,SAC5B4C,EAAOiF,OAAO,cAAejJ,EAAGqB,aACzB,SAACe,GACNiC,YAAS,kBAAmBL,GACzBkF,MAAK,WACJ9G,EAASua,EAAS3c,IAClBoC,EAASwa,EAAa5c,EAAGiB,QACzBuD,OAAOkI,MAAM,0BACblI,OAAOC,SAASkI,KAAO,OAExBtD,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAI,qBAAsB8I,QAS3C9D,EAAU,SAACxF,GACtB,IAAMgE,EAAS,IAAIgF,gBAKnB,OAJAhF,EAAOiF,OAAO,QAASjJ,EAAGiB,OAC1B+C,EAAOiF,OAAO,WAAYjJ,EAAGyC,UAC7BlC,QAAQC,IAAI,WAAYwD,GAEjB,SAAC5B,GACNiC,YAAS,gBAAiBL,GACvBkF,MAAK,SAACuD,GACLlM,QAAQC,IAAI,iBAAkBiM,EAAInK,MAClB,KAAZmK,EAAInK,KACNF,EAASwa,EAAa5c,EAAGiB,QAEzBV,QAAQC,IAAIiM,EAAInK,KAAKmH,QAAQwB,YAIhC5B,OAAM,SAACC,GACNlH,EAvBoB,SAACkH,GAAD,MAAU,CAClC/H,KAAMsY,IACNpQ,QAASH,GAqBIuT,CAAa,qCACtBtc,QAAQC,IAAI8I,QAKPsO,EAAW,SAAC5X,GACvB,OAAgB,MAAZA,EAAGS,MACE,KAGF,CACLc,KAAMsY,IACNpQ,QAAS,KAGAwI,EAAgB,SAACC,GAC5B,IAAMlO,EAAS,IAAIgF,gBAInB,OAHAhF,EAAOiF,OAAO,aAAciJ,GAGrB,WACL/N,YAAQ,8BAA+BH,GACpCkF,MAAK,SAACuD,GACW,KAAZA,EAAInK,OACN/B,QAAQC,IAAIiM,EAAInK,MAChBkC,OAAOkI,MAAM,gCACblI,OAAOC,SAASkI,KAAO,QAG1BtD,OAAM,SAACC,GACN/I,QAAQC,IAAI8I,QAIPyH,EAAgB,SAAC/Q,EAAIgR,EAASzB,GACzC,IAAMvL,EAAS,IAAIgF,gBACnBhF,EAAOiF,OAAO,KAAMjJ,EAAGS,OACvB,IAAK,IAAIqc,EAAI,EAAGA,EAAI9L,EAAQ+L,OAAQD,IAClC9Y,EAAOiF,OAAO,UAAW+H,EAAQ8L,IAEnC,IAAK,IAAIE,EAAI,EAAGA,EAAIzN,EAAgBwN,OAAQC,IAC1ChZ,EAAOiF,OAAO,UAAWsG,EAAgByN,IAE3C,OAAO,WACL3Y,YAAS,iBAAkBL,GACxBkF,MAAK,SAACC,GACgB,KAAjBA,EAAS7G,OACX/B,QAAQC,IAAI,mBACZgE,OAAOkI,MAAM,wBACblI,OAAOC,SAASkI,KAAO,QAG1BtD,MAAM9I,QAAQC,OAIR+U,EAAgB,SAACvV,EAAIqL,EAAOoE,EAAW+F,GAClD,IAAMxR,EAAS,IAAIgF,gBACnBhF,EAAOiF,OAAO,KAAMjJ,EAAGS,OACvBuD,EAAOiF,OAAO,QAASoC,GAEvB,IAAK,IAAIyR,EAAI,EAAGA,EAAIrN,EAAUsN,OAAQD,IACpC9Y,EAAOiF,OAAO,cAAewG,EAAUqN,IACvC9Y,EAAOiF,OAAO,cAAeuM,EAAasH,IAE5C,OAAO,WACLzY,YAAS,iBAAkBL,GACxBkF,MAAK,SAACuD,GACW,KAAZA,EAAInK,OACN/B,QAAQC,IAAIiM,EAAInK,MAChBkC,OAAOkI,MAAM,6BACblI,OAAOC,SAASkI,KAAO,QAG1BtD,OAAM,SAACC,GACN/I,QAAQC,IAAI8I,QAIP6K,EAAiB,SAAC9I,EAAO0E,EAAcqE,GAClD,IAAMpQ,EAAS,IAAIgF,gBAKnB,OAJAhF,EAAOiF,OAAO,QAASoC,GACvBrH,EAAOiF,OAAO,eAAgB8G,GAC9B/L,EAAOiF,OAAO,OAAQmL,GAEf,WACL/P,YAAS,yBAA0BL,GAChCkF,MAAK,SAACuD,GACW,KAAZA,EAAInK,OACN/B,QAAQC,IAAIiM,EAAInK,MAChBkC,OAAOkI,MAAM,kCACblI,OAAOC,SAASkI,KAAO,QAG1BtD,OAAM,SAACC,GACN/I,QAAQC,IAAI8I,QAMPqT,EAAW,SAAC3c,GAAD,MAAS,CAC7BuB,KAAMsY,IACNpQ,QAASzJ,IAGA4c,EAAe,SAAC3b,GAAD,OAAW,SAACmB,GACpC0B,YAAQ,eAAgB,CAAC7C,UACtBiI,MAAK,SAACC,GACL/G,EAAS2H,EAASZ,EAAS7G,OAC3BF,EAASwH,EAAiBT,EAAS7G,KAAK7B,WAEzC4I,OAAM,SAACC,GAAD,OACL/I,QAAQC,IAAR,uCAA4CS,EAA5C,KAAsDqI,QAIjDS,EAAW,SAAC/J,GAAD,MAAS,CAC7BuB,KAAMsY,IACNpQ,QAASzJ,IAIEqC,EAAS,SAACrC,GAAQ,OAAO,SAACoC,GAErC,IAAM4B,EAAS,IAAIgF,gBACnBhF,EAAOiF,OAAO,QAASjJ,EAAGiB,OAC1B+C,EAAOiF,OAAO,QAASjJ,EAAGS,OAC1BuD,EAAOiF,OAAO,WAAYjJ,EAAGyC,UAC7BuB,EAAOiF,OAAO,SAAUjJ,EAAGkB,QAC3B8C,EAAOiF,OAAO,SAAUjJ,EAAGmB,QAC3B6C,EAAOiF,OAAO,cAAejJ,EAAGqB,aAChC2C,EAAOiF,OAAO,UAAWjJ,EAAGoB,SAE5B+C,YAAQ,gBAAiBH,GACtBkF,KAAK9G,EAAS2H,EAAS/J,KAAMkJ,MAAK,WACjC1E,OAAOkI,MAAM,8BACblI,OAAOC,SAASkI,KAAO,OAGxBtD,OAAM,SAACC,GAAD,OACL/I,QAAQC,IAAR,gCAEE8I,QAgBGM,EAAmB,SAAC5J,GAAD,OAAQ,SAACoC,GACrC0B,YAAQ,mBAAoB,CAACrD,MAAOT,IACjCkJ,MAAK,SAACC,GAAD,OAAc/G,EAAS6a,EAAgB9T,EAAS7G,UACrD+G,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAR,yCAA8CR,GAAMsJ,QAG7D2T,EAAkB,SAAC3X,GAAD,MAAe,CAC1C/D,KAAMsY,IACNpQ,QAASnE,IAGA+O,EAAsB,WAEjC,OADA9T,QAAQC,IAAI,WACL,SAAC4B,GACN0B,YAAQ,qBACLoF,MAAK,SAACC,GAAD,OAAc/G,EAAS8a,EAAmB/T,EAAS7G,UACxD+G,OAAM,SAACC,GAAD,OAAS/I,QAAQC,IAAI,eAIrB0c,EAAqB,SAACzN,GAAD,MAAgB,CAC9ClO,KAAMiI,IACNC,QAASgG,IAEA6E,EAAoB,SAACJ,GAAD,MAAqB,CAClD3S,KAAMiI,IACNC,QAASyK,IAGAlC,EAAsB,SAAClB,GAAD,MAAuB,CACtDvP,KAAMiI,IACNC,QAASqH,IAGAjH,EAAqB,SAACC,GAAD,MAAc,CAC5CvI,KAAMsY,IACNpQ,QAASK,IAGEyK,EAAkB,SAAC9E,EAAWuE,GAAZ,MAA2B,CACxDzS,KAAMiI,IACNC,QAAS,CAAEuK,YACTvE,UAAUA,EAAU0N,QAAO,SAAC5P,GAAD,OAAiE,IAA3DA,EAAE6G,KAAKgJ,cAAc3L,QAAQuC,EAAUoJ,uB","file":"static/js/main.b0c25454.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/katee-lue-SxR5wZYaOtg-unsplash.cd2fcb66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/houseIcon.511a6720.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctorIcon.9119c845.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneIcon.9e95dceb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Paul.fc1d3dd7.jpg\";","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport {List,ListItem, ListItemText, Typography} from '@material-ui/core';\r\nimport PTInfo from '../../Components/PTInfo/PTInfo';\r\nimport {Button} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxHeight: '95vh',\r\n      flexGrow: 1,\r\n      paddingTop: 100,\r\n      background: theme.palette.background.default,\r\n      overflow: 'hidden',\r\n    },\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2),\r\n      outline: 'none',\r\n    },\r\n    paperInfo: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.secondary.main,\r\n      height: 675,\r\n      width: 350,\r\n      marginLeft: 10,\r\n    },\r\n}));\r\nconst PTProfile = (props) => {\r\n    const classes = useStyles();\r\n  // TODO change to reflect desired PT\r\n  const [selectedPatient, setSelectedPatient] = React.useState(1);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  console.log(props.pt)\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n    console.log(props.pt.pt_id);\r\n    const handlePTSetting = (e) => {\r\n      setImmediate(e);\r\n      \r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n        <Grid container spacing={3} direction=\"row\">\r\n          <Grid item md={3}>\r\n            <Paper className={classes.paperInfo} elevation={5}>\r\n              <Typography>Physical Therapy Profile</Typography>\r\n              <List>\r\n         <ListItem>\r\n            <ListItemText primary={`Email`} secondary={props.pt.email} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={`First Name`} secondary={props.pt.f_name} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={`Last Name`} secondary={props.pt.l_name} />\r\n          </ListItem>\r\n          <ListItem> <ListItemText primary={`Company`} secondary={props.pt.company} />\r\n          </ListItem>\r\n          <ListItem> <ListItemText primary={`Description`} secondary={props.pt.description} />\r\n          </ListItem>\r\n\r\n          \r\n          </List>\r\n              {/* <PTInfo/> */}\r\n              <Button color = \"secondary\" variant=\"outlined\" type=\"button\" onClick={handleOpen}>\r\n              Edit Profile\r\n          </Button>\r\n            </Paper>\r\n          </Grid>\r\n          </Grid>\r\n          <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n             <Fade in={open}>\r\n          <div className={classes.paper}>\r\n           <PTInfo/>\r\n          </div>\r\n        </Fade>\r\n          </Modal> \r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n      pt: state.pt,\r\n    }),\r\n//     (dispatch) => ({\r\n//       //  getPTByEmail: (email)=> dispatch(getPTByEmail(email))}),\r\n )\r\n(PTProfile);","import React from 'react';\r\nimport {TextField,FormControl} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport { EditPT} from '../../Redux/actions/actions-pt';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Button} from '@material-ui/core';\r\nimport {Formik, Form} from 'formik';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    large: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n    paper: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      //   border: '2px solid #000',a\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      outline: 'none',\r\n    },\r\n    sticky: {\r\n      backgroundColor: 'white',\r\n    },\r\n  }));\r\n  \r\n   const PTInfo = (props) => {\r\n    const classes = useStyles();\r\n //Testing the Description on pT\r\n  console.log(props.description)\r\n  \r\n    return (\r\n        <div>\r\n          \r\n            <React.Fragment>\r\n              <Formik\r\n              initialValues={{email: props.pt.email,pt_id: props.pt.pt_id,password: props.pt.password,f_name: props.pt.f_name, l_name: props.pt.l_name,description: props.pt.description,company: props.pt.company}}\r\n              onSubmit={async (data, {setSubmitting}) => {\r\n                console.log(data);\r\n                setSubmitting(true);\r\n                // make async call\r\n                await props.EditPT(data);\r\n                setSubmitting(false);\r\n              }}\r\n              >\r\n                {({\r\n            values,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            touched,\r\n            errors,\r\n          }) => (\r\n           \r\n                <Form className={classes.form}>\r\n                   <Grid container direction=\"column\" spacing={3} alignItems=\"center\">\r\n                   {/* <Grid item>\r\n                  <TextField\r\n                color=\"secondary\"\r\n                // className={classes.box}\r\n                placeholder={props.pt.f_name}\r\n                name=\"f_name\"\r\n                label=\"First Name\"\r\n                // error={!!props.errorCode}\r\n                value={values.f_name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              /> */}\r\n              {/* </Grid> */}\r\n       \r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              placeholder={props.pt.email}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              placeholder={props.pt.password}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              type=\"password\"\r\n              value={values.password}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"First Name\"\r\n              name=\"f_name\"\r\n              placeholder={props.pt.f_name}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.f_name}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"Last Name\"\r\n              name=\"l_name\"\r\n              placeholder={props.pt.l_name}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.l_name}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"Company\"\r\n              name=\"company\"\r\n              placeholder={props.pt.company}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.company}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"outlined-error\"\r\n              label=\"Description\"\r\n              name=\"description\"\r\n              placeholder={props.pt.description}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.description}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n        \r\n          </Grid>\r\n          <FormControl>\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  // variant='contained'\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                  style={{marginTop: '3rem'}}\r\n                >\r\n                  Update Profile\r\n                </Button>\r\n              </FormControl>\r\n          </Form>\r\n          )}\r\n          </Formik>\r\n          </React.Fragment>\r\n     \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        pt: state.pt,\r\n        \r\n      }),\r\n      (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        EditPT: (data) => dispatch( EditPT(data)),\r\n      }),\r\n      \r\n )\r\n(PTInfo);","module.exports = __webpack_public_path__ + \"static/media/logo_with_text.a466ade1.svg\";","import axios from 'axios';\r\n\r\nexport const getAuth = (url, params) => axios.get(url, {\r\n    params,\r\n  });\r\n\r\nexport const putAuth = (url, data) => axios.put(url, data);\r\n\r\nexport const postAuth = (url, data) => axios.post(url, data);\r\n\r\nexport const deleteAuth = (url) => axios.delete(url);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: {'Service-Worker': 'script'},\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport {Formik, Form} from 'formik';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormControl,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Visibility, VisibilityOff} from '@material-ui/icons';\r\nimport {loginPT} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    margin: '10px auto',\r\n    height: '300px',\r\n    width: '400px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  box: {\r\n    width: '200px',\r\n    marginBottom: '1.5rem',\r\n  },\r\n  cssLabel: {\r\n    color: '#00559A'\r\n  },\r\n\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `#00559A !important`,\r\n    }\r\n  },\r\n\r\n  cssFocused: {},\r\n\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: '#00559A !important'\r\n  },\r\n}));\r\n// TODO handle error text and redux.... might have to swtich it to a regular func instead of formik.\r\n\r\nconst LoginForm = (props, {submit, isLoading, error}) => {\r\n  const classes = useStyles();\r\n\r\n  // ~ Logic\r\n  const [showPassword, handleShowPassword] = React.useState(false);\r\n  if (isLoading) {\r\n    return <Typography>Loading</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Formik\r\n          initialValues={{email: '', password: ''}}\r\n          onSubmit={async (data, {setSubmitting}) => {\r\n            console.log(data);\r\n            setSubmitting(true);\r\n            // make async call\r\n            await props.loginPT(data);\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            isSubmitting,\r\n            handleChange,\r\n            handleBlur,\r\n            touched,\r\n            errors,\r\n          }) => (\r\n            <Form className={classes.form}>\r\n              <TextField\r\n                color=\"secondary\"\r\n                className={classes.box}\r\n                placeholder=\"email\"\r\n                name=\"email\"\r\n                label=\"email\"\r\n                error={!!props.errorCode}\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                // helperText={\r\n                //   // props.errorCode\r\n                // }\r\n                InputLabelProps={{\r\n                  classes: {\r\n                    root: classes.cssLabel,\r\n                    focused: classes.cssFocused,\r\n                  },\r\n                }}\r\n                InputProps={{\r\n                  classes: {\r\n                    root: classes.cssOutlinedInput,\r\n                    focused: classes.cssFocused,\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                  inputMode: \"numeric\"\r\n                }}\r\n              />\r\n              <TextField\r\n                color=\"secondary\"\r\n                placeholder=\"password\"\r\n                className={classes.box}\r\n                label=\"password\"\r\n                name=\"password\"\r\n                error={!!props.errorCode}\r\n                helperText={props.errorCode}\r\n                type={showPassword ? 'text' : 'password'}\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        style={{fontSize: '200px'}}\r\n                        aria-label=\"toggle password visibility\"\r\n                        color='secondary'\r\n                        onClick={() => {\r\n                          handleShowPassword(!showPassword);\r\n                        }}\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                  classes: {\r\n                    root: classes.cssOutlinedInput,\r\n                    focused: classes.cssFocused,\r\n                    notchedOutline: classes.notchedOutline,\r\n                  },\r\n                  inputMode: \"numeric\"\r\n                }}\r\n                InputLabelProps={{\r\n                  classes: {\r\n                    root: classes.cssLabel,\r\n                    focused: classes.cssFocused,\r\n                  },\r\n                }}\r\n              />\r\n              {/* {error && <p style={{ color: 'red' }}>{error}</p>} */}\r\n              {/* {props.errorCode && <p style={{ color: 'red' }}>{props.errorCode}</p>} */}\r\n              <FormControl>\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  // variant='contained'\r\n                  color=\"secondary\"\r\n                  type=\"submit\"\r\n                  style={{marginTop: '1.5rem'}}\r\n                >\r\n                  Login\r\n                </Button>\r\n              </FormControl>\r\n              {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </React.Fragment>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n\r\n    errorCode: state.pt.errorCode,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    loginPT: (data) => dispatch(loginPT(data)),\r\n  }),\r\n)(LoginForm);\r\n","import {Typography} from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Button,FormControl} from '@material-ui/core';\r\nimport {Formik, Form} from 'formik';\r\nimport {connect} from 'react-redux';\r\nimport {createNewPT} from '../../Redux/actions/actions-pt';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 550,\r\n        width: 500,\r\n        padding: 10,\r\n    },\r\n    textfield: {\r\n        // borderColor: theme.palette.secondary.main\r\n    },\r\n}));\r\n\r\nconst RegisterPT = (props) => {\r\n    const classes = useStyles();\r\n    const [emailError, setEmailError] = React.useState(false);\r\n    const [passwordError, setPasswordError] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <Formik initialValues={{email: \"\",pt_id: \"\",password: \"\",f_name: \"\", l_name: \"\",description: \"\",company: \"\"}}\r\n                        onSubmit={async (data, {setSubmitting}) => {\r\n                            console.log(data);\r\n                            setSubmitting(true);\r\n                            // make async call\r\n                            await props.createNewPT(data);\r\n                            setSubmitting(false);\r\n                        }}\r\n                >\r\n                    {({\r\n                          values,\r\n                          isSubmitting,\r\n                          handleChange,\r\n                          handleBlur\r\n                      }) => (\r\n                        <Form className={classes.form}>\r\n                            <Paper className={classes.root}>\r\n                                <Grid container direction=\"column\" spacing={3} alignItems=\"center\">\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            id=\"outlined-error\"\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            placeholder={props.pt.email}\r\n                                            defaultValue=\"\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            error={passwordError}\r\n                                            id=\"outlined-error\"\r\n                                            label=\"Password\"\r\n                                            name=\"password\"\r\n                                            helperText={props.errorCode}\r\n                                            placeholder={''}\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            type=\"password\"\r\n                                            value={values.password}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            error={passwordError}\r\n                                            id=\"outlined-error\"\r\n                                            label=\"First Name\"\r\n                                            name=\"f_name\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            value={values.f_name}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            error={passwordError}\r\n                                            id=\"outlined-error\"\r\n                                            label=\"Last Name\"\r\n                                            name=\"l_name\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            value={values.l_name}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            error={passwordError}\r\n                                            id=\"outlined-error\"\r\n                                            label=\"Company\"\r\n                                            name=\"company\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            value={values.company}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField\r\n                                            error={passwordError}\r\n                                            id=\"outlined-error\"\r\n                                            label=\"Description\"\r\n                                            name=\"description\"\r\n                                            defaultValue=\"\"\r\n                                            variant=\"outlined\"\r\n                                            color=\"secondary\"\r\n                                            value={values.description}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Grid>\r\n                                    <FormControl>\r\n                                        <Button\r\n                                            disabled={isSubmitting}\r\n                                            // variant='contained'\r\n                                            color=\"secondary\"\r\n                                            type=\"submit\"\r\n                                            style={{marginTop: '3rem'}}\r\n                                        >\r\n                                            Register Profile\r\n                                        </Button>\r\n                                    </FormControl>\r\n\r\n                                </Grid>\r\n                            </Paper>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        pt: state.pt,\r\n\r\n    }),\r\n    (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        createNewPT: (data) => dispatch( createNewPT(data)),\r\n    }),\r\n\r\n)\r\n(RegisterPT);\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Container, Typography} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport axios from 'axios';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Image from '../../Assets/katee-lue-SxR5wZYaOtg-unsplash.jpg';\r\nimport HouseIcon from '../../Assets/houseIcon.svg';\r\nimport DoctorIcon from '../../Assets/doctorIcon.svg';\r\nimport PhoneIcon from '../../Assets/phoneIcon.svg';\r\nimport LoginForm from '../../Components/LoginForm/LoginForm';\r\nimport RegisterPT from '../../Components/RegisterPT/RegisterPT';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  landingroot: {\r\n    minHeight: '90vh',\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    backgroundPositionY: '-35vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    paddingTop: '7vh',\r\n    paddingLeft: 100,\r\n    overflow: 'hidden',\r\n  },\r\n  buttons: {\r\n    color: theme.palette.secondary.main,\r\n    marginTop: 10,\r\n    marginRight: 45,\r\n  },\r\n  LoginModal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst Landing = ({handleLogin, error}) => {\r\n  const classes = useStyles();\r\n  const [LoginOpen, setLoginOpen] = React.useState(false);\r\n  const [RegisterOpen, setRegisterOpen] = React.useState(false);\r\n\r\n  const handleLoginOpen = () => {\r\n    setLoginOpen(true);\r\n  };\r\n\r\n  const handleLoginClose = () => {\r\n    setLoginOpen(false);\r\n  };\r\n\r\n  const handleRegisterOpen = () => {\r\n    setRegisterOpen(true);\r\n  };\r\n\r\n  const handleRegisterClose = () => {\r\n    setRegisterOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.landingroot}>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Grid container direction=\"row\">\r\n            <Grid item>\r\n              <Typography variant=\"h2\" alignItems=\"center\">\r\n                Living Better One Day At a Time...\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Grid container direction=\"row\" spacing={4}>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={DoctorIcon} />\r\n                <Typography variant=\"h5\">Get matched with a patient</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={HouseIcon} />\r\n                <Typography variant=\"h5\">\r\n                  Provide care on your own schedule\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={PhoneIcon} />\r\n                <Typography variant=\"h5\">\r\n                  Heal with professional feedback\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.buttons}\r\n              onClick={handleRegisterOpen}\r\n            >\r\n              Register Now\r\n            </Button>\r\n          </Grid>\r\n          <Modal\r\n            open={RegisterOpen}\r\n            onClose={handleRegisterClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            className={classes.LoginModal}\r\n          >\r\n            <Fade in={RegisterOpen}>\r\n          <div className={classes.paper}>\r\n          <RegisterPT/>\r\n          </div>\r\n        </Fade>\r\n\r\n          </Modal>\r\n          <Grid item>\r\n            <Button className={classes.buttons} onClick={handleLoginOpen}>\r\n              Already registered? Log in\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={LoginOpen}\r\n        onClose={handleLoginClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        className={classes.LoginModal}\r\n      >\r\n        {/* <DialogTitle color=\"secondary\" id=\"form-dialog-title\">Log In</DialogTitle> */}\r\n        <DialogContent>\r\n          <LoginForm />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import * as constants from '../constants/constants-patient';\r\nimport * as constantsWorkout from '../constants/constants-workouts';\r\nimport {getAuth, postAuth, putAuth} from './actions-auth';\r\n\r\nexport const createNewPatient = (patient) => {\r\n  const data = {\r\n    email: patient.email,\r\n    f_name: patient.f_name,\r\n    l_name: patient.l_name,\r\n    company: patient.compact,\r\n  };\r\n  return (dispatch) => {\r\n    postAuth('/api/patient/register', data)\r\n      .then(dispatch(createPatient(patient)))\r\n      .catch((err) => console.log('Error creating patient:', err));\r\n  };\r\n};\r\n\r\nexport const createPatient = (patient) => ({\r\n    type: constants.CREATE_PATIENT,\r\n    payload: patient,\r\n  });\r\n\r\nexport const fetchPatients = () => (dispatch) => {\r\n    getAuth('/api/patient/all')\r\n      .then((response) => dispatch(loadPatients(response.data.patients)))\r\n      .catch((err) => console.log('Error fetching all patients:', err));\r\n  };\r\n\r\nexport const loadPatients = (patients) => ({\r\n    type: constants.GET_PATIENTS,\r\n    payload: patients,\r\n  });\r\n\r\nexport const updatePatientPT = (patient, pt, prospective_pt) => {\r\n  const data = {patient_id: patient, pt, prospective_pt};\r\n  return (dispatch) => {\r\n    putAuth('api/patient/update-pt', data)\r\n      .then(dispatch(submitUpdatePatientPT(patient, pt, prospective_pt)))\r\n      .catch((err) =>\r\n        console.log(\r\n          `Error updating patient PT's to ${pt} and/or ${prospective_pt}:`,\r\n          err,\r\n        ),\r\n      );\r\n  };\r\n};\r\n\r\nexport const submitUpdatePatientPT = (patient, pt, prospective_pt) => ({\r\n    type: constants.UPDATE_PATIENT_PTS,\r\n    payload: {\r\n      patient,\r\n      pt,\r\n      prospective_pt,\r\n    },\r\n  });\r\n\r\n  export const putEntryComment = (entry_id, comment) => {\r\n    const params = new URLSearchParams();\r\n    params.append('entry_id', entry_id);\r\n    params.append('comment', comment);\r\n    \r\n    return () => {\r\n      putAuth('/api/patient/entry/comment', params)\r\n        .then((res) => {\r\n          if (res.data == 200) {\r\n            console.log(res.data);\r\n            window.alert('comment post: success');\r\n            window.location.href = '/';\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  };\r\n\r\n  export const putVideoComment = ( patient_video_id, comment) => {\r\n    const params = new URLSearchParams();\r\n    params.append('patient_video_id',  patient_video_id);\r\n    params.append('comment', comment);\r\n    \r\n    return () => {\r\n      putAuth('/api/patient/video/comment', params)\r\n        .then((res) => {\r\n          if (res.data == 200) {\r\n            console.log(res.data);\r\n            window.alert('patient video comment post: success');\r\n            window.location.href = '/';\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  };\r\n  // export const submitComment = (entry_id,comment) => ({\r\n  //   type: constants.UPDATE_COMMENT,\r\n  //   payload: {\r\n  //     patient,\r\n  //     pt,\r\n  //     prospective_pt,\r\n  //   },\r\n  // });\r\n\r\nexport const fetchPatientExerciseVideos = (selectedPatient) => {\r\n  const params = new URLSearchParams();\r\n  params.append('patient', selectedPatient);\r\n  console.log('made it to fetch patients videos!!');\r\n  return (dispatch) => {\r\n    getAuth('/api/patient/video/id', params)\r\n      .then((response) => dispatch(loadPatientExerciseVideos(response.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadPatientExerciseVideos = (patientExerciseVideos) => ({\r\n    type: constantsWorkout.GET_PATIENT_EXERCISE_VIDEOS,\r\n    payload: patientExerciseVideos,\r\n  });\r\n","import React, {useEffect, useState} from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport {ListItem, ListItemText} from '@material-ui/core';\r\nimport {\r\n  createNewPT,\r\n  fetchPTsPatients,\r\n  setSelectedPatient,\r\n  updatePT,\r\n} from '../../Redux/actions/actions-pt';\r\nimport {fetchPatientExerciseVideos} from '../../Redux/actions/actions-patients';\r\nimport './PatientList.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n    fontSize: 18,\r\n  },\r\n  subheader: {\r\n    fontSize: 18,\r\n  },\r\n  patientList: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nconst PatientList = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // will load patients when the page loads\r\n    props.updatePT(props.pt);\r\n  }, []);\r\n\r\n  const handlePatientClick = (e, patientId) => {\r\n    props.fetchPatientExerciseVideos(patientId);\r\n    props.patients.map((p) => {\r\n      if (p.patient_id === patientId) {\r\n        props.setSelectedPatient(p);\r\n      }\r\n    });\r\n    setOpen(true);\r\n    // TODO return patients info by its ID.\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        subheader={\r\n          <ListSubheader\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            className={classes.sticky}\r\n          >\r\n            Patient List\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        {props.patients.map((p) => (\r\n          <ListItem\r\n            key={p.patient_id}\r\n            button\r\n            selected={props.selectedPatient === p.patient_id}\r\n            onClick={(event) => handlePatientClick(event, p.patient_id)}\r\n          >\r\n            <ListItemText primary={`${p.f_name} ${p.l_name}`} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        className={classes.patientList}\r\n        subheader={\r\n          <ListSubheader\r\n            component=\"div\"\r\n            color=\"inherit\"\r\n            className={classes.sticky}\r\n            id=\"potential-patient-list\"\r\n          >\r\n            Potential Patient List\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        <ListItem button>\r\n          <ListItemText secondary=\"no available potential patients\" />\r\n        </ListItem>\r\n      </List>\r\n      {/* <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div  style={{ width: \"auto\", backgroundColor: \"white\" }}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Full Name`}\r\n                                              secondary={`${props.selectedPatient.f_name} ${props.selectedPatient.l_name}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Email`} secondary={`${props.selectedPatient.email}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Company Name`} secondary={`${props.selectedPatient.company}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                        </List>\r\n                    </div>\r\n                </Fade>\r\n            </Modal> */}\r\n    </div>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    createNewPT: (pt) => dispatch(createNewPT(pt)),\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    updatePT: (pt) => dispatch(updatePT(pt)),\r\n    fetchPatientExerciseVideos: (selectedPatient) =>\r\n      dispatch(fetchPatientExerciseVideos(selectedPatient)),\r\n  }),\r\n)(PatientList);\r\n","import React, {useEffect} from 'react';\r\nimport {\r\n  addResponseMessage,\r\n  addUserMessage,\r\n  deleteMessages,\r\n  Widget,\r\n} from 'react-chat-widget';\r\nimport 'react-chat-widget/lib/styles.css';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport './Messaging.css';\r\nimport {fetchPTsPatients} from '../../Redux/actions/actions-pt';\r\n\r\nconst Messaging = (props) => {\r\n  useEffect(() => {\r\n    deleteMessages(1000);\r\n    fetchMessages();\r\n  }, [props.pt.selectedPatient.patient_id]);\r\n\r\n  const fetchMessages = () => {\r\n    axios\r\n      .get('api/pt/message/id', {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n          patient: props.pt.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        response.data.map((message) => {\r\n          if (message.sender === props.pt.email) {\r\n            addUserMessage(message.message);\r\n          } else {\r\n            addResponseMessage(message.message);\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleNewUserMessage = (newMessage) => {\r\n    const params = new URLSearchParams();\r\n    params.append('message', newMessage);\r\n    params.append('pt', props.pt.pt_id);\r\n    params.append('patient', props.pt.selectedPatient.patient_id);\r\n\r\n    axios\r\n      .post('api/pt/message/register', params)\r\n      .then((response) => {\r\n        if (response.data === 200) {\r\n          console.log('Message success');\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        title={\r\n          props.pt.selectedPatient.patient_id\r\n            ? 'Messages From'\r\n            : 'Message Center'\r\n        }\r\n        subtitle={\r\n          props.pt.selectedPatient.patient_id\r\n            ? `${props.pt.selectedPatient.f_name} ${props.pt.selectedPatient.l_name}`\r\n            : 'Choose a patient'\r\n        }\r\n        showTimeStamp={false}\r\n        senderPlaceHolder={'Enter message...'}\r\n        handleNewUserMessage={handleNewUserMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n  }),\r\n  (dispatch) => ({\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n  }),\r\n)(Messaging);\r\n","// Test component to see if a summation of all activity\r\n// is worthwhile to the application\r\n\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  fetchPTsPatients,\r\n  setSelectedPatient,\r\n} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport const ActivitySummary = (props) => {\r\n  const classes = useStyles();\r\n  const [activity, setActivity] = React.useState([]);\r\n  const [subheader, setSubheader] = React.useState('');\r\n\r\n  const fetchSummaryInfo = () => {\r\n    axios\r\n      .get('api/pt/summary', {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setActivity(\r\n          response.data.map((a) => {\r\n            console.log(response.data);\r\n            return a;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchPatPTSummary = () => {\r\n    axios\r\n      .get('api/pt/patient-activity', {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n          patient: props.pt.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setActivity(\r\n          response.data.map((a) => a),\r\n        );\r\n      });\r\n  };\r\n  const showButton = () => {\r\n    if (props.pt.selectedPatient.patient_id == null) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Button variant=\"contained\" color=\"inherit\" onClick={handleClick}>\r\n        Show Summary Info\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const handleClick = () => {\r\n    props.setSelectedPatient({});\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.pt.selectedPatient.patient_id == null) {\r\n      fetchSummaryInfo();\r\n      setSubheader('For All Patients');\r\n    } else {\r\n      fetchPatPTSummary(props.pt.selectedPatient.patient_id);\r\n      setSubheader(\r\n        `For ${ \r\n          props.pt.selectedPatient.f_name \r\n          } ${ \r\n          props.pt.selectedPatient.l_name}`,\r\n      );\r\n    }\r\n  }, [props.pt.selectedPatient]);\r\n\r\n  return (\r\n    <List\r\n      className={classes.paper}\r\n      aria-label=\"activity-list\"\r\n      style={{maxHeight: 300}}\r\n    >\r\n      <ListItem color=\"inherit\" className={classes.modal}>\r\n        <b>{subheader}</b>\r\n      </ListItem>\r\n      {/* <ListItem className={classes.modal}> */}\r\n      {/*  <u> */}\r\n      {/*    <b>Activity : Minutes</b> */}\r\n      {/*  </u> */}\r\n      {/* </ListItem> */}\r\n      {activity.map((a) => (\r\n        <div>\r\n          <ListItem>\r\n            {`${a.type_activity  } : ${  a.duration  } minutes`}\r\n          </ListItem>\r\n        </div>\r\n      ))}\r\n      {showButton()}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n  }),\r\n)(ActivitySummary);\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport axios from 'axios';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport { Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedPatient } from '../../Redux/actions/actions-pt';\r\nimport { putEntryComment } from '../../Redux/actions/actions-patients';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  paperUpload: {\r\n    height: 500,\r\n    width: 500,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  gridUpload: {\r\n    alignContent: \"center\",\r\n    alignItems: 'center',\r\n    width: 500,\r\n  },\r\n  UploadTextfield: {\r\n    // borderColor: '#00559A'\r\n  },\r\n  cssLabel: {\r\n    color: '#00559A'\r\n  },\r\n\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `#00559A !important`,\r\n      width: 200\r\n    }\r\n  },\r\n\r\n  cssFocused: {},\r\n\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: '#00559A !important'\r\n  },\r\n  comments: {\r\n    color: '#00559A',\r\n  }\r\n}));\r\n\r\nexport const SearchReport = (props) => {\r\n  const classes = useStyles();\r\n  const [patientReport, setPatientReport] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [comment, setComment] = React.useState('')\r\n  const [entryID,setEntryID] = React.useState('')\r\n\r\n  const fetchPatientsReport = () => {\r\n    axios\r\n      .get('/api/patient/entry/all', {\r\n        params: {\r\n          patient_id: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data.patient);\r\n\r\n        setPatientReport(\r\n          response.data.map((pr) => pr),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleCommentClick = (e,entry_id) => {\r\n    setEntryID(entry_id)\r\n    setOpen(true)\r\n\r\n  }\r\n  const handleCommentClose = () => {\r\n\r\n    setOpen(!open)\r\n\r\n  }\r\n  const HandleCommentSend = () => {\r\n    //TODO UPDATECOMMENT\r\n    // props.createExercise(exerciseTitle, exercise_url, tags)\r\n    props.putEntryComment(entryID,comment)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // will load patients Report when the page loads\r\n    if (props.selectedPatient.patient_id != '') fetchPatientsReport();\r\n  }, [props.selectedPatient.patient_id]);\r\n\r\n  return (\r\n    <div className={classes.sticky}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        style={{ maxHeight: 580, overflowY: 'scroll' }}\r\n      >\r\n        {patientReport.map((pr) => (\r\n          <div>\r\n          <ListItem>\r\n            <ListItemText primary={pr.entry} secondary={` posted on ${pr.created_on}`} />\r\n            <ListItemIcon>\r\n              <AddCommentIcon\r\n                color=\"secondary\"\r\n                onClick={(event) => handleCommentClick(event,pr.entry_id)} \r\n              />\r\n            </ListItemIcon>\r\n          </ListItem>\r\n            <ListItemText className={classes.comments} primary={pr.comment === undefined ? '' : `Comment: ${pr.comment}` }/>\r\n          <Divider/>\r\n          </div>\r\n          \r\n         \r\n        ))}\r\n      </List>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-upload-open\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleCommentClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <Paper className={classes.paperUpload}>\r\n            <Grid container className={classes.gridUpload} direction=\"column\" spacing={2}>\r\n              <Grid item>\r\n                <Typography variant='h5'> Write {props.selectedPatient.f_name} a comment on their progress:</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  placeholder={`Great work ${props.selectedPatient.f_name}!`}\r\n                  label='insert comment here'\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  value={comment}\r\n                  onChange={(e) => { setComment(e.target.value) }}\r\n                  multiline\r\n                  rows={5}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={HandleCommentSend}> SEND </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n        </Fade>\r\n\r\n\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    putEntryComment: (entry_id,comment) => dispatch(putEntryComment(entry_id,comment)),\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n  }),\r\n)(SearchReport);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {fetchPTsPatients} from '../../Redux/actions/actions-pt';\r\nimport Image from '../../Assets/Images/Paul.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  large: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport const PatientInfo = (props) => {\r\n  const classes = useStyles();\r\n  const [info, setInfo] = React.useState([]);\r\n \r\n\r\n  const fetchPatientInfo = () => {\r\n    axios\r\n      .get('api/patient/id', {\r\n        params: {\r\n          patient_id: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data.patient);\r\n\r\n        setInfo(response.data);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n\r\n    // will load patients activities when the page loads\r\n    if (props.selectedPatient != '') fetchPatientInfo();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n    <div>\r\n      <List component=\"nav\" aria-label=\"patient-list\" style={{maxHeight: 300}}>\r\n        <div>\r\n          <ListItem>\r\n            <Avatar\r\n              alt=\"user-profile images\"\r\n              src={Image}\r\n              className={classes.large}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText\r\n              primary={`Patient`}\r\n              secondary={`${info.f_name  } ${  info.l_name}`}\r\n            />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={`Email`} secondary={info.email} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={`Company`} secondary={info.company} />\r\n          </ListItem>\r\n          <ListItem>\r\n            <ListItemText primary={`Injured Area`} secondary={info.injury} />\r\n          </ListItem>\r\n          <Divider />\r\n        </div>\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n    patients: state.pt.patients,\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({}),\r\n)(PatientInfo);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactPlayer from 'react-player';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  fetchPTsPatients,\r\n  setSelectedPatient,\r\n} from '../../Redux/actions/actions-pt';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { putVideoComment } from '../../Redux/actions/actions-patients';\r\n\r\n\r\n//TODO http://api.pthealth.club/api/patient/workout/remove?workout_id=51\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  videos: {\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modalComment: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  paperUpload: {\r\n    height: 500,\r\n    width: 500,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  gridUpload: {\r\n    alignContent: \"center\",\r\n    alignItems: 'center',\r\n    width: 500,\r\n  },\r\n  UploadTextfield: {\r\n    // borderColor: '#00559A'\r\n  },\r\n  cssLabel: {\r\n    color: '#00559A'\r\n  },\r\n\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `#00559A !important`,\r\n      width: 200\r\n    }\r\n  },\r\n\r\n  cssFocused: {},\r\n\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: '#00559A !important'\r\n  },\r\n\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n  thumbnail: {\r\n    maxHeight: \"150px\",\r\n\r\n  },\r\n  comments: {\r\n    color: '#00559A',\r\n  }\r\n}));\r\n\r\nexport const PatientVideos = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [videos, setVideos] = React.useState([]);\r\n  const [selectedVideo, setSelectedVideo] = React.useState([]);\r\n  const [URL, setURL] = React.useState('');\r\n  const [feedback, setFeedback] = React.useState('');\r\n  const [comment, setComment] = React.useState('')\r\n  const [videoID,setVideoID] = React.useState('')\r\n  const [openComment, setOpenComment] = React.useState(false);\r\n\r\n  const handleVideoClick = (e, video_url) => {\r\n    setURL(video_url);\r\n    setOpen(true);\r\n  };\r\n\r\n  const fetchPatientVideos = () => {\r\n    axios\r\n      .get('api/patient/video/id', {\r\n        params: {\r\n          patient: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setVideos(\r\n          response.data.map((pv) => {\r\n            console.log(response.data.patient_video);\r\n            return pv;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n\r\n  console.log( videos.map((pv) => {\r\n    return pv;\r\n  }))\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // const handleChange = () => {\r\n  //   setFeedback(feedback);\r\n  // };\r\n\r\n  // const handleSubmit = () => {\r\n  //   alert(`Feedback was submitted: ${  feedback}`);\r\n  //   handleClose();\r\n  // };\r\n  const handleCommentClick = (e,patient_video_id) => {\r\n    setVideoID(patient_video_id)\r\n    e.stopPropagation()\r\n    // setVideoID(video_id)\r\n    setOpenComment(true)\r\n\r\n  }\r\n  console.log(videoID)\r\n\r\n  const handleCommentClose = () => {\r\n\r\n    setOpenComment(!openComment)\r\n\r\n  }\r\n  const HandleCommentSend = () => {\r\n    props.putVideoComment(videoID,comment)\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // will load patients video when the page loads\r\n    if (props.selectedPatient != '') fetchPatientVideos();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        style={{maxHeight: 600, overflowY: 'scroll'}}\r\n      >\r\n        {videos.map((v) => (\r\n          <div>\r\n            <ListItem >{v.uploaded}</ListItem>\r\n            <ListItem\r\n            \r\n              key={v.patient_video_id}\r\n              button\r\n              selected={selectedVideo == v.patient_video_id}\r\n              onClick={(event) => handleVideoClick(event, v.video_url)}\r\n            >\r\n\r\n              <img\r\n              className={classes.thumbnail}\r\n                src={\r\n                  `https://img.youtube.com/vi/${ \r\n                  v.video_url.split('=')[1] \r\n                  }/0.jpg`\r\n                }\r\n              />\r\n              \r\n              <ListItemIcon className={classes.videos}>\r\n              <AddCommentIcon\r\n                color=\"secondary\"\r\n                onClick={(event) => handleCommentClick(event,v.patient_video_id)} \r\n              />\r\n            </ListItemIcon>\r\n            </ListItem>\r\n            <ListItemText className={classes.comments} primary={v.comment === undefined ? '' : `Comment: ${v.comment}` }/>\r\n            <Divider/>\r\n          </div>\r\n        ))}\r\n      </List>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-comment-open\"\r\n        aria-describedby=\"transition-modal-comment\"\r\n        className={classes.modalComment}\r\n        open={openComment}\r\n        onClose={handleCommentClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={openComment}>\r\n          <Paper className={classes.paperUpload}>\r\n            <Grid container className={classes.gridUpload} direction=\"column\" spacing={2}>\r\n              <Grid item>\r\n                <Typography variant='h5'> Write {props.selectedPatient.f_name} a comment on their video: </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  placeholder={`Great work ${props.selectedPatient.f_name}!`}\r\n                  label='insert comment here'\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  value={comment}\r\n                  onChange={(e) => { setComment(e.target.value) }}\r\n                  multiline\r\n                  rows={5}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={HandleCommentSend}> SEND </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <ReactPlayer controls={true} url={URL} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    putVideoComment: (videoID, comment) => dispatch(putVideoComment(videoID, comment))\r\n  }),\r\n)(PatientVideos);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {connect} from 'react-redux';\r\nimport {setSelectedPatient} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: 'white',\r\n    //   border: '2px solid #000',a\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n}));\r\n\r\nconst CurrentWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [workout, setWorkout] = React.useState([]);\r\n  const [selectedWorkout, setSelectedWorkout] = React.useState('');\r\n  const [exercises, setExercises] = React.useState([]);\r\n\r\n  const fetchWorkoutInfo = () => {\r\n    axios\r\n      .get('api/patient/workout/id', {\r\n        params: {\r\n          patient: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setWorkout(\r\n          response.data.map((w) => {\r\n            console.log(response.data);\r\n            setSelectedWorkout(response.data[0].workout);\r\n            return w;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchWorkoutExercises = () => {\r\n    axios\r\n      .get('api/pt/exercises', {\r\n        params: {\r\n          workout: selectedWorkout,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setExercises(\r\n          response.data.map((e) => {\r\n            console.log(response.data);\r\n            return e;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleWorkoutClick = (e, selectedWorkout) => {\r\n    // double check proper setting\r\n    console.log(`Selected Workout: ${  selectedWorkout}`);\r\n    setSelectedWorkout(selectedWorkout);\r\n    fetchWorkoutExercises();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // will load workout info when the page loads\r\n    if (props.selectedPatient != '') fetchWorkoutInfo();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        className={classes.paper}\r\n        aria-label=\"workout-list\"\r\n        style={{maxHeight: 300}}\r\n      >\r\n        <ListItem className={classes.modal}>\r\n          <u>\r\n            <b>Current Assignment</b>\r\n          </u>\r\n        </ListItem>\r\n        {workout.map((w) => (\r\n          <div>\r\n            <ListItem\r\n              key={w.workout}\r\n              button\r\n              selected={selectedWorkout == w.workout}\r\n              onClick={(event) => handleWorkoutClick(event, w.workout)}\r\n            >\r\n              {w.title}\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <List\r\n            style={{\r\n              maxHeight: 400,\r\n              overflowY: 'scroll',\r\n              backgroundColor: 'white',\r\n            }}\r\n            subheader={\r\n              <ListSubheader\r\n                component=\"div\"\r\n                color=\"inherit\"\r\n                classes={'patient-list'}\r\n              >\r\n                Workout Details\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {exercises.map((e) => (\r\n              <div>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Exercise Title`}\r\n                    secondary={e.title}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Description`}\r\n                    secondary={e.description}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <a href={e.exercise_url} target=\"_blank\">\r\n                    <img\r\n                      src={\r\n                        `https://img.youtube.com/vi/${ \r\n                        e.exercise_url.split('=')[1] \r\n                        }/0.jpg`\r\n                      }\r\n                    />\r\n                  </a>\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n  }),\r\n)(CurrentWorkout);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {ListItem, ListItemText, Typography} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from 'axios';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport {fetchPatientExerciseVideos} from '../../Redux/actions/actions-patients';\r\nimport {\r\n  createNewPT,\r\n  fetchPTsPatients,\r\n  setSelectedPatient,\r\n  updatePT,\r\n} from '../../Redux/actions/actions-pt';\r\nimport SearchReport from '../SearchReport/SearchReport';\r\nimport PatientInfo from '../PatientInfo/PatientInfo';\r\nimport PatientVideos from '../PatientVideos/PatientVideo';\r\nimport PatientVideo from '../PatientVideos/PatientVideo';\r\nimport CurrentWorkout from '../PatientWorkout/CurrentWorkout';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3),\r\n  },\r\n  large: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  gridList: {\r\n    flexWrap: 'nowrap',\r\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n    transform: 'translateZ(0)',\r\n  },\r\n  title: {\r\n    color: theme.palette.primary.light,\r\n  },\r\n  titleBar: {\r\n    background:\r\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n  },\r\n  info: {\r\n    width: 200,\r\n    height: 410,\r\n  },\r\n  workout: {\r\n    marginTop: 10,\r\n    width: 200,\r\n    height: 100,\r\n  },\r\n  report: {\r\n    width: 350,\r\n    height: 600,\r\n  },\r\n  video: {\r\n    width: 300,\r\n    height: 600,\r\n  },\r\n}));\r\n\r\nexport const PatientDashboardInfo = (props) => {\r\n  const classes = useStyles();\r\n  const [userImage, setUserImage] = React.useState('');\r\n  const [videos, setVideos] = React.useState([]);\r\n\r\n  const fetchPatientImg = () => {\r\n    // TODO hard-coded need to add support to various patients in DB\r\n    axios.get('https://randomuser.me/api/?gender=male').then((response) => {\r\n      setUserImage(response.data.results[0].picture.large);\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // will load patients activities when the page loads\r\n    fetchPatientImg();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {props.selectedPatient.patient_id ? (\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Info</Typography>\r\n            <Paper className={classes.info}>\r\n              <PatientInfo />\r\n            </Paper>\r\n            <Paper className={classes.workout}>\r\n              <CurrentWorkout />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Progress Log</Typography>\r\n            <Paper className={classes.report}>\r\n              <SearchReport />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">Patient Videos</Typography>\r\n            <Paper className={classes.video}>\r\n              <PatientVideo />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <p></p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedPatient: state.pt.selectedPatient,\r\n    PatientExerciseVideos: state.exercises.patientExerciseVideos,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    createNewPT: (pt) => dispatch(createNewPT(pt)),\r\n    setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    updatePT: (pt) => dispatch(updatePT(pt)),\r\n    fetchPatientExerciseVideos: (selectedPatient) =>\r\n      dispatch(fetchPatientExerciseVideos(selectedPatient)),\r\n  }),\r\n)(PatientDashboardInfo);\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Button from '@material-ui/core/Button';\r\nimport {assignWorkout, fetchPTsPatients} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport const AssignWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchPTsPatients(props.pt.pt_id);\r\n  }, []);\r\n\r\n  const handleCheckToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  // console.log(checked);\r\n  \r\n\r\n  const assignToPatients = () => {\r\n    props.assignWorkout(props.pt, checked, props.selectedWorkouts);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"workout-list\"\r\n        style={{maxHeight: 275, overflowY: 'scroll'}}\r\n        subheader={\r\n          <ListSubheader\r\n            component=\"div\"\r\n            color=\"inherit\"\r\n            className={classes.sticky}\r\n          >\r\n            Assign To...\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        {props.patients.map((p, k) => (\r\n          <div key={k}>\r\n            <ListItem>\r\n              <ListItemText primary={`${p.f_name} ${p.l_name}`} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  onChange={handleCheckToggle(p.patient_id)}\r\n                  checked={checked.indexOf(p.patient_id) !== -1}\r\n                  inputProps={{\r\n                    'aria-labelledby': `checkbox-list-label-${p.patient_id}`,\r\n                  }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n\r\n      <Button variant=\"contained\" color=\"inherit\" onClick={assignToPatients}>\r\n        ASSIGN\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedWorkouts: state.exercises.selectedWorkouts,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    assignWorkout: (pt, checked, selectedWorkouts) =>\r\n      dispatch(assignWorkout(pt, checked, selectedWorkouts)),\r\n  }),\r\n)(AssignWorkout);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport List from '@material-ui/core/List';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  fetchPTsPatients,\r\n  setSelectedWorkouts,\r\n  deleteWorkout\r\n} from '../../Redux/actions/actions-pt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  popoverDelete: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n    color: 'red'\r\n    \r\n  }\r\n}));\r\n\r\nexport const SavedWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [workouts, setWorkouts] = React.useState([]);\r\n  const [exercises, setExercises] = React.useState([]);\r\n  const [openPopOver, setOpenPopOver] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [selectedID,setSelectedID] = React.useState('')\r\n\r\n  const fetchPTWorkouts = () => {\r\n    axios\r\n      .get('api/pt/workouts', {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setWorkouts(\r\n          response.data.map((w) => {\r\n            console.log(response.data);\r\n            return w;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchWorkoutExercises = (selectedWorkout) => {\r\n    axios\r\n      .get('api/pt/exercises', {\r\n        params: {\r\n          workout: selectedWorkout,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setExercises(\r\n          response.data.map((e) => {\r\n            console.log(response.data);\r\n            setOpen(true);\r\n            return e;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleDeleteClose = () => {\r\n    setOpenPopOver(!openPopOver)\r\n    setAnchorEl(null);\r\n\r\n  }\r\n\r\n  const handleWorkoutClick = (e, selectedWorkout) => {\r\n    fetchWorkoutExercises(selectedWorkout);\r\n  };\r\n\r\n\r\n  const handleDeleteClick = (e,workout_id) => {\r\n    e.stopPropagation()\r\n\r\n    setAnchorEl(e.currentTarget)\r\n    setOpenPopOver(!openPopOver)\r\n\r\n    setSelectedID(workout_id)\r\n    // props.deleteWorkout(workout_id)\r\n  };\r\n\r\n  const handleDelete = (e,id) => {\r\n    e.stopPropagation()\r\n    props.deleteWorkout(id)\r\n  }\r\n  const handleWorkoutToggle = (value) => () => {\r\n    const currentIndex = props.selectedWorkouts.indexOf(value);\r\n    const newcheckedWorkout = [...props.selectedWorkouts];\r\n\r\n    if (currentIndex === -1) {\r\n      newcheckedWorkout.push(value);\r\n    } else {\r\n      newcheckedWorkout.splice(currentIndex, 1);\r\n    }\r\n\r\n    props.setSelectedWorkouts(newcheckedWorkout);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchPTWorkouts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        aria-label=\"workout-list\"\r\n        subheader={\r\n          <ListSubheader\r\n            component=\"div\"\r\n            color=\"inherit\"\r\n            className={classes.sticky}\r\n          >\r\n            Saved Workouts\r\n          </ListSubheader>\r\n        }\r\n      >\r\n        {workouts.map((w, k) => (\r\n          <div key={k}>\r\n            <ListItem\r\n              button\r\n              selected={props.selectedWorkouts == w.workout_id}\r\n              onClick={(event) => handleWorkoutClick(event, w.workout_id)}\r\n            >\r\n              <ListItemIcon>\r\n              <DeleteIcon\r\n                color=\"secondary\"\r\n                onClick={(event) => handleDeleteClick(event,w.workout_id)} \r\n              />\r\n            </ListItemIcon>\r\n              {w.title}\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  onChange={handleWorkoutToggle(w.workout_id)}\r\n                  checked={props.selectedWorkouts.indexOf(w.workout_id) !== -1}\r\n                  inputProps={{\r\n                    'aria-labelledby': `checkbox-list-label-${w.workout_id}`,\r\n                  }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n      <Popover\r\n        className={classes.popoverDelete}\r\n        id='delete-popover'\r\n        open={openPopOver}\r\n        anchorEl={anchorEl}\r\n        onClose={handleDeleteClose}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          Are you sure you want to delete this?\r\n          </Typography>\r\n          <Button  \r\n          color=\"secondary\" \r\n          onClick={(e)=> {handleDelete(e,selectedID)}}>\r\n            YES\r\n          </Button>\r\n\r\n          <Button  \r\n          color=\"secondary\" \r\n          onClick={handleDeleteClose}>\r\n            NO\r\n            </Button>\r\n      </Popover>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <List\r\n            style={{\r\n              maxHeight: 400,\r\n              overflowY: 'scroll',\r\n              backgroundColor: 'white',\r\n            }}\r\n            subheader={\r\n              <ListSubheader component=\"div\" color=\"inherit\">\r\n                Workout Details\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {exercises.map((e, k) => (\r\n              <div key={k}>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={`Exercise Title`}\r\n                    secondary={e.title}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Description`}\r\n                    secondary={e.description}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <a href={e.exercise_url} target=\"_blank\">\r\n                    <img\r\n                      src={\r\n                        `https://img.youtube.com/vi/${ \r\n                        e.exercise_url.split('=')[1] \r\n                        }/0.jpg`\r\n                      }\r\n                    />\r\n                  </a>\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedWorkouts: state.exercises.selectedWorkouts,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    setSelectedWorkouts: (selectedWorkouts) =>\r\n      dispatch(setSelectedWorkouts(selectedWorkouts)),\r\n    deleteWorkout: (workout_id) => dispatch(deleteWorkout(workout_id))\r\n  }),\r\n)(SavedWorkout);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport PatientList from '../../Components/PatientList/PatientList';\r\nimport Messaging from '../../Components/Messaging/Messaging';\r\nimport ActivitySummary from '../../Components/PTActivitySummary/PTActivitySummary';\r\nimport PatientDashboardInfo from '../../Components/PatientDashboardInfo/PatientDashboardInfo';\r\nimport AssignWorkout from '../../Components/AssignWorkout/AssignWorkout';\r\nimport SavedWorkout from '../../Components/SavedWorkout/SavedWorkout';\r\n\r\n// TODO Will most likely have to fix paperMessage margins when we implement\r\n// the actual message board.\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 24,\r\n    color: theme.palette.secondary.light,\r\n  },\r\n  paperMessage: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 700,\r\n    width: 350,\r\n    marginTop: 50,\r\n    marginBottom: 139,\r\n  },\r\n  paperPatients: {\r\n    padding: theme.spacing(0),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 650,\r\n    width: 350,\r\n    marginTop: 50,\r\n    marginLeft: 10,\r\n  },\r\n  paperProfile: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    backgroundColor: '#f5f5f5',\r\n    height: 700,\r\n    width: 1000,\r\n    marginTop: 50,\r\n    marginBottom: 139,\r\n    marginRight: 15,\r\n  },\r\n  paperSummary: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    marginTop: 60,\r\n    width: 350,\r\n    height: 830,\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      justify={'space-between'}\r\n      alignItems={'flex-start'}\r\n    >\r\n      <Messaging />\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        direction=\"row\"\r\n        style={{\r\n          margin: 0,\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Grid item>\r\n          <Paper\r\n            className={classes.paperPatients}\r\n            style={{overflow: 'auto'}}\r\n            elevation={5}\r\n          >\r\n            <PatientList />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item>\r\n          <Paper className={classes.paperProfile} elevation={5}>\r\n            {/* <PatientsList/>  TODO need to handle Axios or hooks\r\n                        in order to use */}\r\n            <Typography variant=\"h5\">\r\n              <u>Patient Profile</u>\r\n            </Typography>\r\n            <PatientDashboardInfo />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container spacing={3} direction=\"column\" alignItems={'center'}>\r\n            <Paper className={classes.paperSummary} elevation={5}>\r\n              <Grid item>\r\n                <Typography>\r\n                  <b>\r\n                    <u>Total Activity Summary</u>\r\n                  </b>\r\n                </Typography>\r\n                <ActivitySummary />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid item>\r\n                <SavedWorkout />\r\n              </Grid>\r\n              <Divider />\r\n              <Grid item>\r\n                <AssignWorkout />\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nconst LoginPage = () => (\r\n    <div>\r\n      <h1>LOGIN PAGE</h1>\r\n    </div>\r\n  );\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport List from '@material-ui/core/List';\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n}));\r\n\r\nexport const ActivitySummary = ({selectedPatient}) => {\r\n  const classes = useStyles();\r\n  const [activity, setActivity] = React.useState([]);\r\n\r\n  const fetchSummaryInfo = () => {\r\n    axios\r\n      .get('api/pt/patient-activity', {\r\n        params: {\r\n          patient: 1,\r\n          pt: 100,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setActivity(\r\n          response.data.map((a) => {\r\n            console.log(response.data);\r\n            return a;\r\n          }),\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // will load patients-PT activity summary when the page loads\r\n    fetchSummaryInfo();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    // will load patients-PT activity summary when the page loads\r\n    if (selectedPatient != '') fetchSummaryInfo();\r\n  }, [selectedPatient]);\r\n\r\n  return (\r\n    <List\r\n      className={classes.paper}\r\n      aria-label=\"activity-list\"\r\n      style={{maxHeight: 300}}\r\n    >\r\n      <ListItem className={classes.modal}>\r\n        <u>\r\n          <b>Activity : Minutes</b>\r\n        </u>\r\n      </ListItem>\r\n      {activity.map((a) => (\r\n        <div>\r\n          <ListItem>{`${a.type_activity  } : ${  a.duration}`}</ListItem>\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ActivitySummary;\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {ListItem, ListItemText, Typography} from '@material-ui/core';\r\nimport PatientVideo from '../../Components/PatientVideos/PatientVideo';\r\n\r\nimport SearchReport from '../../Components/SearchReport/SearchReport';\r\nimport PatientInfo from '../../Components/PatientInfo/PatientInfo';\r\nimport ActivitySummary from '../../Components/PatientActivitySummary/ActivitySummary';\r\nimport CurrentWorkout from '../../Components/PatientWorkout/CurrentWorkout';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxHeight: '95vh',\r\n    flexGrow: 1,\r\n    paddingTop: 100,\r\n    background: theme.palette.background.default,\r\n    overflow: 'hidden',\r\n  },\r\n  paperInfo: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 675,\r\n    width: 350,\r\n    marginLeft: 10,\r\n  },\r\n  paperVideos: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 675,\r\n    width: 350,\r\n    marginBottom: 139,\r\n  },\r\n  paperProgress: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 630,\r\n    width: 400,\r\n  },\r\n  paperSummary: {\r\n    padding: 5,\r\n    marginLeft: 10,\r\n    width: 355,\r\n    height: 200,\r\n  },\r\n  paperWorkout: {\r\n    padding: 5,\r\n    marginBottom: 10,\r\n    width: 420,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  // TODO change to reflect desired patient\r\n  const [selectedPatient, setSelectedPatient] = React.useState(1);\r\n  const [selectedWorkout, setSelectedWorkout] = React.useState('');\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} direction=\"row\">\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperInfo} elevation={5}>\r\n            <Typography>Patient Info</Typography>\r\n            <PatientInfo\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperVideos} elevation={5}>\r\n            <Typography>Patient Videos</Typography>\r\n            <PatientVideo />\r\n            {/* <PatientVideo */}\r\n            {/*  selectedPatient={selectedPatient} */}\r\n            {/*  setSelectedPatient={setSelectedPatient} */}\r\n            {/* /> */}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperWorkout} elevation={5}>\r\n            <CurrentWorkout\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n          <Paper className={classes.paperProgress} elevation={5}>\r\n            <Typography>Progress Log</Typography>\r\n            <SearchReport\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperSummary} elevation={5}>\r\n            <ActivitySummary />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport List from '@material-ui/core/List';\r\nimport {Divider,ListItem,ListSubheader} from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ReactPlayer from 'react-player';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { connect } from 'react-redux';\r\nimport { PlayArrow, TextFieldsRounded } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  createExercise,\r\n  fetchExerciseVideos,\r\n  selectedExercises,\r\n  filterExercises,\r\n} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: 'none',\r\n  },\r\n  sticky: {\r\n    backgroundColor: 'white',\r\n  },\r\n  thumbnail: {\r\n    maxHeight: '175px',\r\n  },\r\n  title: {\r\n    // need to set up for dynamic scaling\r\n    marginLeft: 125,\r\n  },\r\n  paperUpload: {\r\n    height: 500,\r\n    width: 500,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  gridUpload: {\r\n    alignContent: \"center\",\r\n    alignItems: 'center',\r\n    width: 500,\r\n  },\r\n  UploadTextfield: {\r\n    // borderColor: '#00559A'\r\n  },\r\n  cssLabel: {\r\n    color: '#00559A'\r\n  },\r\n\r\n  cssOutlinedInput: {\r\n    '&$cssFocused $notchedOutline': {\r\n      borderColor: `#00559A !important`,\r\n    }\r\n  },\r\n\r\n  cssFocused: {},\r\n\r\n  notchedOutline: {\r\n    borderWidth: '1px',\r\n    borderColor: '#00559A !important'\r\n  },\r\n}));\r\n\r\nexport const Library = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openUpload, setOpenUpload] = React.useState(false);\r\n  const [exercise_url, setExercise_url] = React.useState('');\r\n  const [exerciseTitle, setExerciseTitle] = React.useState('');\r\n  const [selectedVideo, setSelectedVideo] = React.useState([]);\r\n  const [tags, setTags] = React.useState('');\r\n  const [URL, setURL] = React.useState('');\r\n  // const [searchKey, setSearchKey] = React.useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    // fetchExerciseVideos();\r\n    props.fetchExerciseVideos();\r\n  }, []);\r\n\r\n  const handleVideoClick = (event, exercise_id) => {\r\n    const index = selectedVideo.indexOf(exercise_id);\r\n    const newIndex = [...selectedVideo];\r\n\r\n    if (index === -1) {\r\n      newIndex.push(exercise_id);\r\n    } else {\r\n      newIndex.splice(index, 1);\r\n    }\r\n\r\n    setURL(props.exercises[newIndex - 1].exercise_url);\r\n    // console.log(URL);\r\n    setOpen(true);\r\n  };\r\n  const HandleUploadSubmit = () => {\r\n    //TODO set props.add exercise here\r\n    props.createExercise(exerciseTitle, exercise_url, tags)\r\n  }\r\n\r\n  const handleAddExercise = () => {\r\n    setOpenUpload(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleCloseUpload = () => {\r\n    setOpenUpload(false);\r\n  };\r\n  // Handles checked videos and adds video ids into Checked\r\n  const handleCheckToggle = (value) => () => {\r\n    const currentIndex = props.selectedVideos.indexOf(value);\r\n    const newChecked = [...props.selectedVideos];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    // setChecked(newChecked);\r\n    props.selectedExercises(newChecked);\r\n  };\r\n\r\n  return (\r\n    // TODO add search field and update query to return tags\r\n\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"video-list\">\r\n        <ListSubheader color=\"inherit\" className={classes.sticky}>\r\n\r\n          <Typography>Exercise Library</Typography>\r\n          <TextField\r\n                  value={props.searchKey}\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Search Exercises\"\r\n                  placeholder=\"i.e knee, elbow\"\r\n                  type=\"input\"\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onChange={(e) => { props.filterExercises(props.exercises,e.target.value) }}\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n          <Button aria-describedby=\"transition-modal-exercise\" variant=\"contained\" color=\"inherit\" onClick={handleAddExercise}>\r\n            Add Exercise\r\n          </Button>\r\n        </ListSubheader>\r\n\r\n        {props.exercises.map((ev, k) => (\r\n            <React.Fragment key={k}>\r\n              <Divider />\r\n              <ListItem className={classes.title}>{ev.title}</ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <PlayArrow\r\n                      edge=\"start\"\r\n                      checked={props.selectedVideos.indexOf(ev.exercise_id) !== -1}\r\n                      tabIndex={-1}\r\n                      onClick={(event) => handleVideoClick(event, ev.exercise_id)}\r\n                      inputprops={{\r\n                        \"aria-labelledby\": `checkbox-list-label-${ev.exercise_id}`,\r\n                      }}\r\n                  />\r\n                </ListItemIcon>\r\n                <img className={classes.thumbnail} src={ev.thumbnail} />\r\n                <ListItemSecondaryAction>\r\n                  <Checkbox\r\n                      edge=\"end\"\r\n                      tabIndex={-1}\r\n                      disableRipple\r\n                      onChange={handleCheckToggle(ev.exercise_id)}\r\n                      checked={props.selectedVideos.indexOf(ev.exercise_id) !== -1}\r\n                      inputProps={{\r\n                        \"aria-labelledby\": `checkbox-list-label-${ev.exercise_id}`,\r\n                      }}\r\n                  />\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </React.Fragment>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-upload-open\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={openUpload}\r\n        onClose={handleCloseUpload}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={openUpload}>\r\n          <Paper className={classes.paperUpload}>\r\n            <Grid container className={classes.gridUpload} direction=\"column\" spacing={2}>\r\n              <Grid item>\r\n                <Typography variant='h5'>Upload Exercise Video</Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  value={exerciseTitle}\r\n                  className={classes.UploadTextfield}\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Exercise Title\"\r\n                  required={true}\r\n                  type=\"upload-title\"\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onChange={(e) => { setExerciseTitle(e.target.value) }}\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  value={exercise_url}\r\n                  margin=\"dense\"\r\n                  id=\"name\"\r\n                  label=\"Enter Video URL\"\r\n                  required={true}\r\n                  type=\"upload-url\"\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onChange={(e) => { setExercise_url(e.target.value) }}\r\n                  InputLabelProps={{\r\n                    classes: {\r\n                      root: classes.cssLabel,\r\n                      focused: classes.cssFocused,\r\n                    },\r\n                  }}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <TextField\r\n                  placeholder=\"i.e legs, ankle workout, hamstring curls, .. etc\"\r\n                  label=\"video tags\"\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  value={tags}\r\n                  onChange={(e) => {\r\n                    setTags(e.target.value);\r\n                  }}\r\n                  // onBlur={(e) => {\r\n                  //   submitDescription(e.target.value, k);\r\n                  // }}\r\n                  multiline\r\n                  rows={4}\r\n                  InputProps={{\r\n                    classes: {\r\n                      root: classes.cssOutlinedInput,\r\n                      focused: classes.cssFocused,\r\n                      notchedOutline: classes.notchedOutline,\r\n                    },\r\n                    inputMode: \"numeric\"\r\n                  }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={HandleUploadSubmit}> Submit </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n\r\n        </Fade>\r\n\r\n\r\n\r\n      </Modal>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <ReactPlayer controls={true} url={URL} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of exercise, as defined by RootReducer\r\n    exercises: state.exercises.searchKey === '' ?  state.exercises.exercises : state.exercises.filteredExercises,\r\n    searchKey: state.exercises.searchKey,\r\n    selectedVideos: state.exercises.selectedVideos,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    createExercise: (title, exercise_url, tags) => dispatch(createExercise(title, exercise_url, tags)),\r\n    fetchExerciseVideos: () => dispatch(fetchExerciseVideos()),\r\n    selectedExercises: (selectedVideos) =>\r\n      dispatch(selectedExercises(selectedVideos)),\r\n    filterExercises: (exercises,searchKey) => dispatch(filterExercises(exercises, searchKey)),\r\n  }),\r\n)(Library);\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport {Divider, ListItem, ListItemText, Button} from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Create} from '@material-ui/icons';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport {\r\n  createWorkout,\r\n  fetchExerciseVideos,\r\n  selectedExercises,\r\n} from '../../Redux/actions/actions-pt';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      //   margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n  sticky: {\r\n    color: 'secondary',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\n\r\nexport const CreateWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [description, setDescription] = React.useState('');\r\n  const [videoDescriptions, setVideoDescriptions] = React.useState([]);\r\n  const [workoutTitle, setWorkoutTitle] = React.useState('');\r\n\r\n  const submitDescription = (desc, index) => {\r\n    setDescription(desc);\r\n\r\n    const instructions = [...videoDescriptions];\r\n    instructions[index] = description;\r\n    setVideoDescriptions([...instructions]);\r\n  };\r\n\r\n  // console.log(props.selectedVideos);\r\n  // console.log(workoutTitle);\r\n  // console.log(videoDescriptions);\r\n\r\n  const submitWorkout = () => {\r\n    props.createWorkout(\r\n      props.pt,\r\n      workoutTitle,\r\n      props.selectedVideos,\r\n      videoDescriptions,\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\" spacing={3}>\r\n        <Grid item>\r\n          <TextField\r\n            color=\"secondary\"\r\n            id=\"standard-multiline-flexible\"\r\n            label=\"Workout Title\"\r\n            multiline\r\n            value={workoutTitle}\r\n            required={true}\r\n            onChange={(e) => {\r\n              setWorkoutTitle(e.target.value);\r\n            }}\r\n            variant=\"outlined\"\r\n            rowsMax={4}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <List\r\n            subheader={\r\n              <ListSubheader className={classes.sticky}>\r\n                Exercises\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {props.selectedVideos.map((ev, k) => (\r\n              <React.Fragment key={k}>\r\n                <Divider />\r\n                <ListItem>\r\n                  <ListItemText>\r\n                    {props.exercises[props.selectedVideos[k] - 1].title}\r\n                  </ListItemText>\r\n                  <TextField\r\n                    key={`description-${props.exercises[k].exercise_id}`}\r\n                    placeholder=\"Exercise Instructions\"\r\n                    label=\"Description\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    // value = {description}\r\n                    required={true}\r\n                    onChange={(e) => {\r\n                      setDescription(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      submitDescription(e.target.value, k);\r\n                    }}\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                  <ListItemIcon></ListItemIcon>\r\n                  <Divider />\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n          <Button onClick={submitWorkout} variant=\"outlined\">\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n    // The state of exercise, as defined by RootReducer\r\n    exercises: state.exercises.exercises,\r\n    selectedVideos: state.exercises.selectedVideos,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchExerciseVideos: () => dispatch(fetchExerciseVideos()),\r\n    selectedExercises: (selectedVideos) =>\r\n      dispatch(selectedExercises(selectedVideos)),\r\n    createWorkout: (pt, title, exercises, descriptions) =>\r\n      dispatch(createWorkout(pt, title, exercises, descriptions)),\r\n  }),\r\n)(CreateWorkout);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {Typography} from '@material-ui/core';\r\nimport Library from '../../Components/ExerciseLibrary/Library';\r\nimport SavedWorkout from '../../Components/SavedWorkout/SavedWorkout';\r\nimport AssignWorkout from '../../Components/AssignWorkout/AssignWorkout';\r\nimport CreateWorkout from '../../Components/CreateWorkout/CreateWorkout';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '95vh',\r\n    flexGrow: 1,\r\n    paddingTop: 100,\r\n    background: theme.palette.background.default,\r\n    overflow: 'hidden',\r\n  },\r\n  paperLibrary: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 750,\r\n    width: 400,\r\n    marginTop: 10,\r\n    marginBottom: 139,\r\n    marginLeft: 30,\r\n  },\r\n  paperWorkouts: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 700,\r\n    width: 500,\r\n    marginTop: 10,\r\n    marginLeft: 25,\r\n    overflowY: 'scroll',\r\n  },\r\n  paperAssign: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 400,\r\n    width: 300,\r\n    marginTop: 10,\r\n    marginLeft: 50,\r\n    overflowY: 'scroll',\r\n  },\r\n  paperPatients: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.secondary.main,\r\n    height: 375,\r\n    width: 300,\r\n    marginTop: 10,\r\n    marginLeft: 50,\r\n  },\r\n}));\r\n\r\nconst Exercise = () => {\r\n  const classes = useStyles();\r\n  // const [selectedWorkout, setSelectedWorkout] = React.useState([]);\r\n  const [checkedWorkout, setCheckedWorkout] = React.useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} direction=\"row\" justify={'space-between'}>\r\n        <Grid item md={3}>\r\n          <Paper\r\n            className={classes.paperLibrary}\r\n            elevation={5}\r\n            style={{maxHeight: 700, overflowY: 'scroll', paddingTop: '0px'}}\r\n          >\r\n            {/* <Typography>Exercise Library</Typography> */}\r\n            <Library checked={checked} setChecked={setChecked} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paperWorkouts} elevation={5}>\r\n            <Typography>Create Workout</Typography>\r\n            <CreateWorkout checked={checked} setChecked={setChecked} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paperAssign} elevation={5}>\r\n            <SavedWorkout\r\n              checkedWorkout={checkedWorkout}\r\n              setCheckedWorkout={{setCheckedWorkout}}\r\n            />\r\n          </Paper>\r\n          <Paper className={classes.paperPatients} elevation={5}>\r\n            <AssignWorkout checkedWorkout={checkedWorkout} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Exercise;\r\n","import React from 'react';\r\n// eslint-disable-next-line import/extensions\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {loginPT} from '../Redux/actions/actions-pt.js';\r\nimport Landing from './LandingPage/index';\r\n// TODO maybe this should be in the component folder since we can just login straight in the\r\n// landing page\r\nconst Login = (props) => {\r\n  // essentially handles submit on loginForm\r\n  const [error, setError] = React.useState('');\r\n\r\n  const handleLogin = (data) => {\r\n    props.loginPT(data);\r\n    setError(props.errorCode);\r\n  };\r\n  console.log(error);\r\n  return (\r\n    <div>\r\n      {props.pt.pt_id ? <Redirect to=\"/dashboard\" /> : null}\r\n      <Landing handleLogin={handleLogin} error={error} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    errorCode: state.errorCode,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    loginPT: (data) => dispatch(loginPT(data)),\r\n  }),\r\n)(Login);\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport Landing from './Pages/LandingPage/index';\r\nimport Dashboard from './Pages/Dashboard/Dashboard';\r\nimport LoginPage from './Pages/LoginPage/LoginPage';\r\nimport Profile from './Pages/PatientProfile/Profile';\r\nimport Exercise from './Pages/ExerciseLibrary/Exercise';\r\nimport PTProfile from './Pages/PTProfile/PTProfile';\r\nimport Login from './Pages/Login';\r\n// Will handle all page routing\r\n// TODO ask if we still need to keep about me pages\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route exact={true} path=\"/\">\r\n      <Login />\r\n    </Route>\r\n    <Route exact={true} path=\"/dashboard\">\r\n      <Dashboard />\r\n    </Route>\r\n    <Route exact={true} path=\"/loginpage\">\r\n      <LoginPage />\r\n    </Route>\r\n    <Route exact={true} path=\"/profile\">\r\n      <Profile />\r\n    </Route>\r\n    <Route exact={true} path=\"/library\">\r\n      <Exercise />\r\n    </Route>\r\n    <Route exact={true} path=\"/PTProfile\">\r\n      <PTProfile />\r\n    </Route>\r\n  </Switch>\r\n);\r\n","import {createMuiTheme} from '@material-ui/core/styles'; // different from @@material-ui/styles\r\nimport React from 'react';\r\n\r\nconst darkBlue = '#00559A';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      blue: `${darkBlue}`,\r\n    },\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: '#FAFAFA',\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: '#0066ff',\r\n      main: `${darkBlue}`,\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: '#00559A',\r\n    },\r\n\r\n    background: {\r\n      default: '#FAFAFA',\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 0,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n  typography: {\r\n    h2: {\r\n      fontFamily: 'Roboto',\r\n      fontSize: '4.5rem',\r\n      fontWeight: '700',\r\n      color: `${darkBlue}`,\r\n    },\r\n    h5: {\r\n      fontFamily: 'Roboto',\r\n      fontSize: '1.5rem',\r\n      fontWeight: '700',\r\n      color: `${darkBlue}`,\r\n    },\r\n    h6: {\r\n      fontFamily: 'Roboto',\r\n      fontSize: '1.5rem',\r\n      fontWeight: '700',\r\n      color: `${darkBlue}`,\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logo from \"../../Assets/Images/logo_with_text.svg\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginPT, logoutPT} from \"../../Redux/actions/actions-pt\";\r\n\r\n// TODO when you click the logo, redirect to dashboard\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 3,\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: 10,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    width: 200,\r\n  },\r\n  accountCircle: {\r\n    marginLeft: 'auto',\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nexport const Header = (props) => {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorElLeft, setAnchorElLeft] = React.useState(null);\r\n  const [anchorElRight, setAnchorElRight] = React.useState(null);\r\n  const openLeft = Boolean(anchorElLeft);\r\n  const openRight = Boolean(anchorElRight);\r\n\r\n  const logout = () => {\r\n    props.logoutPT(props.pt);\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorElLeft(event.currentTarget);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorElRight(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElLeft(null);\r\n    setAnchorElRight(null);\r\n  };\r\n  const handleRedirect = () => {\r\n    setAnchorElLeft(null);\r\n    setAnchorElRight(null);\r\n    if (anchorElLeft == null || anchorElRight == null)\r\n      return <Redirect to=\"/dashboard\" />;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar disableGutters>\r\n          <div className={classes.menuButton}>\r\n            <IconButton\r\n              disabled={props.pt.email === '' ? true :false}\r\n              edge=\"start\"\r\n              aria-label=\"drop-down\"\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"secondary\"\r\n            >\r\n              <MenuIcon color=\"secondary\" />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorElLeft}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'center',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n              }}\r\n              open={openLeft}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/dashboard\">\r\n                Dashboard\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/library\">\r\n                Exercise Library\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/PTProfile\">\r\n                PT Settings\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Button \r\n          disableTouchRipple={true}\r\n           href=\"/\"\r\n           disabled={props.pt.email === '' ? true :false}\r\n           >\r\n            <img alt=\"company logo\" src={logo} className={classes.logo} />\r\n          </Button>\r\n          {auth && (\r\n            <div className={classes.accountCircle}>\r\n              <IconButton\r\n                disabled={props.pt.email === '' ? true :false}\r\n                edge=\"start\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                color=\"secondary\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              \r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElRight}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: 'center',\r\n                  horizontal: 'left',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={openRight}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/settings\">\r\n                  My Profile\r\n                </MenuItem>\r\n                <MenuItem onClick={logout}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n  }),\r\n  (dispatch) => ({\r\n    // May be used if we add a login to the dropdown\r\n    loginPT: (data) => dispatch(loginPT(data)),\r\n    logoutPT: (pt) => dispatch(logoutPT(pt)),\r\n  }),\r\n)(Header);\r\n","import React from 'react';\r\nimport {ThemeProvider} from '@material-ui/styles';\r\nimport {Routes} from './Routes';\r\nimport theme from './Components/UI/Theme';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header'; // App bar\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Header />\r\n        <Routes />\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  );\r\n\r\nexport default App;\r\n","import {handleActions} from 'redux-actions';\r\nimport * as constants from '../constants/constants-patient';\r\n\r\nconst initialPatientState = {\r\n  patients: [\r\n    {\r\n      patient_id: 1,\r\n      user: 14,\r\n      pt: 2,\r\n      prospective_pt: 2,\r\n      user_id: 14,\r\n      email: 'test@mail.com',\r\n      f_name: 'jane',\r\n      l_name: 'doe',\r\n      company: 'the NY co',\r\n      injury: '',\r\n      entry_id: '',\r\n      comment: '',\r\n      patient_video_id: '',\r\n\r\n    },\r\n  ],\r\n};\r\n\r\nconst PatientsReducer = handleActions(\r\n  {\r\n    // TODO: check that this actually works\r\n    [constants.CREATE_PATIENT]: (state, action) => {\r\n      const {patient} = action.payload;\r\n      const newPatients = state.patients.slice();\r\n      newPatients.push(patient);\r\n\r\n      return {\r\n        patients: newPatients,\r\n      };\r\n    },\r\n\r\n    // TODO: check that this actually works\r\n    [constants.UPDATE_PATIENT_PTS]: (state, action) => {\r\n      const newPatients = state.patients.slice();\r\n      const patient = newPatients.find(action.payload.patient);\r\n      patient.pt_id = action.payload.pt;\r\n      patient.prospective_pt = action.payload.prospective_pt;\r\n\r\n      return {\r\n        patients: newPatients,\r\n      };\r\n    },\r\n\r\n    [constants.GET_PATIENTS]: (state, action) => ({\r\n        patients: action.payload.patients,\r\n      }),\r\n  },\r\n  initialPatientState,\r\n);\r\n\r\nexport default PatientsReducer;\r\n","export const CREATE_PATIENT = 'CREATE_PATIENT';\r\nexport const GET_PATIENTS = 'GET_PATIENTS';\r\nexport const UPDATE_PATIENT_PTS = 'UPDATE_PATIENT_PTS';\r\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';","import {handleActions} from 'redux-actions';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {persistReducer} from 'redux-persist';\r\nimport * as constants from '../constants/constants-pt';\r\n\r\nconst initialPTState = {\r\n  pt_id: '',\r\n  user: null,\r\n  user_id: null,\r\n  email: '',\r\n  f_name: '',\r\n  l_name: '',\r\n  company: '',\r\n  password: '',\r\n  description: '',\r\n  patients: [{}],\r\n  selectedPatient: {\r\n    patient_id: null,\r\n    email: '',\r\n    f_name: '',\r\n    l_name: '',\r\n    description: '',\r\n  },\r\n  errorCode: '',\r\n};\r\n\r\nconst PTReducer = handleActions(\r\n  {\r\n    [constants.GET_PT_PATIENTS]: (state, action) => ({\r\n        ...state,\r\n        patients: action.payload,\r\n      }),\r\n\r\n    [constants.CREATE_PT]: (state, action) => {\r\n      const pt = action.payload;\r\n      return {\r\n        email: pt.email,\r\n        password: pt.password,\r\n        f_name: pt.f_name,\r\n        l_name: pt.l_name,\r\n        company: pt.company,\r\n        description: pt.description,\r\n        patients: [],\r\n      };\r\n    },\r\n\r\n    [constants.UPDATE_PT]: (state, action) => {\r\n      const p = action.payload;\r\n      return {\r\n        ...state,\r\n        pt_id: p.pt_id,\r\n        user: p.user,\r\n        user_id: p.user_id,\r\n        email: p.email,\r\n        f_name: p.f_name,\r\n        password: p.password,\r\n        l_name: p.l_name,\r\n        company: p.company,\r\n        description: p.description,\r\n      };\r\n    },\r\n    [constants.LOGIN_PT]: (state, action) => {\r\n      const pt = action.payload;\r\n      return {\r\n        email: pt.email,\r\n      };\r\n    },\r\n    [constants.CHECK_LOGIN_ERROR]: (state, action) => {\r\n      const errorCode = action.payload;\r\n      console.log(errorCode);\r\n      return {\r\n        ...state,\r\n        errorCode,\r\n      };\r\n    },\r\n    [constants.SET_SELECTED_PATIENT]: (state, action) => ({\r\n        ...state,\r\n        selectedPatient: action.payload,\r\n      }),\r\n    [constants.LOGOUT_PT]: (state, action) => {\r\n      const pt = action.payload;\r\n      console.log(initialPTState, action.payload);\r\n      return {\r\n        pt,\r\n      };\r\n    },\r\n  },\r\n  initialPTState,\r\n);\r\n\r\nconst persistConfig = {\r\n  key: 'pt',\r\n  storage,\r\n  whitelist: ['pt_id'],\r\n  blacklist: ['selectedPatient', 'patients', 'errorCode'],\r\n};\r\n\r\nexport default persistReducer(persistConfig, PTReducer);\r\n","import {handleActions} from 'redux-actions';\r\nimport * as constants from '../constants/constants-workouts';\r\n\r\nconst initialWorkoutState = {\r\n  description: '',\r\n  exercise_id: null,\r\n  exercise_url: '',\r\n  tags: '',\r\n  title: '',\r\n  thumbnail: '',\r\n  exercises: [{}],\r\n  selectedVideos: [],\r\n  selectedWorkouts: [],\r\n  patientExerciseVideos: [],\r\n  searchKey: '',\r\n  filteredExercises: [{}]\r\n};\r\n\r\nconst WorkoutReducer = handleActions(\r\n  {\r\n    // [constants.SET_NEW_EXERCISE_VIDEO]: (state, action) => {\r\n    //   const exercise = action.payload;\r\n\r\n    //   return {\r\n    //     title: exercise.title,\r\n    //     exercise_url: exercise.exercise_url,\r\n    //     tags: exercise.tags,\r\n       \r\n    //   };\r\n    // },\r\n\r\n    [constants.SEARCH_EXERCISES]: (state,action) => ({\r\n      ...state,\r\n      searchKey: action.payload.searchKey,\r\n      filteredExercises: action.payload.exercises\r\n\r\n    }),\r\n    [constants.GET_EXERCISE_VIDEOS]: (state, action) => ({\r\n        ...state,\r\n        exercises: action.payload,\r\n        filteredExercises: action.payload\r\n      }),\r\n    [constants.GET_SELECTED_VIDEOS]: (state, action) => ({\r\n        ...state,\r\n        selectedVideos: action.payload,\r\n      }),\r\n    [constants.GET_SELECTED_WORKOUTS]: (state, action) => ({\r\n        ...state,\r\n        selectedWorkouts: action.payload,\r\n      }),\r\n    [constants.GET_PATIENT_EXERCISE_VIDEOS]: (state, action) => ({\r\n        ...state,\r\n        patientExerciseVideos: action.payload,\r\n      }),\r\n    // [constants.CREATE_NEW_WORKOUT] : (state,action) => {\r\n    //     return {\r\n    //         ...state,\r\n    //         newWorkout: action.payload\r\n    //     }\r\n    // }\r\n  },\r\n  initialWorkoutState,\r\n);\r\n\r\nexport default WorkoutReducer;\r\n","import {combineReducers} from 'redux';\r\nimport PatientsReducer from './reducer-patients';\r\nimport PTReducer from './reducer-pt';\r\nimport WorkoutReducer from './reducer-workouts';\r\n\r\nconst rootReducer = combineReducers({\r\n  patients: PatientsReducer,\r\n  pt: PTReducer,\r\n  exercises: WorkoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport rootReducer from '../reducer/rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  whitelist: ['pt'],\r\n  blacklist: ['exercises', 'patients'],\r\n  stateReconciler: autoMergeLevel2,\r\n};\r\nconst initialState = {};\r\n\r\n// redux-thunk middleware is required for actions to work as async\r\nconst middleware = [thunk];\r\n\r\nconst persistentReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// Where all the data (or states) is gonna be stored\r\nexport const store = createStore(\r\n  persistentReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport axios from 'axios';\r\nimport {PersistGate} from 'redux-persist/lib/integration/react';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport {store, persistor} from './Redux/store/store';\r\n\r\naxios.defaults.baseURL = 'https://api.pthealth.club/';\r\naxios.defaults.headers = {\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Methods': 'OPTIONS, GET, POST, PUT, PATCH, DELETE',\r\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\r\n};\r\n// Provider makes the store available to every component under App\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const LOGIN_PT = 'LOGIN_PT';\r\nexport const LOGOUT_PT = 'LOGOUT_PT';\r\nexport const CREATE_PT = 'CREATE_PT';\r\nexport const GET_PT_PATIENTS = 'GET_PT_PATIENTS';\r\nexport const GET_ALL_PTS = 'GET_ALL_PTS';\r\nexport const UPDATE_PT = 'UPDATE_PT';\r\nexport const CHECK_LOGIN_ERROR = 'CHECK_LOGIN_ERROR';\r\nexport const SET_SELECTED_PATIENT = 'SET_SELECTED_PATIENT';\r\n","export const GET_EXERCISE_VIDEOS = 'GET_EXERCISE_VIDEOS';\r\nexport const GET_SELECTED_VIDEOS = 'GET_SELECTED_VIDEOS';\r\nexport const GET_SELECTED_WORKOUTS = 'GET_SELECTED_WORKOUTS';\r\nexport const CREATE_NEW_WORKOUT = 'CREATE_NEW_WORKOUT';\r\nexport const GET_PATIENT_EXERCISE_VIDEOS = 'GET_PATIENT_EXERCISE_VIDEOS';\r\nexport const SET_NEW_EXERCISE_VIDEO = 'SET_NEW_EXERCISE_VIDEO';\r\nexport const SEARCH_EXERCISES = 'SEARCH_EXERCISES'","import * as constants from '../constants/constants-pt';\r\nimport * as constantsWorkout from '../constants/constants-workouts';\r\nimport {getAuth, postAuth,putAuth} from './actions-auth';\r\n\r\nexport const createNewPT = (pt) => {\r\n  const params = new URLSearchParams();\r\n  params.append('email', pt.email);\r\n  params.append('f_name', pt.f_name);\r\n  params.append('l_name', pt.l_name);\r\n  params.append('password', pt.password);\r\n  params.append('company', pt.company);\r\n  params.append('description', pt.description);\r\n  return (dispatch) => {\r\n    postAuth('api/pt/register', params)\r\n      .then(() => {\r\n        dispatch(createPT(pt));\r\n        dispatch(getPTByEmail(pt.email));\r\n        window.alert('Create New PT: success');\r\n        window.location.href = '/';\r\n      })\r\n      .catch((err) => console.log('Error creating pt:', err));\r\n  };\r\n};\r\n// TODO SEND MESSAGE IF ERROR\r\nexport const loginPTError = (err) => ({\r\n    type: constants.CHECK_LOGIN_ERROR,\r\n    payload: err,\r\n  });\r\n\r\nexport const loginPT = (pt) => {\r\n  const params = new URLSearchParams();\r\n  params.append('email', pt.email);\r\n  params.append('password', pt.password);\r\n  console.log('params: ', params);\r\n\r\n  return (dispatch) => {\r\n    postAuth('/api/pt/login', params)\r\n      .then((res) => {\r\n        console.log('login status: ', res.data);\r\n        if (res.data == 200) {\r\n          dispatch(getPTByEmail(pt.email));\r\n        } else {\r\n          console.log(res.data.payload.message);\r\n          // dispatch(loginPTError(res.data))\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginPTError('username or password is invalid.'));\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutPT = (pt) => {\r\n  if (pt.pt_id == null) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    type: constants.LOGOUT_PT,\r\n    payload: {},\r\n  };\r\n};\r\nexport const deleteWorkout = (workout_id) => {\r\n  const params = new URLSearchParams();\r\n  params.append('workout_id', workout_id);\r\n \r\n  \r\n  return () => {\r\n    putAuth('/api/patient/workout/remove', params)\r\n      .then((res) => {\r\n        if (res.data == 200) {\r\n          console.log(res.data);\r\n          window.alert('deleted workout successfully');\r\n          window.location.href = '/';\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\nexport const assignWorkout = (pt, checked, selectedWorkout) => {\r\n  const params = new URLSearchParams();\r\n  params.append('pt', pt.pt_id);\r\n  for (let i = 0; i < checked.length; i++) {\r\n    params.append('patient', checked[i]);\r\n  }\r\n  for (let j = 0; j < selectedWorkout.length; j++) {\r\n    params.append('workout', selectedWorkout[j]);\r\n  }\r\n  return () => {\r\n    postAuth('/api/pt/assign', params)\r\n      .then((response) => {\r\n        if (response.data == 200) {\r\n          console.log('Message success');\r\n          window.alert('Assignments complete');\r\n          window.location.href = '/';\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n};\r\n\r\nexport const createWorkout = (pt, title, exercises, descriptions) => {\r\n  const params = new URLSearchParams();\r\n  params.append('pt', pt.pt_id);\r\n  params.append('title', title);\r\n\r\n  for (let i = 0; i < exercises.length; i++) {\r\n    params.append('exercise_id', exercises[i]);\r\n    params.append('description', descriptions[i]);\r\n  }\r\n  return () => {\r\n    postAuth('/api/pt/create', params)\r\n      .then((res) => {\r\n        if (res.data == 200) {\r\n          console.log(res.data);\r\n          window.alert('Workout creation: success');\r\n          window.location.href = '/';\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\nexport const createExercise = (title, exercise_url, tags) => {\r\n  const params = new URLSearchParams();\r\n  params.append('title', title);\r\n  params.append('exercise_url', exercise_url);\r\n  params.append('tags', tags);\r\n  \r\n  return () => {\r\n    postAuth('/api/exercise/register', params)\r\n      .then((res) => {\r\n        if (res.data == 200) {\r\n          console.log(res.data);\r\n          window.alert('exercise video upload: success');\r\n          window.location.href = '/';\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const createPT = (pt) => ({\r\n    type: constants.CREATE_PT,\r\n    payload: pt,\r\n  });\r\n\r\nexport const getPTByEmail = (email) => (dispatch) => {\r\n    getAuth('api/pt/email', {email})\r\n      .then((response) => {\r\n        dispatch(updatePT(response.data));\r\n        dispatch(fetchPTsPatients(response.data.pt_id));\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Error fetching PT with email ${email}:`, err),\r\n      );\r\n  };\r\n\r\nexport const updatePT = (pt) => ({\r\n    type: constants.UPDATE_PT,\r\n    payload: pt,\r\n\r\n  });\r\n\r\n  export const EditPT = (pt) => {return (dispatch) => {\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('email', pt.email);\r\n    params.append('pt_id', pt.pt_id);\r\n    params.append('password', pt.password);\r\n    params.append('f_name', pt.f_name);\r\n    params.append('l_name', pt.l_name);\r\n    params.append('description', pt.description);\r\n    params.append('company', pt.company);\r\n\r\n    putAuth('api/pt/update', params)\r\n      .then(dispatch(updatePT(pt))).then(()=> {\r\n        window.alert('UpdatePT creation: success');\r\n        window.location.href = '/';\r\n      }\r\n      )\r\n      .catch((err) =>\r\n        console.log(\r\n          `Error Editing PT information:`,\r\n          err,\r\n        ),\r\n      );\r\n  };}\r\n\r\nexport const fetchPTs = () => (dispatch) => {\r\n    getAuth('/api/pt/all')\r\n      .then((response) => dispatch(loadPTs(response.data)))\r\n      .catch((err) => console.log('Error fetching all patients:', err));\r\n  };\r\n\r\nexport const loadPTs = (pts) => ({\r\n    type: constants.GET_ALL_PTS,\r\n    payload: pts,\r\n  });\r\n\r\nexport const fetchPTsPatients = (pt) => (dispatch) => {\r\n    getAuth('/api/pt/patients', {pt_id: pt})\r\n      .then((response) => dispatch(loadPTsPatients(response.data)))\r\n      .catch((err) => console.log(`Error fetching patients for PT ${pt}`, err));\r\n  };\r\n\r\nexport const loadPTsPatients = (patients) => ({\r\n    type: constants.GET_PT_PATIENTS,\r\n    payload: patients,\r\n  });\r\n\r\nexport const fetchExerciseVideos = () => {\r\n  console.log('im here');\r\n  return (dispatch) => {\r\n    getAuth('/api/exercise/all')\r\n      .then((response) => dispatch(loadExerciseVideos(response.data)))\r\n      .catch((err) => console.log(\"FAILED\"));\r\n  };\r\n};\r\n\r\nexport const loadExerciseVideos = (exercises) => ({\r\n    type: constantsWorkout.GET_EXERCISE_VIDEOS,\r\n    payload: exercises, \r\n  });\r\nexport const selectedExercises = (selectedVideos) => ({\r\n    type: constantsWorkout.GET_SELECTED_VIDEOS,\r\n    payload: selectedVideos,\r\n  });\r\n\r\nexport const setSelectedWorkouts = (selectedWorkouts) => ({\r\n    type: constantsWorkout.GET_SELECTED_WORKOUTS,\r\n    payload: selectedWorkouts,\r\n  });\r\n\r\nexport const setSelectedPatient = (patient) => ({\r\n    type: constants.SET_SELECTED_PATIENT,\r\n    payload: patient,\r\n  });\r\n\r\n  export const filterExercises = (exercises, searchKey) => ({\r\n    type: constantsWorkout.SEARCH_EXERCISES,\r\n    payload: { searchKey,\r\n      exercises:exercises.filter((e)=> e.tags.toLowerCase().indexOf(searchKey.toLowerCase()) !== -1)\r\n  }\r\n  });\r\n"],"sourceRoot":""}