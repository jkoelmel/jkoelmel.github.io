{"version":3,"sources":["Assets/katee-lue-SxR5wZYaOtg-unsplash.jpg","Assets/houseIcon.svg","Assets/doctorIcon.svg","Assets/phoneIcon.svg","Assets/Images/Paul.jpg","Assets/Images/logo_with_text.svg","Redux/actions/actions-auth.js","Redux/actions/actions-pt.js","Redux/constants/constants-pt.js","Redux/constants/constants-workouts.js","Components/LoginForm/LoginForm.js","Components/RegisterPT/RegisterPT.js","Pages/LandingPage/index.js","Redux/actions/actions-patients.js","Components/PatientList/PatientList.js","Components/Messaging/Messaging.js","Components/PTActivitySummary/PTActivitySummary.js","Components/SearchReport/SearchReport.js","Components/PatientInfo/PatientInfo.js","Components/PatientVideos/PatientVideo.js","Components/PatientWorkout/CurrentWorkout.js","Components/PatientDashboardInfo/PatientDashboardInfo.js","Components/AssignWorkout/AssignWorkout.js","Components/SavedWorkout/SavedWorkout.js","Pages/Dashboard/Dashboard.js","Pages/LoginPage/LoginPage.js","Components/PatientActivitySummary/ActivitySummary.js","Pages/PatientProfile/Profile.js","Components/ExerciseLibrary/Library.js","Components/CreateWorkout/CreateWorkout.js","Pages/ExerciseLibrary/Exercise.js","Pages/Login.js","Routes.js","Components/UI/Theme.js","Components/Header/Header.js","App.js","serviceWorker.js","Redux/reducer/reducer-patients.js","Redux/constants/constants-patient.js","Redux/reducer/reducer-pt.js","Redux/reducer/reducer-workouts.js","Redux/reducer/rootReducer.js","Redux/store/store.js","index.js"],"names":["module","exports","getAuth","url","params","axios","get","postAuth","data","post","createNewPT","pt","URLSearchParams","append","email","f_name","l_name","password","company","dispatch","then","createPT","getPTByEmail","catch","err","console","log","loginPT","res","payload","message","type","loginPTError","response","updatePT","fetchPTsPatients","pt_id","loadPTsPatients","patients","fetchExerciseVideos","loadExerciseVideos","exercises","selectedExercises","selectedVideos","setSelectedPatient","patient","useStyles","makeStyles","theme","form","margin","height","width","display","flexDirection","alignItems","justifyContent","box","marginBottom","connect","state","errorCode","props","submit","isLoading","classes","error","React","showPassword","handleShowPassword","Typography","Paper","className","root","initialValues","onSubmit","a","setSubmitting","values","isSubmitting","handleChange","handleBlur","touched","errors","TextField","color","placeholder","name","label","value","onChange","onBlur","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","style","fontSize","aria-label","onClick","Visibility","VisibilityOff","FormControl","Button","disabled","marginTop","backgroundColor","padding","textfield","RegisterPT","useState","emailError","passwordError","Grid","container","direction","spacing","item","id","defaultValue","variant","landingroot","minHeight","backgroundImage","Image","backgroundRepeat","backgroundSize","backgroundPositionY","paddingTop","paddingLeft","overflow","buttons","palette","secondary","main","marginRight","LoginModal","Landing","handleLogin","LoginOpen","setLoginOpen","RegisterOpen","setRegisterOpen","src","DoctorIcon","HouseIcon","PhoneIcon","Modal","open","onClose","aria-labelledby","aria-describedby","Dialog","DialogContent","fetchPatientExerciseVideos","selectedPatient","loadPatientExerciseVideos","patientExerciseVideos","modal","sticky","subheader","patientList","setOpen","useEffect","List","component","ListSubheader","map","p","ListItem","key","patient_id","button","selected","event","patientId","ListItemText","primary","Divider","deleteMessages","fetchMessages","m","addResponseMessage","addUserMessage","title","subtitle","showTimeStamp","senderPlaceHolder","handleNewUserMessage","newMessage","paper","background","outline","activity","setActivity","setSubheader","handleClick","maxHeight","type_activity","duration","patientReport","setPatientReport","pr","overflowY","created_on","entry","large","boxShadow","shadows","info","setInfo","Avatar","alt","injury","thumbnail","videos","setVideos","selectedVideo","URL","setURL","handleClose","pv","v","class","uploaded","patient_video_id","video_url","split","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","controls","workout","setWorkout","selectedWorkout","setSelectedWorkout","setExercises","fetchWorkoutExercises","e","w","handleWorkoutClick","exercise_id","description","href","exercise_url","target","small","gridList","flexWrap","transform","light","titleBar","report","video","PatientExerciseVideos","setUserImage","results","picture","justify","PatientVideo","selectedWorkouts","assignWorkout","checked","i","length","j","window","alert","location","reload","setChecked","k","ListItemSecondaryAction","Checkbox","edge","tabIndex","disableRipple","currentIndex","indexOf","newChecked","push","splice","inputProps","setSelectedWorkouts","workouts","setWorkouts","workout_id","newcheckedWorkout","flexGrow","paperMessage","textAlign","paperPatients","marginLeft","paperProfile","paperSummary","Dashboard","elevation","LoginPage","ActivitySummary","fetchSummaryInfo","default","paperInfo","paperVideos","paperProgress","paperWorkout","Profile","md","filterExercises","searchTerm","ev","Fragment","ListItemIcon","PlayArrow","index","newIndex","handleVideoClick","inputprops","fontWeight","createWorkout","descriptions","setDescription","videoDescriptions","setVideoDescriptions","workoutTitle","setWorkoutTitle","multiline","required","rowsMax","desc","instructions","submitDescription","rows","paperLibrary","overflowX","paperWorkouts","paperAssign","Exercise","checkedWorkout","setCheckedWorkout","xs","setError","to","Routes","exact","path","createMuiTheme","common","blue","contrastText","contrastThreshold","tonalOffset","typography","h2","fontFamily","h5","h6","menuButton","logo","accountCircle","logoutPT","auth","anchorElLeft","setAnchorElLeft","anchorElRight","setAnchorElRight","openLeft","Boolean","openRight","AppBar","Toolbar","disableGutters","aria-controls","aria-haspopup","currentTarget","anchorEl","getContentAnchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Link","disableTouchRipple","App","ThemeProvider","CssBaseline","hostname","match","PatientsReducer","handleActions","action","newPatients","slice","find","prospective_pt","user","user_id","PTReducer","persistConfig","storage","whitelist","blacklist","persistReducer","WorkoutReducer","tags","rootReducer","combineReducers","stateReconciler","autoMergeLevel2","middleware","thunk","persistentReducer","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","defaults","baseURL","headers","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8bae027e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/katee-lue-SxR5wZYaOtg-unsplash.cd2fcb66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/houseIcon.511a6720.svg\";","module.exports = __webpack_public_path__ + \"static/media/doctorIcon.9119c845.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoneIcon.9e95dceb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Paul.fc1d3dd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_with_text.a466ade1.svg\";","import axios from \"axios\";\r\n\r\nexport const getAuth = (url, params) => {\r\n  return axios.get(url, {\r\n    params: params,\r\n  });\r\n};\r\n\r\nexport const putAuth = (url, data) => {\r\n  return axios.put(url, data);\r\n};\r\n\r\nexport const postAuth = (url, data) => {\r\n  return axios.post(url, data);\r\n};\r\n\r\nexport const deleteAuth = (url) => {\r\n  return axios.delete(url);\r\n};\r\n","import * as constants from \"../constants/constants-pt\";\r\nimport * as constantsWorkout from \"../constants/constants-workouts\";\r\nimport { getAuth, postAuth } from \"./actions-auth\";\r\n\r\nexport const createNewPT = (pt) => {\r\n  const params = new URLSearchParams();\r\n  params.append(\"email\", pt.email);\r\n  params.append(\"f_name\", pt.f_name);\r\n  params.append(\"l_name\", pt.l_name);\r\n  params.append(\"password\", pt.password);\r\n  params.append(\"company\", pt.company);\r\n\r\n  return (dispatch) => {\r\n    postAuth(\"api/pt/register\", params)\r\n      .then(() => {\r\n        dispatch(createPT(pt));\r\n        dispatch(getPTByEmail(pt.email));\r\n      })\r\n      .catch((err) => console.log(\"Error creating pt:\", err));\r\n  };\r\n};\r\n//TODO SEND MESSAGE IF ERROR\r\nexport const loginPTError = (err) => {\r\n  return {\r\n    type: constants.CHECK_LOGIN_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const loginPT = (pt) => {\r\n    const params = new URLSearchParams()\r\n    params.append(\"email\", pt.email)\r\n    params.append(\"password\", pt.password)\r\n    console.log(\"params: \", params)\r\n\r\n    return (dispatch) => {\r\n        postAuth('/api/pt/login', params).then((res) => {\r\n            console.log(\"login status: \", res.data)\r\n            if (res.data == 200) {\r\n                dispatch(getPTByEmail(pt.email))\r\n            } else {\r\n                console.log(res.data.payload.message)\r\n                // dispatch(loginPTError(res.data))\r\n            }\r\n        }).catch((err) => {\r\n            dispatch(loginPTError('username or password is invalid.'))\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logoutPT = (pt) => {\r\n    if(pt.pt_id == null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: constants.LOGOUT_PT,\r\n        payload: {},\r\n    }\r\n}\r\n\r\nexport const assignWorkout = (pt,checked,selectedWorkout) => {\r\n    const params = new URLSearchParams()\r\n    params.append(\"pt\", pt.pt_id)\r\n    for (let i = 0; i < checked.length; i++) {\r\n        params.append(\"patient\", checked[i])\r\n    }\r\n    for (let j = 0; j < selectedWorkout.length; j++) {\r\n        params.append(\"workout\", selectedWorkout[j]);\r\n    }\r\n    return() => {\r\n        postAuth('/api/pt/assign', params)\r\n        .then((response) => {\r\n            if (response.data == 200) {\r\n                console.log(\"Message success\")\r\n                window.alert(\"Assignments complete\")\r\n                window.location.reload();\r\n            }\r\n        })\r\n        .catch(console.log);\r\n    } \r\n}\r\n\r\n\r\n\r\nexport const createWorkout = (pt, title, exercises, descriptions) => {\r\n\r\n    const params = new URLSearchParams()\r\n    params.append(\"pt\", pt.pt_id)\r\n    params.append(\"title\", title)\r\n\r\n    for(let i = 0; i < exercises.length; i++) {\r\n        params.append(\"exercise_id\", exercises[i]);\r\n        params.append(\"description\", descriptions[i]);\r\n    }\r\n    return () => {\r\n        postAuth('/api/pt/create', params).then((res) => {\r\n            if (res.data == 200) {\r\n                console.log(res.data)\r\n                window.alert(\"Workout creation: success\")\r\n                window.location.reload();\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nexport const createPT = (pt) => {\r\n  return {\r\n    type: constants.CREATE_PT,\r\n    payload: pt,\r\n  };\r\n};\r\n\r\nexport const getPTByEmail = (email) => {\r\n  return (dispatch) => {\r\n    getAuth(\"api/pt/email\", { email: email })\r\n      .then((response) => {\r\n        dispatch(updatePT(response.data));\r\n        dispatch(fetchPTsPatients(response.data.pt_id));\r\n      })\r\n      .catch((err) =>\r\n        console.log(`Error fetching PT with email ${email}:`, err)\r\n      );\r\n  };\r\n};\r\n\r\nexport const updatePT = (pt) => {\r\n  return {\r\n    type: constants.UPDATE_PT,\r\n    payload: pt,\r\n  };\r\n};\r\n\r\nexport const fetchPTs = () => {\r\n  return (dispatch) => {\r\n    getAuth(\"/api/pt/all\")\r\n      .then((response) => dispatch(loadPTs(response.data)))\r\n      .catch((err) => console.log(\"Error fetching all patients:\", err));\r\n  };\r\n};\r\n\r\nexport const loadPTs = (pts) => {\r\n  return {\r\n    type: constants.GET_ALL_PTS,\r\n    payload: pts,\r\n  };\r\n};\r\n\r\nexport const fetchPTsPatients = (pt) => {\r\n  return (dispatch) => {\r\n    getAuth(\"/api/pt/patients\", { pt_id: pt })\r\n      .then((response) => dispatch(loadPTsPatients(response.data)))\r\n      .catch((err) => console.log(`Error fetching patients for PT ${pt}`, err));\r\n  };\r\n};\r\n\r\nexport const loadPTsPatients = (patients) => {\r\n  return {\r\n    type: constants.GET_PT_PATIENTS,\r\n    payload: patients,\r\n  };\r\n};\r\n\r\nexport const fetchExerciseVideos = () => {\r\n  console.log(\"im here\");\r\n  return (dispatch) => {\r\n    getAuth(\"/api/exercise/all\")\r\n      .then((response) => dispatch(loadExerciseVideos(response.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadExerciseVideos = (exercises) => {\r\n  return {\r\n    type: constantsWorkout.GET_EXERCISE_VIDEOS,\r\n    payload: exercises,\r\n  };\r\n};\r\nexport const selectedExercises = (selectedVideos) => {\r\n  return {\r\n    type: constantsWorkout.GET_SELECTED_VIDEOS,\r\n    payload: selectedVideos,\r\n  };\r\n};\r\n\r\nexport const setSelectedWorkouts = (selectedWorkouts) => {\r\n  return {\r\n    type: constantsWorkout.GET_SELECTED_WORKOUTS,\r\n    payload: selectedWorkouts,\r\n  };\r\n};\r\n\r\nexport const setSelectedPatient = (patient) => {\r\n  return {\r\n    type: constants.SET_SELECTED_PATIENT,\r\n    payload: patient,\r\n  };\r\n};\r\n","export const LOGIN_PT = \"LOGIN_PT\";\r\nexport const LOGOUT_PT = \"LOGOUT_PT\";\r\nexport const CREATE_PT = \"CREATE_PT\";\r\nexport const GET_PT_PATIENTS = \"GET_PT_PATIENTS\";\r\nexport const GET_ALL_PTS = \"GET_ALL_PTS\";\r\nexport const UPDATE_PT = \"UPDATE_PT\";\r\nexport const CHECK_LOGIN_ERROR = \"CHECK_LOGIN_ERROR\";\r\nexport const SET_SELECTED_PATIENT = \"SET_SELECTED_PATIENT\";\r\n","export const GET_EXERCISE_VIDEOS = \"GET_EXERCISE_VIDEOS\";\r\nexport const GET_SELECTED_VIDEOS = \"GET_SELECTED_VIDEOS\";\r\nexport const GET_SELECTED_WORKOUTS = \"GET_SELECTED_WORKOUTS\";\r\nexport const CREATE_NEW_WORKOUT = \"CREATE_NEW_WORKOUT\";\r\nexport const GET_PATIENT_EXERCISE_VIDEOS = \"GET_PATIENT_EXERCISE_VIDEOS\"\r\n","import * as React from 'react'\r\nimport { Formik, Form } from 'formik'\r\nimport { connect } from 'react-redux';\r\nimport {loginPT} from '../../Redux/actions/actions-pt';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormControl,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n      margin: '10px auto',\r\n      height: '300px',\r\n      width: '400px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    box: {\r\n      width: '200px',\r\n      marginBottom: '1.5rem',\r\n    },\r\n  }))\r\n  //TODO handle error text and redux.... might have to swtich it to a regular func instead of formik.\r\n\r\nconst LoginForm = (props,{ submit, isLoading, error }) => {\r\n  const classes = useStyles()\r\n\r\n  // ~ Logic\r\n  const [showPassword, handleShowPassword] = React.useState(false);\r\n  if (isLoading) {\r\n    return <Typography>Loading</Typography>;\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n    <React.Fragment>\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={async (data, { setSubmitting }) => {\r\n          console.log(data)\r\n          setSubmitting(true)\r\n          // make async call\r\n          await props.loginPT(data)\r\n          setSubmitting(false)\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          touched,\r\n          errors,\r\n        }) => (\r\n          <Form className={classes.form}>\r\n            <TextField\r\n              color=\"secondary\"\r\n              className={classes.box}\r\n              placeholder='email'\r\n              name='email'\r\n              label='email'\r\n              error={props.errorCode ? true : false}\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              // helperText={\r\n              //   // props.errorCode\r\n              // }\r\n            />\r\n            <TextField\r\n              color=\"secondary\"\r\n              placeholder='password'\r\n              className={classes.box}\r\n              label='password'\r\n              name='password'\r\n              error={props.errorCode ? true : false}\r\n              helperText={\r\n                props.errorCode\r\n              }\r\n              type={showPassword ? 'text' : 'password'}\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                    style={{ fontSize: \"200px\" }}\r\n                      aria-label='toggle password visibility'\r\n                      onClick={() => {\r\n                        handleShowPassword(!showPassword)\r\n                      }}\r\n                    >\r\n                      {showPassword ? <Visibility  /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            {/* {error && <p style={{ color: 'red' }}>{error}</p>} */}\r\n            {/* {props.errorCode && <p style={{ color: 'red' }}>{props.errorCode}</p>} */}\r\n            <FormControl>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                // variant='contained'\r\n                color='secondary'\r\n                type='submit'\r\n                style={{ marginTop: '1.5rem' }}\r\n              >\r\n                Login\r\n              </Button>\r\n            </FormControl>\r\n            {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </React.Fragment>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default connect((state) => ({\r\n      // The state of the pt, as defined by reducer-pt\r\n      pt: state.pt,\r\n      // The state of the pt's patients, defined by reducer-pt\r\n      patients: state.pt.patients,\r\n\r\n      errorCode: state.pt.errorCode\r\n  }), (dispatch) => ({\r\n      // The action from actions-pt which will effect reducer-pt\r\n      loginPT: (data) => dispatch(loginPT(data))\r\n  })\r\n)(LoginForm);\r\n","import { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: 400,\r\n    width: 500,\r\n    padding: 10,\r\n  },\r\n  textfield: {\r\n    // borderColor: theme.palette.secondary.main\r\n  },\r\n}));\r\n\r\nconst RegisterPT = () => {\r\n  const classes = useStyles();\r\n  const [emailError, setEmailError] = React.useState(false);\r\n  const [passwordError, setPasswordError] = React.useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.root}>\r\n        <Grid container direction=\"column\" spacing={3} alignItems=\"center\">\r\n          <Grid item>\r\n            <TextField\r\n              //  onChange={(e) => {}\r\n              className={classes.textfield}\r\n              error={emailError}\r\n              id=\"outlined-error\"\r\n              label=\"Email\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              error={passwordError}\r\n              id=\"outlined-error\"\r\n              label=\"Password\"\r\n              placeholder=\"password\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              type=\"password\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              error={passwordError}\r\n              id=\"outlined-error\"\r\n              label=\"First Name\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              error={passwordError}\r\n              id=\"outlined-error\"\r\n              label=\"Last Name\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              error={passwordError}\r\n              id=\"outlined-error\"\r\n              label=\"Company\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPT;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport axios from \"axios\";\r\nimport Image from \"../../Assets/katee-lue-SxR5wZYaOtg-unsplash.jpg\";\r\nimport HouseIcon from \"../../Assets/houseIcon.svg\";\r\nimport DoctorIcon from \"../../Assets/doctorIcon.svg\";\r\nimport PhoneIcon from \"../../Assets/phoneIcon.svg\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport LoginForm from \"../../Components/LoginForm/LoginForm\";\r\nimport RegisterPT from \"../../Components/RegisterPT/RegisterPT\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  landingroot: {\r\n    minHeight: \"90vh\",\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundSize: \"cover\",\r\n    backgroundPositionY: \"-35vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    paddingTop: \"7vh\",\r\n    paddingLeft: 100,\r\n    overflow: \"hidden\",\r\n  },\r\n  buttons: {\r\n    color: theme.palette.secondary.main,\r\n    marginTop: 10,\r\n    marginRight: 45,\r\n  },\r\n  LoginModal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst Landing = ({handleLogin,error}) => {\r\n    const classes = useStyles();\r\n    const [LoginOpen, setLoginOpen] = React.useState(false);\r\n    const [RegisterOpen, setRegisterOpen] = React.useState(false);\r\n\r\n    const handleLoginOpen = () => {\r\n        setLoginOpen(true);\r\n    };\r\n\r\n  const handleLoginClose = () => {\r\n    setLoginOpen(false);\r\n  };\r\n\r\n  const handleRegisterOpen = () => {\r\n    setRegisterOpen(true);\r\n  };\r\n\r\n  const handleRegisterClose = () => {\r\n    setRegisterOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.landingroot}>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\r\n        <Grid item>\r\n          <Grid container direction=\"row\">\r\n            <Grid item>\r\n              <Typography variant=\"h2\" alignItems=\"center\">\r\n                Living Better One Day At a Time...\r\n              </Typography>\r\n            </Grid>\r\n            <Grid container></Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Grid container direction=\"row\" spacing={4}>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={DoctorIcon} />\r\n                <Typography variant=\"h5\">Get matched with a patient</Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={HouseIcon} />\r\n                <Typography variant=\"h5\">\r\n                  Provide care on your own schedule\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item>\r\n              <Grid container direction=\"column\" alignItems=\"center\">\r\n                <img src={PhoneIcon} />\r\n                <Typography variant=\"h5\">\r\n                  Heal with professional feedback\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.buttons}\r\n              onClick={handleRegisterOpen}\r\n            >\r\n              Register Now\r\n            </Button>\r\n          </Grid>\r\n          <Modal\r\n            open={RegisterOpen}\r\n            onClose={handleRegisterClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            className={classes.LoginModal}\r\n          >\r\n            <RegisterPT />\r\n          </Modal>\r\n          <Grid item>\r\n            <Button className={classes.buttons} onClick={handleLoginOpen}>\r\n              Already registered? Log in\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog\r\n        open={LoginOpen}\r\n        onClose={handleLoginClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        className={classes.LoginModal}\r\n      >\r\n        {/* <DialogTitle color=\"secondary\" id=\"form-dialog-title\">Log In</DialogTitle> */}\r\n        <DialogContent>\r\n          <LoginForm />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n// <div className = 'root'>\r\n//     <Grid container className ='grid-root' spacing={5}>\r\n//         <Grid item xs={3} >\r\n//             <Paper >\r\n//                 <PatientList patients = {patients} setPatients = {setPatients}\r\n//                 selectedPatient = {selectedPatient} setSelectedPatient= {setSelectedPatient}/>\r\n//             </Paper>\r\n//         </Grid>\r\n//         <Grid item xs={3} >\r\n//             <Paper >\r\n//                 <SearchPlan patients = {patients} setPatients = {setPatients}\r\n//                  selectedPatient = {selectedPatient} setSelectedPatient= {setSelectedPatient}/>\r\n//             </Paper>\r\n//         </Grid>\r\n//     <Grid item xs={3} >\r\n//         <Paper >\r\n//             <SearchReport selectedPatient = {selectedPatient} setSelectedPatient= {setSelectedPatient}/>\r\n//         </Paper>\r\n//     </Grid>\r\n//     <Grid item xs={3} >\r\n//         <Paper >\r\n//             <SearchActivities selectedPatient = {selectedPatient} setSelectedPatient= {setSelectedPatient}/>\r\n//         </Paper>\r\n//     </Grid>\r\n\r\n//     </Grid>\r\n// </div>\r\n","import * as constants from \"../constants/constants-patient\";\r\nimport * as constantsWorkout from \"../constants/constants-workouts\"\r\nimport { getAuth, postAuth, putAuth } from \"./actions-auth\";\r\n\r\nexport const createNewPatient = (patient) => {\r\n  const data = {\r\n    email: patient.email,\r\n    f_name: patient.f_name,\r\n    l_name: patient.l_name,\r\n    company: patient.compact,\r\n  };\r\n  return (dispatch) => {\r\n    postAuth(\"/api/patient/register\", data)\r\n      .then(dispatch(createPatient(patient)))\r\n      .catch((err) => console.log(\"Error creating patient:\", err));\r\n  };\r\n};\r\n\r\nexport const createPatient = (patient) => {\r\n  return {\r\n    type: constants.CREATE_PATIENT,\r\n    payload: patient,\r\n  };\r\n};\r\n\r\nexport const fetchPatients = () => {\r\n  return (dispatch) => {\r\n    getAuth(\"/api/patient/all\")\r\n      .then((response) => dispatch(loadPatients(response.data.patients)))\r\n      .catch((err) => console.log(\"Error fetching all patients:\", err));\r\n  };\r\n};\r\n\r\nexport const loadPatients = (patients) => {\r\n  return {\r\n    type: constants.GET_PATIENTS,\r\n    payload: patients,\r\n  };\r\n};\r\n\r\nexport const updatePatientPT = (patient, pt, prospective_pt) => {\r\n  const data = { patient_id: patient, pt: pt, prospective_pt: prospective_pt };\r\n  return (dispatch) => {\r\n    putAuth(\"api/patient/update-pt\", data)\r\n      .then(dispatch(submitUpdatePatientPT(patient, pt, prospective_pt)))\r\n      .catch((err) =>\r\n        console.log(\r\n          `Error updating patient PT's to ${pt} and/or ${prospective_pt}:`,\r\n          err\r\n        )\r\n      );\r\n  };\r\n};\r\n\r\nexport const submitUpdatePatientPT = (patient, pt, prospective_pt) => {\r\n  return {\r\n    type: constants.UPDATE_PATIENT_PTS,\r\n    payload: {\r\n      patient: patient,\r\n      pt: pt,\r\n      prospective_pt: prospective_pt,\r\n    },\r\n  };\r\n};\r\n\r\nexport const fetchPatientExerciseVideos = (selectedPatient) => {\r\n  const params = new URLSearchParams()\r\n  params.append(\"patient\",selectedPatient)\r\n  console.log('made it to fetch patients videos!!')\r\n  return (dispatch) => {\r\n    getAuth(\"/api/patient/video/id\",params)\r\n      .then((response) => dispatch(loadPatientExerciseVideos(response.data)))\r\n      .catch((err) => console.log(err));\r\n  };\r\n};\r\n\r\nexport const loadPatientExerciseVideos = (patientExerciseVideos) => {\r\n  return {\r\n    type: constantsWorkout.GET_PATIENT_EXERCISE_VIDEOS,\r\n    payload: patientExerciseVideos,\r\n  };\r\n};","import React, {useEffect, useState} from 'react'\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {connect} from 'react-redux';\r\nimport {createNewPT, fetchPTsPatients, setSelectedPatient,updatePT} from '../../Redux/actions/actions-pt';\r\nimport {fetchPatientExerciseVideos} from '../../Redux/actions/actions-patients'\r\nimport './PatientList.css'\r\nimport {ListItem, ListItemText} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    sticky: {\r\n        backgroundColor: \"white\",\r\n        fontSize: 18\r\n    },\r\n    subheader: {\r\n        fontSize: 18\r\n    },\r\n    patientList: {\r\n        backgroundColor: \"white\",\r\n    }\r\n}));\r\n\r\nconst PatientList = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        //will load patients when the page loads\r\n        props.updatePT(props.pt)\r\n    }, []);\r\n\r\n    const handlePatientClick = (e, patientId) => {\r\n          props.fetchPatientExerciseVideos(patientId)\r\n        props.patients.map((p) => {\r\n            if (p.patient_id === patientId) {\r\n                props.setSelectedPatient(p)\r\n                \r\n            }\r\n        })\r\n        setOpen(true)\r\n        //TODO return patients info by its ID. \r\n    }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\" aria-label=\"patient-list\"\r\n                  subheader={\r\n                      <ListSubheader variant= \"h6\" color =\"inherit\" className={classes.sticky}>\r\n                          Patient List\r\n                      </ListSubheader>\r\n                  }>\r\n                {props.patients.map((p) => (\r\n                    <ListItem\r\n                        key={p.patient_id}\r\n                        button\r\n                        selected={props.selectedPatient === p.patient_id}\r\n                        onClick={(event) => handlePatientClick(event, p.patient_id)}>\r\n                        <ListItemText primary={`${p.f_name} ${p.l_name}`}/>\r\n                    </ListItem>\r\n                ))}\r\n\r\n            </List>\r\n            <Divider/>\r\n            <List component=\"nav\" aria-label=\"patient-list\"\r\n                  className={classes.patientList}\r\n                  subheader={\r\n                      <ListSubheader component=\"div\" color=\"inherit\" className={classes.sticky}\r\n                                     id=\"potential-patient-list\">\r\n                          Potential Patient List\r\n                      </ListSubheader>\r\n                  }>\r\n\r\n                <ListItem\r\n                    button>\r\n                    <ListItemText secondary='no available potential patients'/>\r\n                </ListItem>\r\n            </List>\r\n            {/* <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div  style={{ width: \"auto\", backgroundColor: \"white\" }}>\r\n                        <List>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Full Name`}\r\n                                              secondary={`${props.selectedPatient.f_name} ${props.selectedPatient.l_name}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Email`} secondary={`${props.selectedPatient.email}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary={`Company Name`} secondary={`${props.selectedPatient.company}`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                        </List>\r\n                    </div>\r\n                </Fade>\r\n            </Modal> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default connect((state) => ({\r\n        // The state of the pt, as defined by reducer-pt\r\n        pt: state.pt,\r\n        // The state of the pt's patients, defined by reducer-pt\r\n        patients: state.pt.patients,\r\n        selectedPatient: state.pt.selectedPatient\r\n    }), (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n        createNewPT: (pt) => dispatch(createNewPT(pt)),\r\n        setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n        updatePT: (pt) => dispatch(updatePT(pt)),\r\n        fetchPatientExerciseVideos: (selectedPatient) => dispatch(fetchPatientExerciseVideos(selectedPatient))\r\n    })\r\n)(PatientList);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  addResponseMessage,\r\n  addUserMessage,\r\n  deleteMessages,\r\n  Widget,\r\n} from \"react-chat-widget\";\r\nimport \"react-chat-widget/lib/styles.css\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { createNewPT, fetchPTsPatients } from \"../../Redux/actions/actions-pt\";\r\nimport './Messaging.css'\r\n\r\nconst Messaging = (props) => {\r\n  useEffect(() => {\r\n    props.fetchPTsPatients(props.pt.pt_id);\r\n    deleteMessages(1000);\r\n    fetchMessages();\r\n  }, [props.pt.selectedPatient.patient_id]);\r\n\r\n  const fetchMessages = () => {\r\n    axios\r\n      .get(\"api/pt/message/id\", {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n          patient: props.pt.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        response.data.map((m) => {\r\n          if (m.pt < 100) {\r\n            addResponseMessage(m.message);\r\n          } else {\r\n            addUserMessage(m.message);\r\n          }\r\n        });\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleNewUserMessage = (newMessage) => {\r\n    console.log(`New message request ${newMessage}`);\r\n\r\n    const params = new URLSearchParams();\r\n    params.append(\"message\", newMessage);\r\n    params.append(\"pt\", props.pt.pt_id);\r\n    params.append(\"patient\", props.selectedPatient.patient_id);\r\n\r\n    axios\r\n      .post(\"api/pt/message/register\", params)\r\n      .then((response) => {\r\n        if (response.data == 200) {\r\n          console.log(\"Message success\");\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Widget\r\n        title={ props.selectedPatient.patient_id ? \"Messages From\" : \"Message Center\"}\r\n        subtitle={props.selectedPatient.patient_id ?`${props.selectedPatient.f_name} ${props.selectedPatient.l_name}` : \"Choose a patient\"}\r\n        showTimeStamp={false}\r\n        senderPlaceHolder={\"Enter message...\"}\r\n        handleNewUserMessage={handleNewUserMessage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n    patients: state.pt.patients,\r\n    selectedPatient: state.pt.selectedPatient,\r\n  }),\r\n  (dispatch) => ({\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n  })\r\n)(Messaging);\r\n","//Test component to see if a summation of all activity\r\n//is worthwhile to the application\r\n\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchPTsPatients, setSelectedPatient} from \"../../Redux/actions/actions-pt\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst ActivitySummary = (props) => {\r\n  const classes = useStyles();\r\n  const [activity, setActivity] = React.useState([]);\r\n  const [subheader, setSubheader] = React.useState('');\r\n\r\n  const fetchSummaryInfo = () => {\r\n    axios\r\n      .get(\"api/pt/summary\", {\r\n        params: {\r\n          pt: props.pt.pt_id\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setActivity(\r\n          response.data.map((a) => {\r\n            console.log(response.data);\r\n            return a;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchPatPTSummary = () => {\r\n    axios.get('api/pt/patient-activity', {\r\n      params: {\r\n        pt: props.pt.pt_id,\r\n        patient: props.pt.selectedPatient.patient_id\r\n      }\r\n    }).then((response) => {\r\n      setActivity(\r\n          response.data.map((a) => {\r\n            return a\r\n          })\r\n      )\r\n    })\r\n  }\r\n  const showButton = () => {\r\n    if(props.pt.selectedPatient.patient_id == null) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"inherit\"\r\n            onClick={handleClick}>\r\n          Show Summary Info\r\n        </Button>\r\n    )\r\n  }\r\n\r\n  const handleClick = () => {\r\n    props.setSelectedPatient({})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(props.pt.selectedPatient.patient_id == null){\r\n      fetchSummaryInfo()\r\n      setSubheader(\"For All Patients\")\r\n    } else {\r\n      fetchPatPTSummary(props.pt.selectedPatient.patient_id);\r\n      setSubheader(\"For \" + props.pt.selectedPatient.f_name +\r\n          \" \" + props.pt.selectedPatient.l_name)\r\n    }\r\n  }, [props.pt.selectedPatient]);\r\n\r\n  return (\r\n    <List\r\n      className={classes.paper}\r\n      aria-label=\"activity-list\"\r\n      style={{ maxHeight: 300 }}\r\n    >\r\n      <ListItem color=\"inherit\" className={classes.modal}>\r\n        <b>{subheader}</b>\r\n      </ListItem>\r\n      {/*<ListItem className={classes.modal}>*/}\r\n      {/*  <u>*/}\r\n      {/*    <b>Activity : Minutes</b>*/}\r\n      {/*  </u>*/}\r\n      {/*</ListItem>*/}\r\n      {activity.map((a) => (\r\n        <div>\r\n          <ListItem>{a.type_activity + \" : \" + a.duration + \" minutes\"}</ListItem>\r\n        </div>\r\n      ))}\r\n      {showButton()}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      // The state of the pt, as defined by reducer-pt\r\n      pt: state.pt,\r\n      // The state of the pt's patients, defined by reducer-pt\r\n      patients: state.pt.patients\r\n    }),\r\n    (dispatch) => ({\r\n      // The action from actions-pt which will effect reducer-pt\r\n      fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n      setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    })\r\n)(ActivitySummary);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport axios from \"axios\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { ListSubheader } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSelectedPatient} from \"../../Redux/actions/actions-pt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst SearchReport = (props) => {\r\n  const classes = useStyles();\r\n  const [patientReport, setPatientReport] = React.useState([]);\r\n\r\n  const fetchPatientsReport = () => {\r\n    axios\r\n      .get(\"/api/patient/entry/all\", {\r\n        params: {\r\n          patient_id: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data.patient);\r\n\r\n        setPatientReport(\r\n          response.data.map((pr) => {\r\n            return pr;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //will load patients Report when the page loads\r\n    if (props.selectedPatient.patient_id != \"\")\r\n      fetchPatientsReport();\r\n  }, [props.selectedPatient.patient_id]);\r\n\r\n  return (\r\n    <div className={classes.sticky}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        style={{maxHeight: 580 , overflowY: \"scroll\" }}\r\n      >\r\n        {patientReport.map((pr) => (\r\n          <ListItem>{pr.created_on + \" \" + pr.entry}</ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect((state) => ({\r\n      // The state of the pt, as defined by reducer-pt\r\n      // The state of the pt's patients, defined by reducer-pt\r\n      patients: state.pt.patients,\r\n      selectedPatient: state.pt.selectedPatient,\r\n\r\n    }), (dispatch) => ({\r\n      // The action from actions-pt which will effect reducer-pt\r\n      setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    })\r\n)(SearchReport);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchPTsPatients} from \"../../Redux/actions/actions-pt\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Image from \"../../Assets/Images/Paul.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  large: {\r\n    width: 100,\r\n    height: 100,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst PatientInfo = (props) => {\r\n  const classes = useStyles();\r\n  const [info, setInfo] = React.useState([]);\r\n  const [userImage, setUserImage] = React.useState(\"\");\r\n\r\n  const fetchPatientInfo = () => {\r\n    axios\r\n      .get(\"api/patient/id\", {\r\n        params: {\r\n          patient_id: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        console.log(response.data.patient);\r\n\r\n        setInfo(response.data);\r\n      })\r\n      .catch(console.log);\r\n  };\r\n  console.log(info);\r\n\r\n  const fetchPatientImg = () => {\r\n    // //TODO hard-coded need to add support to various patients in DB\r\n    // axios.get(\"https://randomuser.me/api/?gender=male\").then((response) => {\r\n    //   console.log(response.data);\r\n    //   setUserImage(response.data.results[0].picture.large);\r\n    // });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //will load patients activities when the page loads\r\n\r\n    if (props.selectedPatient != \"\")\r\n          fetchPatientInfo();\r\n      fetchPatientImg();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n        <div>\r\n          <List\r\n            component=\"nav\"\r\n            aria-label=\"patient-list\"\r\n            style={{ maxHeight:300 }}\r\n          >\r\n            <div>\r\n              <ListItem>\r\n                <Avatar alt=\"user-profile images\" src={Image} className={classes.large} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={`Patient`}\r\n                  secondary={info.f_name + \" \" + info.l_name}\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary={`Email`} secondary={info.email} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary={`Company`} secondary={info.company} />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary={`Injured Area`}\r\n                  secondary={info.injury}\r\n                />\r\n              </ListItem>\r\n              <Divider />\r\n            </div>\r\n          </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default  connect(\r\n    (state) => ({\r\n      pt: state.pt,\r\n      patients: state.pt.patients,\r\n      selectedPatient: state.pt.selectedPatient,\r\n    }),\r\n    (dispatch) => ({\r\n\r\n    })\r\n)(PatientInfo);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchPTsPatients, setSelectedPatient} from \"../../Redux/actions/actions-pt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  thumbnail: {\r\n    maxHeight: \"200px\",\r\n  },\r\n}));\r\n\r\nconst PatientVideos = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [videos, setVideos] = React.useState([]);\r\n  const [selectedVideo, setSelectedVideo] = React.useState([]);\r\n  const [URL, setURL] = React.useState(\"\");\r\n  const [feedback, setFeedback] = React.useState(\"\");\r\n\r\n  const handleVideoClick = (e, video_url) => {\r\n    setURL(video_url);\r\n    setOpen(true);\r\n  };\r\n\r\n  const fetchPatientVideos = () => {\r\n    axios\r\n      .get(\"api/patient/video/id\", {\r\n        params: {\r\n          patient: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setVideos(\r\n          response.data.map((pv) => {\r\n            console.log(response.data);\r\n            return pv;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChange = () => {\r\n    setFeedback(feedback);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    alert(\"Feedback was submitted: \" + feedback);\r\n    handleClose();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //will load patients video when the page loads\r\n    if (props.selectedPatient != \"\") fetchPatientVideos();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        component=\"nav\"\r\n        aria-label=\"patient-list\"\r\n        style={{ maxHeight: 600, overflowY: \"scroll\" }}\r\n      >\r\n        {videos.map((v) => (\r\n          <div>\r\n            <ListItem class=\"date\">{v.uploaded}</ListItem>\r\n            <ListItem\r\n              key={v.patient_video_id}\r\n              button\r\n              selected={selectedVideo == v.patient_video_id}\r\n              onClick={(event) => handleVideoClick(event, v.video_url)}\r\n            >\r\n              <img className={classes.thumbnail}\r\n                src={\r\n                  \"https://img.youtube.com/vi/\" +\r\n                  v.video_url.split(\"=\")[1] +\r\n                  \"/0.jpg\"\r\n                }\r\n              />\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <ReactPlayer controls={true} url={URL} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n      // The state of the pt, as defined by reducer-pt\r\n      selectedPatient: state.pt.selectedPatient,\r\n    }),\r\n    (dispatch) => ({\r\n      // The action from actions-pt which will effect reducer-pt\r\n      setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    })\r\n)(PatientVideos);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport {connect} from \"react-redux\";\r\nimport {setSelectedPatient} from \"../../Redux/actions/actions-pt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"white\",\r\n    //   border: '2px solid #000',a\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst CurrentWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [workout, setWorkout] = React.useState([]);\r\n  const [selectedWorkout, setSelectedWorkout] = React.useState(\"\");\r\n  const [exercises, setExercises] = React.useState([]);\r\n\r\n  const fetchWorkoutInfo = () => {\r\n    axios\r\n      .get(\"api/patient/workout/id\", {\r\n        params: {\r\n          patient: props.selectedPatient.patient_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setWorkout(\r\n          response.data.map((w) => {\r\n            console.log(response.data);\r\n            setSelectedWorkout(response.data[0].workout);\r\n            return w;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchWorkoutExercises = () => {\r\n    axios\r\n      .get(\"api/pt/exercises\", {\r\n        params: {\r\n          workout: selectedWorkout,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setExercises(\r\n          response.data.map((e) => {\r\n            console.log(response.data);\r\n            return e;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleWorkoutClick = (e, selectedWorkout) => {\r\n    //double check proper setting\r\n    console.log(\"Selected Workout: \" + selectedWorkout);\r\n    setSelectedWorkout(selectedWorkout);\r\n    fetchWorkoutExercises();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //will load workout info when the page loads\r\n    if (props.selectedPatient != \"\") fetchWorkoutInfo();\r\n  }, [props.selectedPatient]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List\r\n        className={classes.paper}\r\n        aria-label=\"workout-list\"\r\n        style={{ maxHeight: 300 }}\r\n      >\r\n        <ListItem className={classes.modal}>\r\n          <u>\r\n            <b>Current Assignment</b>\r\n          </u>\r\n        </ListItem>\r\n        {workout.map((w) => (\r\n          <div>\r\n            <ListItem\r\n              key={w.workout}\r\n              button\r\n              selected={selectedWorkout == w.workout}\r\n              onClick={(event) => handleWorkoutClick(event, w.workout)}\r\n            >\r\n              {w.title}\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <List\r\n            style={{\r\n              maxHeight: 400,\r\n              overflowY: \"scroll\",\r\n              backgroundColor: \"white\",\r\n            }}\r\n            subheader={\r\n              <ListSubheader\r\n                component=\"div\"\r\n                color=\"inherit\"\r\n                classes={\"patient-list\"}\r\n              >\r\n                Workout Details\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {exercises.map((e) => (\r\n              <div>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Exercise Title`}\r\n                    secondary={e.title}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Description`}\r\n                    secondary={e.description}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <a href={e.exercise_url} target=\"_blank\">\r\n                    <img\r\n                      src={\r\n                        \"https://img.youtube.com/vi/\" +\r\n                        e.exercise_url.split(\"=\")[1] +\r\n                        \"/0.jpg\"\r\n                      }\r\n                    />\r\n                  </a>\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        // The state of the pt, as defined by reducer-pt\r\n        selectedPatient: state.pt.selectedPatient,\r\n    }),\r\n    (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n    })\r\n)(CurrentWorkout);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {createNewPT, fetchPTsPatients, setSelectedPatient, updatePT} from '../../Redux/actions/actions-pt';\r\nimport {fetchPatientExerciseVideos} from '../../Redux/actions/actions-patients'\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {ListItem, ListItemText, Typography} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from \"axios\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport SearchReport from \"../SearchReport/SearchReport\";\r\nimport PatientInfo from \"../PatientInfo/PatientInfo\";\r\nimport PatientVideos from \"../PatientVideos/PatientVideo\";\r\nimport PatientVideo from \"../PatientVideos/PatientVideo\";\r\nimport CurrentWorkout from \"../PatientWorkout/CurrentWorkout\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    small: {\r\n        width: theme.spacing(3),\r\n        height: theme.spacing(3),\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    info: {\r\n        width: 200,\r\n        height: 410,\r\n    },\r\n    workout: {\r\n        marginTop: 10,\r\n        width: 200,\r\n        height: 100,\r\n    },\r\n    report: {\r\n        width: 350,\r\n        height: 600,\r\n    },\r\n    video: {\r\n        width: 300,\r\n        height: 600,\r\n    },\r\n}));\r\n\r\nconst PatientDashboardInfo = (props) => {\r\n    const classes = useStyles();\r\n    const [userImage, setUserImage] = React.useState(\"\");\r\n    const [videos, setVideos] = React.useState([]);\r\n\r\n    const fetchPatientImg = () => {\r\n        //TODO hard-coded need to add support to various patients in DB\r\n        axios.get(\"https://randomuser.me/api/?gender=male\").then((response) => {\r\n            setUserImage(response.data.results[0].picture.large);\r\n        });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        //will load patients activities when the page loads\r\n        fetchPatientImg();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n\r\n            {props.selectedPatient.patient_id ? <Grid container\r\n                                                      spacing={3}\r\n                                                      direction=\"row\"\r\n                                                      justify=\"space-between\"\r\n                                                      alignItems=\"flex-start\">\r\n\r\n                <Grid item>\r\n                    <Typography variant='h6'>Info</Typography>\r\n                    <Paper className={classes.info}>\r\n                        <PatientInfo/>\r\n                    </Paper>\r\n                    <Paper className={classes.workout}>\r\n                        <CurrentWorkout/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant='h6'>Progress Log</Typography>\r\n                    <Paper className={classes.report}>\r\n                        <SearchReport/>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant='h6'>Patient Videos</Typography>\r\n                    <Paper className={classes.video}>\r\n                        <PatientVideo/>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n\r\n            </Grid> : <p></p>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect((state) => ({\r\n        // The state of the pt, as defined by reducer-pt\r\n        pt: state.pt,\r\n        // The state of the pt's patients, defined by reducer-pt\r\n        patients: state.pt.patients,\r\n        selectedPatient: state.pt.selectedPatient,\r\n        PatientExerciseVideos: state.exercises.patientExerciseVideos\r\n\r\n    }), (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n        createNewPT: (pt) => dispatch(createNewPT(pt)),\r\n        setSelectedPatient: (patient) => dispatch(setSelectedPatient(patient)),\r\n        updatePT: (pt) => dispatch(updatePT(pt)),\r\n        fetchPatientExerciseVideos: (selectedPatient) => dispatch(fetchPatientExerciseVideos(selectedPatient))\r\n    })\r\n)(PatientDashboardInfo);\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport {assignWorkout, fetchPTsPatients} from \"../../Redux/actions/actions-pt\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst AssignWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    props.fetchPTsPatients(props.pt.pt_id);\r\n  }, []);\r\n\r\n  const handleCheckToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n  console.log(checked);\r\n  \r\n  const assignToPatients = () => {\r\n        props.assignWorkout(props.pt,checked,props.selectedWorkouts)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\" aria-label=\"workout-list\"\r\n                  style={{maxHeight: 250, overflowY: \"scroll\"}}\r\n                  subheader={\r\n                      <ListSubheader component=\"div\" color=\"inherit\" className={classes.sticky}>\r\n                          Assign To...\r\n                      </ListSubheader>\r\n                  }>\r\n                {props.patients.map((p,k) => (\r\n                    <div key={k}>\r\n                    <ListItem>\r\n                        <ListItemText primary={`${p.f_name} ${p.l_name}`} />\r\n                        <ListItemSecondaryAction>\r\n                            <Checkbox\r\n                                edge=\"end\"\r\n                                tabIndex={-1}\r\n                                disableRipple\r\n                                onChange={handleCheckToggle(p.patient_id)}\r\n                                checked={checked.indexOf(p.patient_id) !== -1}\r\n                                inputProps={{\"aria-labelledby\": `checkbox-list-label-${p.patient_id}`}}\r\n                            />\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    </div>\r\n                ))}\r\n            </List>\r\n\r\n            <Button variant=\"contained\"\r\n                    color=\"inherit\"\r\n                    onClick={assignToPatients}>ASSIGN\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\nexport default connect((state) => ({\r\n        // The state of the pt, as defined by reducer-pt\r\n        pt: state.pt,\r\n        // The state of the pt's patients, defined by reducer-pt\r\n        patients: state.pt.patients,\r\n        selectedWorkouts: state.exercises.selectedWorkouts\r\n    }), (dispatch) => ({\r\n        // The action from actions-pt which will effect reducer-pt\r\n        fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n        assignWorkout: (pt, checked, selectedWorkouts) => dispatch(assignWorkout(pt,checked,selectedWorkouts))\r\n\r\n    })\r\n)(AssignWorkout)\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchPTsPatients,\r\n  setSelectedWorkouts,\r\n} from \"../../Redux/actions/actions-pt\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst SavedWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [workouts, setWorkouts] = React.useState([]);\r\n  const [exercises, setExercises] = React.useState([]);\r\n\r\n  const fetchPTWorkouts = () => {\r\n    axios\r\n      .get(\"api/pt/workouts\", {\r\n        params: {\r\n          pt: props.pt.pt_id,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setWorkouts(\r\n          response.data.map((w) => {\r\n            console.log(response.data);\r\n            return w;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const fetchWorkoutExercises = (selectedWorkout) => {\r\n    axios\r\n      .get(\"api/pt/exercises\", {\r\n        params: {\r\n          workout: selectedWorkout,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setExercises(\r\n          response.data.map((e) => {\r\n            console.log(response.data);\r\n            setOpen(true);\r\n            return e;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleWorkoutClick = (e, selectedWorkout) => {\r\n    fetchWorkoutExercises(selectedWorkout);\r\n  };\r\n\r\n  const handleWorkoutToggle = (value) => () => {\r\n    const currentIndex = props.selectedWorkouts.indexOf(value);\r\n    const newcheckedWorkout = [...props.selectedWorkouts];\r\n\r\n    if (currentIndex === -1) {\r\n      newcheckedWorkout.push(value);\r\n    } else {\r\n      newcheckedWorkout.splice(currentIndex, 1);\r\n    }\r\n\r\n    props.setSelectedWorkouts(newcheckedWorkout);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    fetchPTWorkouts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List aria-label=\"workout-list\"\r\n            subheader={\r\n                <ListSubheader component=\"div\" color=\"inherit\" className={classes.sticky}>\r\n                   Saved Workouts\r\n                </ListSubheader>\r\n            }>\r\n        {workouts.map((w, k) => (\r\n          <div key={k}>\r\n            <ListItem\r\n              button\r\n              selected={props.selectedWorkouts == w.workout_id}\r\n              onClick={(event) => handleWorkoutClick(event, w.workout_id)}\r\n            >\r\n              {w.title}\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  onChange={handleWorkoutToggle(w.workout_id)}\r\n                  checked={props.selectedWorkouts.indexOf(w.workout_id) !== -1}\r\n                  inputProps={{\r\n                    \"aria-labelledby\": `checkbox-list-label-${w.workout_id}`,\r\n                  }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </div>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <List\r\n            style={{\r\n              maxHeight: 400,\r\n              overflowY: \"scroll\",\r\n              backgroundColor: \"white\",\r\n            }}\r\n            subheader={\r\n              <ListSubheader component=\"div\" color=\"inherit\">\r\n                Workout Details\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {exercises.map((e, k) => (\r\n              <div key={k}>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={`Exercise Title`}\r\n                    secondary={e.title}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={e.exercise_id}>\r\n                  <ListItemText\r\n                    primary={`Description`}\r\n                    secondary={e.description}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <a href={e.exercise_url} target=\"_blank\">\r\n                    <img\r\n                      src={\r\n                        \"https://img.youtube.com/vi/\" +\r\n                        e.exercise_url.split(\"=\")[1] +\r\n                        \"/0.jpg\"\r\n                      }\r\n                    />\r\n                  </a>\r\n                </ListItem>\r\n                <Divider />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    // The state of the pt's patients, defined by reducer-pt\r\n    patients: state.pt.patients,\r\n    selectedWorkouts: state.exercises.selectedWorkouts,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchPTsPatients: (pt_id) => dispatch(fetchPTsPatients(pt_id)),\r\n    setSelectedWorkouts: (selectedWorkouts) =>\r\n      dispatch(setSelectedWorkouts(selectedWorkouts)),\r\n  })\r\n)(SavedWorkout);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport PatientList from \"../../Components/PatientList/PatientList\";\r\nimport Messaging from \"../../Components/Messaging/Messaging\";\r\nimport ActivitySummary from \"../../Components/PTActivitySummary/PTActivitySummary\";\r\nimport PatientDashboardInfo from \"../../Components/PatientDashboardInfo/PatientDashboardInfo\";\r\nimport AssignWorkout from \"../../Components/AssignWorkout/AssignWorkout\";\r\nimport SavedWorkout from \"../../Components/SavedWorkout/SavedWorkout\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n//TODO Will most likely have to fix paperMessage margins when we implement\r\n//the actual message board.\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: 24,\r\n    color: theme.palette.secondary.light,\r\n\r\n  },\r\n  paperMessage: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 700,\r\n    width: 350,\r\n    marginTop: 50,\r\n    marginBottom: 139,\r\n  },\r\n  paperPatients: {\r\n    padding: theme.spacing(0),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 650,\r\n    width: 350,\r\n    marginTop: 50,\r\n    marginLeft: 10,\r\n  },\r\n  paperProfile: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    backgroundColor: \"lightgrey\",\r\n    height: 700,\r\n    width: 1000,\r\n    marginTop: 50,\r\n    marginBottom: 139,\r\n    marginRight: 15,\r\n  },\r\n  paperSummary: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    marginTop: 60,\r\n    width: 350,\r\n    height: 825,\r\n  },\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      justify={\"space-between\"}\r\n      alignItems={\"flex-start\"}\r\n    >\r\n      <Messaging />\r\n      <Grid container spacing={3} direction=\"row\" style={{\r\n        margin: 0,\r\n        width: '100%'\r\n      }}>\r\n          <Grid item>\r\n            <Paper\r\n              className={classes.paperPatients}\r\n              style={{ overflow: \"auto\" }}\r\n              elevation={5}\r\n            >\r\n              <PatientList />\r\n            </Paper>\r\n          </Grid>\r\n        <Grid item>\r\n          <Paper className={classes.paperProfile} elevation={5}>\r\n            {/* <PatientsList/>  TODO need to handle Axios or hooks\r\n                        in order to use*/}\r\n            <Typography variant= \"h5\"><u>Patient Profile</u></Typography>\r\n            <PatientDashboardInfo />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item>\r\n          <Grid container spacing={3} direction='column'\r\n          alignItems={\"center\"}>\r\n          <Paper className={classes.paperSummary} elevation={5}>\r\n            <Grid item>\r\n              <Typography><b><u>Total Activity Summary</u></b></Typography>\r\n              <ActivitySummary />\r\n            </Grid>\r\n            <Divider />\r\n            <Grid item>\r\n              <SavedWorkout/>\r\n            </Grid>\r\n            <Divider />\r\n            <Grid item>\r\n            <AssignWorkout/>\r\n            </Grid>\r\n\r\n          </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\n\r\nconst LoginPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>LOGIN PAGE</h1>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    //   border: '2px solid #000',a\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nconst ActivitySummary = ({ selectedPatient }) => {\r\n  const classes = useStyles();\r\n  const [activity, setActivity] = React.useState([]);\r\n\r\n  const fetchSummaryInfo = () => {\r\n    axios\r\n      .get(\"api/pt/patient-activity\", {\r\n        params: {\r\n          patient: 1,\r\n          pt: 100,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setActivity(\r\n          response.data.map((a) => {\r\n            console.log(response.data);\r\n            return a;\r\n          })\r\n        );\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    //will load patients-PT activity summary when the page loads\r\n    fetchSummaryInfo();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    //will load patients-PT activity summary when the page loads\r\n    if (selectedPatient != \"\") fetchSummaryInfo();\r\n  }, [selectedPatient]);\r\n\r\n  return (\r\n    <List\r\n      className={classes.paper}\r\n      aria-label=\"activity-list\"\r\n      style={{ maxHeight: 300 }}\r\n    >\r\n      <ListItem className={classes.modal}>\r\n        <u>\r\n          <b>Activity : Minutes</b>\r\n        </u>\r\n      </ListItem>\r\n      {activity.map((a) => (\r\n        <div>\r\n          <ListItem>{a.type_activity + \" : \" + a.duration}</ListItem>\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ActivitySummary;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\r\nimport PatientVideo from \"../../Components/PatientVideos/PatientVideo\";\r\n\r\nimport SearchReport from \"../../Components/SearchReport/SearchReport\";\r\nimport PatientInfo from \"../../Components/PatientInfo/PatientInfo\";\r\nimport ActivitySummary from \"../../Components/PatientActivitySummary/ActivitySummary\";\r\nimport CurrentWorkout from \"../../Components/PatientWorkout/CurrentWorkout\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxHeight: \"95vh\",\r\n    flexGrow: 1,\r\n    paddingTop: 100,\r\n    background: theme.palette.background.default,\r\n    overflow: \"hidden\",\r\n  },\r\n  paperInfo: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 675,\r\n    width: 350,\r\n    marginLeft: 10,\r\n  },\r\n  paperVideos: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 675,\r\n    width: 350,\r\n    marginBottom: 139,\r\n  },\r\n  paperProgress: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 630,\r\n    width: 400,\r\n  },\r\n  paperSummary: {\r\n    padding: 5,\r\n    marginLeft: 10,\r\n    width: 355,\r\n    height: 200,\r\n  },\r\n  paperWorkout: {\r\n    padding: 5,\r\n    marginBottom: 10,\r\n    width: 420,\r\n    height: 100,\r\n  },\r\n}));\r\n\r\nconst Profile = () => {\r\n  const classes = useStyles();\r\n  //TODO change to reflect desired patient\r\n  const [selectedPatient, setSelectedPatient] = React.useState(1);\r\n  const [selectedWorkout, setSelectedWorkout] = React.useState(\"\");\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} direction=\"row\">\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperInfo} elevation={5}>\r\n            <Typography>Patient Info</Typography>\r\n            <PatientInfo\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperVideos} elevation={5}>\r\n            <Typography>Patient Videos</Typography>\r\n            <PatientVideo\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperWorkout} elevation={5}>\r\n            <CurrentWorkout\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n          <Paper className={classes.paperProgress} elevation={5}>\r\n            <Typography>Progress Log</Typography>\r\n            <SearchReport\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item md={3}>\r\n          <Paper className={classes.paperSummary} elevation={5}>\r\n            <ActivitySummary />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport List from \"@material-ui/core/List\";\r\nimport {\r\n  Divider,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n} from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ReactPlayer from \"react-player\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport {\r\n  fetchExerciseVideos,\r\n  selectedExercises,\r\n  filterExercises,\r\n} from \"../../Redux/actions/actions-pt\";\r\nimport { connect } from \"react-redux\";\r\nimport { PlayArrow, TextFieldsRounded } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    outline: \"none\",\r\n  },\r\n  sticky: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  thumbnail: {\r\n    maxHeight: \"200px\",\r\n  },\r\n  title: {\r\n    //need to set up for dynamic scaling\r\n    marginLeft: 110,\r\n  },\r\n}));\r\n\r\nconst Library = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedVideo, setSelectedVideo] = React.useState([]);\r\n  const [URL, setURL] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // fetchExerciseVideos();\r\n    props.fetchExerciseVideos();\r\n  }, []);\r\n\r\n  const handleVideoClick = (event, exercise_id) => {\r\n    const index = selectedVideo.indexOf(exercise_id);\r\n    const newIndex = [...selectedVideo];\r\n\r\n    if (index === -1) {\r\n      newIndex.push(exercise_id);\r\n    } else {\r\n      newIndex.splice(index, 1);\r\n    }\r\n\r\n    setURL(props.exercises[newIndex - 1].exercise_url);\r\n    console.log(URL);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //Handles checked videos and adds video ids into Checked\r\n  const handleCheckToggle = (value) => () => {\r\n    const currentIndex = props.selectedVideos.indexOf(value);\r\n    const newChecked = [...props.selectedVideos];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    // setChecked(newChecked);\r\n    props.selectedExercises(newChecked);\r\n  };\r\n\r\n  return (\r\n    //TODO add search field and update query to return tags\r\n\r\n    <div className={classes.root}>\r\n      <List component=\"nav\" aria-label=\"video-list\">\r\n        <ListSubheader color=\"inherit\" className={classes.sticky}>\r\n          Exercise Library\r\n        </ListSubheader>\r\n\r\n        {props.exercises.map((ev, k) => (\r\n          <React.Fragment key={k}>\r\n            <Divider />\r\n            <ListItem className={classes.title}>{ev.title}</ListItem>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <PlayArrow\r\n                  edge=\"start\"\r\n                  checked={props.selectedVideos.indexOf(ev.exercise_id) !== -1}\r\n                  tabIndex={-1}\r\n                  onClick={(event) => handleVideoClick(event, ev.exercise_id)}\r\n                  inputprops={{\r\n                    \"aria-labelledby\": `checkbox-list-label-${ev.exercise_id}`,\r\n                  }}\r\n                />\r\n              </ListItemIcon>\r\n              <img className={classes.thumbnail} src={ev.thumbnail} />\r\n              <ListItemSecondaryAction>\r\n                <Checkbox\r\n                  edge=\"end\"\r\n                  tabIndex={-1}\r\n                  disableRipple\r\n                  onChange={handleCheckToggle(ev.exercise_id)}\r\n                  checked={props.selectedVideos.indexOf(ev.exercise_id) !== -1}\r\n                  inputProps={{\r\n                    \"aria-labelledby\": `checkbox-list-label-${ev.exercise_id}`,\r\n                  }}\r\n                />\r\n              </ListItemSecondaryAction>\r\n            </ListItem>\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <ReactPlayer controls={true} url={URL} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    // The state of exercise, as defined by RootReducer\r\n    exercises: state.exercises.exercises,\r\n    selectedVideos: state.exercises.selectedVideos,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchExerciseVideos: () => dispatch(fetchExerciseVideos()),\r\n    selectedExercises: (selectedVideos) =>\r\n      dispatch(selectedExercises(selectedVideos)),\r\n    filterExercises: (exercises, searchTerm) => dispatch(exercises, searchTerm),\r\n  })\r\n)(Library);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { Divider, ListItem, ListItemText, Button } from \"@material-ui/core\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport {\r\n  createWorkout,\r\n  fetchExerciseVideos,\r\n  selectedExercises,\r\n} from \"../../Redux/actions/actions-pt\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Create } from \"@material-ui/icons\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      //   margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n    },\r\n  },\r\n  sticky: {\r\n    color: \"secondary\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst CreateWorkout = (props) => {\r\n  const classes = useStyles();\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [videoDescriptions, setVideoDescriptions] = React.useState([]);\r\n  const [workoutTitle, setWorkoutTitle] = React.useState(\"\");\r\n\r\n  const submitDescription = (desc, index) => {\r\n    setDescription(desc);\r\n\r\n    let instructions = [...videoDescriptions];\r\n    instructions[index] = description;\r\n    setVideoDescriptions([...instructions]);\r\n  };\r\n  //check updates\r\n  console.log(props.selectedVideos);\r\n  console.log(workoutTitle);\r\n  console.log(videoDescriptions);\r\n\r\n  const submitWorkout = () => {\r\n    props.createWorkout(\r\n      props.pt,\r\n      workoutTitle,\r\n      props.selectedVideos,\r\n      videoDescriptions\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"column\" spacing={3}>\r\n        <Grid item>\r\n          <TextField\r\n            color=\"secondary\"\r\n            id=\"standard-multiline-flexible\"\r\n            label=\"Workout Title\"\r\n            multiline\r\n            value={workoutTitle}\r\n            required={true}\r\n            onChange={(e) => {\r\n              setWorkoutTitle(e.target.value);\r\n            }}\r\n            variant=\"outlined\"\r\n            rowsMax={4}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <List\r\n            subheader={\r\n              <ListSubheader className={classes.sticky}>\r\n                Exercises\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {props.selectedVideos.map((ev, k) => (\r\n              <React.Fragment key={k}>\r\n                <Divider />\r\n                <ListItem>\r\n                  <ListItemText>\r\n                    {props.exercises[props.selectedVideos[k] - 1].title}\r\n                  </ListItemText>\r\n                  <TextField\r\n                    key={`description-${props.exercises[k].exercise_id}`}\r\n                    placeholder=\"Exercise Instructions\"\r\n                    label=\"Description\"\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    // value = {description}\r\n                    required={true}\r\n                    onChange={(e) => {\r\n                      setDescription(e.target.value);\r\n                    }}\r\n                    onBlur={(e) => {\r\n                      submitDescription(e.target.value, k);\r\n                    }}\r\n                    multiline\r\n                    rows={4}\r\n                  />\r\n                  <ListItemIcon></ListItemIcon>\r\n                  <Divider />\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n          </List>\r\n          <Button onClick={submitWorkout} variant=\"outlined\">\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    pt: state.pt,\r\n    // The state of exercise, as defined by RootReducer\r\n    exercises: state.exercises.exercises,\r\n    selectedVideos: state.exercises.selectedVideos,\r\n  }),\r\n  (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    fetchExerciseVideos: () => dispatch(fetchExerciseVideos()),\r\n    selectedExercises: (selectedVideos) =>\r\n      dispatch(selectedExercises(selectedVideos)),\r\n    createWorkout: (pt, title, exercises, descriptions) =>\r\n      dispatch(createWorkout(pt, title, exercises, descriptions)),\r\n  })\r\n)(CreateWorkout);\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Library from \"../../Components/ExerciseLibrary/Library\";\r\nimport SavedWorkout from \"../../Components/SavedWorkout/SavedWorkout\";\r\nimport AssignWorkout from \"../../Components/AssignWorkout/AssignWorkout\";\r\nimport CreateWorkout from \"../../Components/CreateWorkout/CreateWorkout\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"95vh\",\r\n    flexGrow: 1,\r\n    paddingTop: 100,\r\n    background: theme.palette.background.default,\r\n    overflow: \"hidden\",\r\n  },\r\n  paperLibrary: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 750,\r\n    width: 450,\r\n    marginTop: 10,\r\n    marginBottom: 139,\r\n    marginLeft: 30,\r\n    overflowX: \"hidden\"\r\n  },\r\n  paperWorkouts: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 700,\r\n    width: 500,\r\n    marginTop: 10,\r\n    marginLeft: 25,\r\n    overflowY: \"scroll\",\r\n  },\r\n  paperAssign: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 400,\r\n    width: 300,\r\n    marginTop: 10,\r\n    marginLeft: 50,\r\n    overflowY: \"scroll\",\r\n  },\r\n  paperPatients: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.secondary.main,\r\n    height: 325,\r\n    width: 300,\r\n    marginTop: 10,\r\n    marginLeft: 50,\r\n  },\r\n}));\r\n\r\nconst Exercise = () => {\r\n  const classes = useStyles();\r\n  // const [selectedWorkout, setSelectedWorkout] = React.useState([]);\r\n  const [checkedWorkout, setCheckedWorkout] = React.useState([]);\r\n  const [checked, setChecked] = React.useState([]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3} direction=\"row\" justify={\"space-between\"} >\r\n        <Grid item md={3}>\r\n          <Paper\r\n            className={classes.paperLibrary}\r\n            elevation={5}\r\n            style={{ maxHeight: 700, overflowY: \"scroll\", paddingTop: \"0px\" }}\r\n          >\r\n            {/* <Typography>Exercise Library</Typography> */}\r\n            <Library checked={checked} setChecked={setChecked} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paperWorkouts} elevation={5}>\r\n            <Typography>Create Workout</Typography>\r\n            <CreateWorkout checked={checked} setChecked={setChecked} />\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Paper className={classes.paperAssign} elevation={5}>\r\n            <SavedWorkout\r\n              checkedWorkout={checkedWorkout}\r\n              setCheckedWorkout={{ setCheckedWorkout }}\r\n            />\r\n          </Paper>\r\n          <Paper className={classes.paperPatients} elevation={5}>\r\n            <AssignWorkout checkedWorkout={checkedWorkout} />\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Exercise;\r\n","import React from 'react'\r\nimport {loginPT} from '../Redux/actions/actions-pt.js';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Landing from \"./LandingPage/index\"\r\n//TODO maybe this should be in the component folder since we can just login straight in the \r\n//landing page\r\nconst Login = (props) => {\r\n    //essentially handles submit on loginForm\r\n    const [error, setError] = React.useState('')\r\n\r\n    const handleLogin = (data) => {\r\n        props.loginPT(data)\r\n        setError(props.errorCode)\r\n    }\r\n    console.log(error)\r\n    return (\r\n        <div>\r\n        {props.pt.pt_id ? <Redirect to=\"/dashboard\"/> : null}\r\n        <Landing handleLogin={handleLogin} error={error}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect((state) => ({\r\n    // The state of the pt, as defined by reducer-pt\r\n    pt: state.pt,\r\n    errorCode: state.errorCode\r\n}), (dispatch) => ({\r\n    // The action from actions-pt which will effect reducer-pt\r\n    loginPT: (data) => dispatch(loginPT(data))\r\n})\r\n)(Login)\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Landing from \"./Pages/LandingPage/index\";\r\nimport Dashboard from \"./Pages/Dashboard/Dashboard\";\r\nimport LoginPage from \"./Pages/LoginPage/LoginPage\";\r\nimport Profile from \"./Pages/PatientProfile/Profile\";\r\nimport Exercise from \"./Pages/ExerciseLibrary/Exercise\";\r\nimport Login from \"./Pages/Login\"\r\n//Will handle all page routing\r\n//TODO ask if we still need to keep about me pages\r\nexport const Routes = () => (\r\n    <Switch>\r\n        <Route exact={true} path='/'>\r\n            <Login/>\r\n        </Route>\r\n        <Route exact={true} path='/dashboard'>\r\n            <Dashboard/>\r\n        </Route>\r\n        <Route exact={true} path='/loginpage'>\r\n            <LoginPage/>\r\n        </Route>\r\n        <Route exact={true} path='/profile'>\r\n            <Profile/>\r\n        </Route>\r\n        <Route exact={true} path='/library'>\r\n            <Exercise/>\r\n        </Route>\r\n    </Switch>\r\n);\r\n","import { createMuiTheme } from \"@material-ui/core/styles\"; //different from @@material-ui/styles\r\nimport React from \"react\";\r\n\r\nconst darkBlue = \"#00559A\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    common: {\r\n      blue: `${darkBlue}`,\r\n    },\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: \"#FAFAFA\",\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n    },\r\n    secondary: {\r\n      light: \"#0066ff\",\r\n      main: `${darkBlue}`,\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: \"#00559A\",\r\n    },\r\n\r\n    background: {\r\n      default: \"#FAFAFA\",\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 0,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n  typography: {\r\n    h2: {\r\n      fontFamily: \"Roboto\",\r\n      fontSize: \"4.5rem\",\r\n      fontWeight: \"700\",\r\n      color: `${darkBlue}`,\r\n    },\r\n    h5: {\r\n      fontFamily: \"Roboto\",\r\n      fontSize: \"1.5rem\",\r\n      fontWeight: \"700\",\r\n      color: `${darkBlue}`,\r\n    },\r\n    h6: {\r\n      fontFamily: \"Roboto\",\r\n      fontSize: \"1.5rem\",\r\n      fontWeight: \"700\",\r\n      color: `${darkBlue}`,\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport logo from \"../../Assets/Images/logo_with_text.svg\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginPT, logoutPT} from \"../../Redux/actions/actions-pt\";\r\n\r\n//TODO when you click the logo, redirect to dashboard\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 3,\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: 10,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  logo: {\r\n    width: 200,\r\n  },\r\n  accountCircle: {\r\n    marginLeft: \"auto\",\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nconst Header = (props) => {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorElLeft, setAnchorElLeft] = React.useState(null);\r\n  const [anchorElRight, setAnchorElRight] = React.useState(null);\r\n  const openLeft = Boolean(anchorElLeft);\r\n  const openRight = Boolean(anchorElRight);\r\n\r\n  const logout = () => {\r\n      props.logoutPT(props.pt);\r\n      window.location.href='/';\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorElLeft(event.currentTarget);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorElRight(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorElLeft(null);\r\n    setAnchorElRight(null);\r\n  };\r\n  const handleRedirect = () => {\r\n    setAnchorElLeft(null);\r\n    setAnchorElRight(null);\r\n    if (anchorElLeft == null || anchorElRight == null)\r\n      return <Redirect to=\"/dashboard\" />;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar disableGutters>\r\n          <div className={classes.menuButton}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              aria-label=\"drop-down\"\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenu}\r\n              color=\"secondary\"\r\n            >\r\n              <MenuIcon color=\"secondary\" />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorElLeft}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"center\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"center\",\r\n              }}\r\n              open={openLeft}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/dashboard\">\r\n                Dashboard\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/library\">\r\n                Exercise Library\r\n              </MenuItem>\r\n              <MenuItem onClick={handleClose} component={Link} to=\"/settings\">\r\n                Settings\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Button disableTouchRipple={true} href=\"/\">\r\n            <img alt=\"company logo\" src={logo} className={classes.logo} />\r\n          </Button>\r\n          {auth && (\r\n            <div className={classes.accountCircle}>\r\n              <IconButton\r\n                edge=\"start\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                color=\"secondary\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElRight}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                  vertical: \"center\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"right\",\r\n                }}\r\n                open={openRight}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose} component={Link} to=\"/settings\">\r\n                  My Profile\r\n                </MenuItem>\r\n                <MenuItem onClick={logout}>\r\n                  Logout\r\n                </MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect((state) => ({\r\n      pt: state.pt,\r\n    }), (dispatch) => ({\r\n      //May be used if we add a login to the dropdown\r\n      loginPT: (data) => dispatch(loginPT(data)),\r\n      logoutPT: (pt) => dispatch(logoutPT(pt))\r\n    })\r\n)(Header);\r\n","import React from \"react\";\r\nimport { Routes } from \"./Routes\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport theme from \"./Components/UI/Theme\";\r\nimport \"./App.css\";\r\nimport Header from \"./Components/Header/Header\"; //App bar\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline/>\r\n        <Header />\r\n        <Routes />\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { handleActions } from \"redux-actions\";\r\nimport * as constants from \"../constants/constants-patient\";\r\n\r\nconst initialPatientState = {\r\n  patients: [\r\n    {\r\n      patient_id: 1,\r\n      user: 14,\r\n      pt: 2,\r\n      prospective_pt: 2,\r\n      user_id: 14,\r\n      email: \"test@mail.com\",\r\n      f_name: \"jane\",\r\n      l_name: \"doe\",\r\n      company: \"the NY co\",\r\n      injury: '',\r\n    },\r\n  ],\r\n};\r\n\r\nconst PatientsReducer = handleActions(\r\n  {\r\n    // TODO: check that this actually works\r\n    [constants.CREATE_PATIENT]: (state, action) => {\r\n      const patient = action.payload.patient;\r\n      const newPatients = state.patients.slice();\r\n      newPatients.push(patient);\r\n\r\n      return {\r\n        patients: newPatients,\r\n      };\r\n    },\r\n\r\n    // TODO: check that this actually works\r\n    [constants.UPDATE_PATIENT_PTS]: (state, action) => {\r\n      const newPatients = state.patients.slice();\r\n      const patient = newPatients.find(action.payload.patient);\r\n      patient.pt_id = action.payload.pt;\r\n      patient.prospective_pt = action.payload.prospective_pt;\r\n\r\n      return {\r\n        patients: newPatients,\r\n      };\r\n    },\r\n\r\n    [constants.GET_PATIENTS]: (state, action) => {\r\n      return {\r\n        patients: action.payload.patients,\r\n      };\r\n    },\r\n  },\r\n  initialPatientState\r\n);\r\n\r\nexport default PatientsReducer;\r\n","export const CREATE_PATIENT = \"CREATE_PATIENT\";\r\nexport const GET_PATIENTS = \"GET_PATIENTS\";\r\nexport const UPDATE_PATIENT_PTS = \"UPDATE_PATIENT_PTS\";\r\n","import { handleActions } from \"redux-actions\";\r\nimport * as constants from \"../constants/constants-pt\";\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { persistReducer } from \"redux-persist\";\r\n\r\nconst initialPTState = {\r\n    pt_id: '',\r\n    user: null,\r\n    user_id: null,\r\n    email: '',\r\n    f_name: '',\r\n    l_name: '',\r\n    company: '',\r\n    patients: [{}],\r\n    selectedPatient: {},\r\n    errorCode: ''\r\n};\r\n\r\nconst PTReducer = handleActions(\r\n  {\r\n    [constants.GET_PT_PATIENTS]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        patients: action.payload,\r\n      };\r\n    },\r\n\r\n    [constants.CREATE_PT]: (state, action) => {\r\n      const pt = action.payload;\r\n      // TODO: we might be able to just say return { action.payload } but idk, test it out?\r\n      return {\r\n        email: pt.email,\r\n        f_name: pt.f_name,\r\n        l_name: pt.l_name,\r\n        company: pt.company,\r\n        patients: [],\r\n      };\r\n    },\r\n\r\n    [constants.UPDATE_PT]: (state, action) => {\r\n      console.log(action.payload);\r\n      return {\r\n        // ...state allows it to keep existing state, and only update pt_id, user, and user_id\r\n        ...state,\r\n        pt_id: action.payload.pt_id,\r\n        user: action.payload.user,\r\n        user_id: action.payload.user_id,\r\n      };\r\n    },\r\n    [constants.LOGIN_PT]: (state, action) => {\r\n      const pt = action.payload;\r\n      return {\r\n        email: pt.email,\r\n      };\r\n    },\r\n    [constants.CHECK_LOGIN_ERROR]: (state, action) => {\r\n        const errorCode = action.payload\r\n        console.log(errorCode)\r\n        return {\r\n        ...state,\r\n            errorCode: errorCode}\r\n    },\r\n    [constants.SET_SELECTED_PATIENT]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        selectedPatient: action.payload,\r\n      };\r\n    },\r\n      [constants.LOGOUT_PT]: (state,action) => {\r\n        const pt = action.payload;\r\n        return {\r\n            pt: pt,\r\n        };\r\n      },\r\n  },\r\n  initialPTState\r\n);\r\n\r\nconst persistConfig = {\r\n    key: 'pt',\r\n    storage: storage,\r\n    whitelist: ['pt_id'],\r\n    blacklist: ['selectedPatient', 'patients', 'errorCode'],\r\n};\r\n\r\nexport default persistReducer(persistConfig, PTReducer);\r\n","import { handleActions } from \"redux-actions\";\r\nimport * as constants from \"../constants/constants-workouts\";\r\nconst initialWorkoutState = {\r\n  description: \"\",\r\n  exercise_id: null,\r\n  exercise_url: \"\",\r\n  tags: \"\",\r\n  title: \"\",\r\n  thumbnail: \"\",\r\n  exercises: [{}],\r\n  selectedVideos: [],\r\n  selectedWorkouts: [],\r\n  patientExerciseVideos: []\r\n};\r\n\r\nconst WorkoutReducer = handleActions(\r\n  {\r\n    [constants.GET_EXERCISE_VIDEOS]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        exercises: action.payload,\r\n      };\r\n    },\r\n    [constants.GET_SELECTED_VIDEOS]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        selectedVideos: action.payload,\r\n      };\r\n    },\r\n    [constants.GET_SELECTED_WORKOUTS]: (state, action) => {\r\n      return {\r\n        ...state,\r\n        selectedWorkouts: action.payload,\r\n      }\r\n    },\r\n    [constants.GET_PATIENT_EXERCISE_VIDEOS] : (state, action) => {\r\n      return {\r\n      ...state,\r\n      patientExerciseVideos: action.payload\r\n      }\r\n  }\r\n    // [constants.CREATE_NEW_WORKOUT] : (state,action) => {\r\n    //     return {\r\n    //         ...state,\r\n    //         newWorkout: action.payload\r\n    //     }\r\n    // }\r\n  },\r\n  initialWorkoutState\r\n);\r\n\r\nexport default WorkoutReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport PatientsReducer from \"./reducer-patients\";\r\nimport PTReducer from \"./reducer-pt\";\r\nimport WorkoutReducer from \"./reducer-workouts\";\r\n\r\nconst rootReducer = combineReducers({\r\n  patients: PatientsReducer,\r\n  pt: PTReducer,\r\n  exercises: WorkoutReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducer/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {persistStore, persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    whitelist: ['pt'],\r\n    blacklist: ['exercises', 'patients'],\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\nconst initialState = {};\r\n\r\n// redux-thunk middleware is required for actions to work as async\r\nconst middleware = [thunk];\r\n\r\nconst persistentReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n//Where all the data (or states) is gonna be stored\r\nexport const store = createStore(\r\n    persistentReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport const persistor = persistStore(store)\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport axios from \"axios\";\r\nimport {PersistGate} from \"redux-persist/lib/integration/react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport {store, persistor } from \"./Redux/store/store\";\r\n\r\n\r\naxios.defaults.baseURL = \"https://api.pthealth.club/\";\r\naxios.defaults.headers = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Methods\": \"OPTIONS, GET, POST, PUT, PATCH, DELETE\",\r\n  \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\r\n};\r\n//Provider makes the store available to every component under App\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n      </PersistGate>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}